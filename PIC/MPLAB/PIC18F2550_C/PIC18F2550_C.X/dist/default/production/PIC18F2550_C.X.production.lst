

Microchip Technology PIC18 LITE Macro Assembler V1.31 build 56723 
                                                                                               Tue Apr 15 18:51:13 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 56723
     1                           	processor	18F2550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	idataBANK1,global,class=CODE,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    42                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    43  0000                     
    44                           	psect	idataCOMRAM
    45  006EC3                     __pidataCOMRAM:
    46                           	opt stack 0
    47                           
    48                           ;initializer for can_serial_transmit_msg@F4842
    49  006EC3  43                 	db	67
    50  006EC4  41                 	db	65
    51  006EC5  4E                 	db	78
    52  006EC6  20                 	db	32
    53  006EC7  44                 	db	68
    54  006EC8  41                 	db	65
    55  006EC9  54                 	db	84
    56  006ECA  41                 	db	65
    57  006ECB  3A                 	db	58
    58  006ECC  20                 	db	32
    59  006ECD  00                 	db	0
    60                           
    61                           ;initializer for can_init@F4823
    62  006ECE  0000               	dw	0
    63  006ED0  0002               	dw	2
    64                           
    65                           	psect	idataBANK0
    66  006EF5                     __pidataBANK0:
    67                           	opt stack 0
    68                           
    69                           ;initializer for can_serial_transmit_msg@F4840
    70  006EF5  43                 	db	67
    71  006EF6  41                 	db	65
    72  006EF7  4E                 	db	78
    73  006EF8  20                 	db	32
    74  006EF9  49                 	db	73
    75  006EFA  44                 	db	68
    76  006EFB  3A                 	db	58
    77  006EFC  20                 	db	32
    78  006EFD  00                 	db	0
    79                           
    80                           ;initializer for _msgID0
    81  006EFE  00D8               	dw	_can_msg_ID_0& (0+65535)
    82                           
    83                           ;initializer for _msgID1
    84  006F00  00DC               	dw	_can_msg_ID_1& (0+65535)
    85                           
    86                           ;initializer for _numbytes0
    87  006F02  00E0               	dw	_num_bytes_0& (0+65535)
    88                           
    89                           ;initializer for _numbytes1
    90  006F04  00E1               	dw	_num_bytes_1& (0+65535)
    91                           
    92                           ;initializer for _rxdata0
    93  006F06  00C8               	dw	_rx_data_0& (0+65535)
    94                           
    95                           ;initializer for _rxdata1
    96  006F08  00D0               	dw	_rx_data_1& (0+65535)
    97                           
    98                           	psect	idataBANK1
    99  00730F                     __pidataBANK1:
   100                           	opt stack 0
   101                           
   102                           ;initializer for error_handle@F4850
   103  00730F  52                 	db	82
   104  007310  65                 	db	101
   105  007311  73                 	db	115
   106  007312  65                 	db	101
   107  007313  74                 	db	116
   108  007314  74                 	db	116
   109  007315  69                 	db	105
   110  007316  6E                 	db	110
   111  007317  67                 	db	103
   112  007318  20                 	db	32
   113  007319  43                 	db	67
   114  00731A  41                 	db	65
   115  00731B  4E                 	db	78
   116  00731C  20                 	db	32
   117  00731D  49                 	db	73
   118  00731E  43                 	db	67
   119  00731F  20                 	db	32
   120  007320  64                 	db	100
   121  007321  75                 	db	117
   122  007322  65                 	db	101
   123  007323  20                 	db	32
   124  007324  74                 	db	116
   125  007325  6F                 	db	111
   126  007326  20                 	db	32
   127  007327  65                 	db	101
   128  007328  78                 	db	120
   129  007329  63                 	db	99
   130  00732A  65                 	db	101
   131  00732B  73                 	db	115
   132  00732C  73                 	db	115
   133  00732D  20                 	db	32
   134  00732E  65                 	db	101
   135  00732F  72                 	db	114
   136  007330  72                 	db	114
   137  007331  6F                 	db	111
   138  007332  72                 	db	114
   139  007333  73                 	db	115
   140  007334  0A                 	db	10
   141  007335  00                 	db	0
   142                           
   143                           ;initializer for error_handle@F4848
   144  007336  45                 	db	69
   145  007337  72                 	db	114
   146  007338  72                 	db	114
   147  007339  6F                 	db	111
   148  00733A  72                 	db	114
   149  00733B  20                 	db	32
   150  00733C  63                 	db	99
   151  00733D  6F                 	db	111
   152  00733E  75                 	db	117
   153  00733F  6E                 	db	110
   154  007340  74                 	db	116
   155  007341  20                 	db	32
   156  007342  6E                 	db	110
   157  007343  65                 	db	101
   158  007344  61                 	db	97
   159  007345  72                 	db	114
   160  007346  69                 	db	105
   161  007347  6E                 	db	110
   162  007348  67                 	db	103
   163  007349  20                 	db	32
   164  00734A  31                 	db	49
   165  00734B  32                 	db	50
   166  00734C  38                 	db	56
   167  00734D  0A                 	db	10
   168  00734E  00                 	db	0
   169                           
   170                           ;initializer for error_handle@F4852
   171  00734F  45                 	db	69
   172  007350  72                 	db	114
   173  007351  72                 	db	114
   174  007352  6F                 	db	111
   175  007353  72                 	db	114
   176  007354  20                 	db	32
   177  007355  63                 	db	99
   178  007356  6F                 	db	111
   179  007357  75                 	db	117
   180  007358  6E                 	db	110
   181  007359  74                 	db	116
   182  00735A  20                 	db	32
   183  00735B  62                 	db	98
   184  00735C  65                 	db	101
   185  00735D  6C                 	db	108
   186  00735E  6F                 	db	111
   187  00735F  77                 	db	119
   188  007360  20                 	db	32
   189  007361  39                 	db	57
   190  007362  36                 	db	54
   191  007363  0A                 	db	10
   192  007364  00                 	db	0
   193                           
   194                           ;initializer for can_serial_transmit_msg@F4830
   195  007365  53                 	db	83
   196  007366  54                 	db	84
   197  007367  41                 	db	65
   198  007368  4E                 	db	78
   199  007369  44                 	db	68
   200  00736A  41                 	db	65
   201  00736B  52                 	db	82
   202  00736C  44                 	db	68
   203  00736D  20                 	db	32
   204  00736E  4D                 	db	77
   205  00736F  45                 	db	69
   206  007370  53                 	db	83
   207  007371  53                 	db	83
   208  007372  41                 	db	65
   209  007373  47                 	db	71
   210  007374  45                 	db	69
   211  007375  2F                 	db	47
   212  007376  6E                 	db	110
   213  007377  00                 	db	0
   214                           
   215                           ;initializer for can_serial_transmit_msg@F4832
   216  007378  45                 	db	69
   217  007379  58                 	db	88
   218  00737A  54                 	db	84
   219  00737B  45                 	db	69
   220  00737C  4E                 	db	78
   221  00737D  44                 	db	68
   222  00737E  45                 	db	69
   223  00737F  44                 	db	68
   224  007380  20                 	db	32
   225  007381  4D                 	db	77
   226  007382  45                 	db	69
   227  007383  53                 	db	83
   228  007384  53                 	db	83
   229  007385  41                 	db	65
   230  007386  47                 	db	71
   231  007387  45                 	db	69
   232  007388  2F                 	db	47
   233  007389  6E                 	db	110
   234  00738A  00                 	db	0
   235                           
   236                           ;initializer for can_serial_transmit_msg@F4838
   237  00738B  4E                 	db	78
   238  00738C  4F                 	db	79
   239  00738D  2E                 	db	46
   240  00738E  20                 	db	32
   241  00738F  4F                 	db	79
   242  007390  46                 	db	70
   243  007391  20                 	db	32
   244  007392  42                 	db	66
   245  007393  59                 	db	89
   246  007394  54                 	db	84
   247  007395  45                 	db	69
   248  007396  53                 	db	83
   249  007397  3A                 	db	58
   250  007398  20                 	db	32
   251  007399  00                 	db	0
   252                           
   253                           ;initializer for can_serial_transmit_msg@F4834
   254  00739A  42                 	db	66
   255  00739B  55                 	db	85
   256  00739C  46                 	db	70
   257  00739D  46                 	db	70
   258  00739E  45                 	db	69
   259  00739F  52                 	db	82
   260  0073A0  3A                 	db	58
   261  0073A1  20                 	db	32
   262  0073A2  52                 	db	82
   263  0073A3  58                 	db	88
   264  0073A4  42                 	db	66
   265  0073A5  30                 	db	48
   266  0073A6  0A                 	db	10
   267  0073A7  00                 	db	0
   268                           
   269                           ;initializer for can_serial_transmit_msg@F4836
   270  0073A8  42                 	db	66
   271  0073A9  55                 	db	85
   272  0073AA  46                 	db	70
   273  0073AB  46                 	db	70
   274  0073AC  45                 	db	69
   275  0073AD  52                 	db	82
   276  0073AE  3A                 	db	58
   277  0073AF  20                 	db	32
   278  0073B0  52                 	db	82
   279  0073B1  58                 	db	88
   280  0073B2  42                 	db	66
   281  0073B3  31                 	db	49
   282  0073B4  0A                 	db	10
   283  0073B5  00                 	db	0
   284  0000                     _LATC	set	3979
   285  0000                     _PIR1bits	set	3998
   286  0000                     _SPBRG	set	4015
   287  0000                     _SSPBUF	set	4041
   288  0000                     _SSPCON1	set	4038
   289  0000                     _SSPCON1bits	set	4038
   290  0000                     _SSPSTAT	set	4039
   291  0000                     _SSPSTATbits	set	4039
   292  0000                     _TRISAbits	set	3986
   293  0000                     _TRISBbits	set	3987
   294  0000                     _TRISC	set	3988
   295  0000                     _TRISCbits	set	3988
   296  0000                     _TXREG	set	4013
   297  0000                     _BRG16	set	32195
   298  0000                     _BRGH	set	32098
   299  0000                     _RC6	set	31766
   300  0000                     _SPEN	set	32095
   301  0000                     _SYNC	set	32100
   302  0000                     _TRMT	set	32097
   303  0000                     _TXEN	set	32101
   304                           
   305                           ; #config settings
   306  0000                     
   307                           	psect	cinit
   308  0071F4                     __pcinit:
   309                           	opt stack 0
   310  0071F4                     start_initialization:
   311                           	opt stack 0
   312  0071F4                     __initialization:
   313                           	opt stack 0
   314                           
   315                           ; Clear objects allocated to BANK0 (27 bytes)
   316  0071F4  EE00  F0C7         	lfsr	0,__pbssBANK0
   317  0071F8  0E1B               	movlw	27
   318  0071FA                     clear_0:
   319  0071FA  6AEE               	clrf	postinc0,c
   320  0071FC  06E8               	decf	wreg,f,c
   321  0071FE  E1FD               	bnz	clear_0
   322                           
   323                           ; Clear objects allocated to COMRAM (14 bytes)
   324  007200  EE00  F04A         	lfsr	0,__pbssCOMRAM
   325  007204  0E0E               	movlw	14
   326  007206                     clear_1:
   327  007206  6AEE               	clrf	postinc0,c
   328  007208  06E8               	decf	wreg,f,c
   329  00720A  E1FD               	bnz	clear_1
   330                           
   331                           ; Initialize objects allocated to BANK1 (167 bytes)
   332                           ; load TBLPTR registers with __pidataBANK1
   333  00720C  0E0F               	movlw	low __pidataBANK1
   334  00720E  6EF6               	movwf	tblptrl,c
   335  007210  0E73               	movlw	high __pidataBANK1
   336  007212  6EF7               	movwf	tblptrh,c
   337  007214  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   338  007216  6EF8               	movwf	tblptru,c
   339  007218  EE01  F000         	lfsr	0,__pdataBANK1
   340  00721C  EE10 F0A7          	lfsr	1,167
   341  007220                     copy_data0:
   342  007220  0009               	tblrd		*+
   343  007222  CFF5 FFEE          	movff	tablat,postinc0
   344  007226  50E5               	movf	postdec1,w,c
   345  007228  50E1               	movf	fsr1l,w,c
   346  00722A  E1FA               	bnz	copy_data0
   347                           
   348                           ; Initialize objects allocated to BANK0 (21 bytes)
   349                           ; load TBLPTR registers with __pidataBANK0
   350  00722C  0EF5               	movlw	low __pidataBANK0
   351  00722E  6EF6               	movwf	tblptrl,c
   352  007230  0E6E               	movlw	high __pidataBANK0
   353  007232  6EF7               	movwf	tblptrh,c
   354  007234  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   355  007236  6EF8               	movwf	tblptru,c
   356  007238  EE00  F0E2         	lfsr	0,__pdataBANK0
   357  00723C  EE10 F015          	lfsr	1,21
   358  007240                     copy_data1:
   359  007240  0009               	tblrd		*+
   360  007242  CFF5 FFEE          	movff	tablat,postinc0
   361  007246  50E5               	movf	postdec1,w,c
   362  007248  50E1               	movf	fsr1l,w,c
   363  00724A  E1FA               	bnz	copy_data1
   364                           
   365                           ; Initialize objects allocated to COMRAM (15 bytes)
   366                           ; load TBLPTR registers with __pidataCOMRAM
   367  00724C  0EC3               	movlw	low __pidataCOMRAM
   368  00724E  6EF6               	movwf	tblptrl,c
   369  007250  0E6E               	movlw	high __pidataCOMRAM
   370  007252  6EF7               	movwf	tblptrh,c
   371  007254  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   372  007256  6EF8               	movwf	tblptru,c
   373  007258  EE00  F03B         	lfsr	0,__pdataCOMRAM
   374  00725C  EE10 F00F          	lfsr	1,15
   375  007260                     copy_data2:
   376  007260  0009               	tblrd		*+
   377  007262  CFF5 FFEE          	movff	tablat,postinc0
   378  007266  50E5               	movf	postdec1,w,c
   379  007268  50E1               	movf	fsr1l,w,c
   380  00726A  E1FA               	bnz	copy_data2
   381  00726C                     end_of_initialization:
   382                           	opt stack 0
   383  00726C                     __end_of__initialization:
   384                           	opt stack 0
   385  00726C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   386  00726E  6EF8               	movwf	tblptru,c
   387  007270  0100               	movlb	0
   388  007272  EF98  F038         	goto	_main	;jump to C main() function
   389                           tblptru	equ	0xFF8
   390                           tblptrh	equ	0xFF7
   391                           tblptrl	equ	0xFF6
   392                           tablat	equ	0xFF5
   393                           postinc0	equ	0xFEE
   394                           wreg	equ	0xFE8
   395                           postdec1	equ	0xFE5
   396                           fsr1l	equ	0xFE1
   397                           
   398                           	psect	bssCOMRAM
   399  00004A                     __pbssCOMRAM:
   400                           	opt stack 0
   401  00004A                     can_init@F4819:
   402                           	opt stack 0
   403  00004A                     	ds	4
   404  00004E                     CAN2510BitTimeInit@WriteData:
   405                           	opt stack 0
   406  00004E                     	ds	1
   407  00004F                     CAN2510BitTimeInit@databyte:
   408                           	opt stack 0
   409  00004F                     	ds	1
   410  000050                     CAN2510DataRead@DLCRegister:
   411                           	opt stack 0
   412  000050                     	ds	1
   413  000051                     CAN2510DataRead@bufferAddr:
   414                           	opt stack 0
   415  000051                     	ds	1
   416  000052                     CAN2510DataRead@readValue:
   417                           	opt stack 0
   418  000052                     	ds	1
   419  000053                     CAN2510Init@setting:
   420                           	opt stack 0
   421  000053                     	ds	1
   422  000054                     CAN2510SetMsgFilterStd@currFilter:
   423                           	opt stack 0
   424  000054                     	ds	1
   425  000055                     CAN2510SetMsgFilterStd@modebits:
   426                           	opt stack 0
   427  000055                     	ds	1
   428  000056                     _buffer_num:
   429                           	opt stack 0
   430  000056                     	ds	1
   431  000057                     _receive_flag:
   432                           	opt stack 0
   433  000057                     	ds	1
   434                           tblptru	equ	0xFF8
   435                           tblptrh	equ	0xFF7
   436                           tblptrl	equ	0xFF6
   437                           tablat	equ	0xFF5
   438                           postinc0	equ	0xFEE
   439                           wreg	equ	0xFE8
   440                           postdec1	equ	0xFE5
   441                           fsr1l	equ	0xFE1
   442                           
   443                           	psect	dataCOMRAM
   444  00003B                     __pdataCOMRAM:
   445                           	opt stack 0
   446  00003B                     can_serial_transmit_msg@F4842:
   447                           	opt stack 0
   448  00003B                     	ds	11
   449  000046                     can_init@F4823:
   450                           	opt stack 0
   451  000046                     	ds	4
   452                           tblptru	equ	0xFF8
   453                           tblptrh	equ	0xFF7
   454                           tblptrl	equ	0xFF6
   455                           tablat	equ	0xFF5
   456                           postinc0	equ	0xFEE
   457                           wreg	equ	0xFE8
   458                           postdec1	equ	0xFE5
   459                           fsr1l	equ	0xFE1
   460                           
   461                           	psect	bssBANK0
   462  0000C7                     __pbssBANK0:
   463                           	opt stack 0
   464  0000C7                     _msg_stat:
   465                           	opt stack 0
   466  0000C7                     	ds	1
   467  0000C8                     _rx_data_0:
   468                           	opt stack 0
   469  0000C8                     	ds	8
   470  0000D0                     _rx_data_1:
   471                           	opt stack 0
   472  0000D0                     	ds	8
   473  0000D8                     _can_msg_ID_0:
   474                           	opt stack 0
   475  0000D8                     	ds	4
   476  0000DC                     _can_msg_ID_1:
   477                           	opt stack 0
   478  0000DC                     	ds	4
   479  0000E0                     _num_bytes_0:
   480                           	opt stack 0
   481  0000E0                     	ds	1
   482  0000E1                     _num_bytes_1:
   483                           	opt stack 0
   484  0000E1                     	ds	1
   485                           tblptru	equ	0xFF8
   486                           tblptrh	equ	0xFF7
   487                           tblptrl	equ	0xFF6
   488                           tablat	equ	0xFF5
   489                           postinc0	equ	0xFEE
   490                           wreg	equ	0xFE8
   491                           postdec1	equ	0xFE5
   492                           fsr1l	equ	0xFE1
   493                           
   494                           	psect	dataBANK0
   495  0000E2                     __pdataBANK0:
   496                           	opt stack 0
   497  0000E2                     can_serial_transmit_msg@F4840:
   498                           	opt stack 0
   499  0000E2                     	ds	9
   500  0000EB                     _msgID0:
   501                           	opt stack 0
   502  0000EB                     	ds	2
   503  0000ED                     _msgID1:
   504                           	opt stack 0
   505  0000ED                     	ds	2
   506  0000EF                     _numbytes0:
   507                           	opt stack 0
   508  0000EF                     	ds	2
   509  0000F1                     _numbytes1:
   510                           	opt stack 0
   511  0000F1                     	ds	2
   512  0000F3                     _rxdata0:
   513                           	opt stack 0
   514  0000F3                     	ds	2
   515  0000F5                     _rxdata1:
   516                           	opt stack 0
   517  0000F5                     	ds	2
   518                           tblptru	equ	0xFF8
   519                           tblptrh	equ	0xFF7
   520                           tblptrl	equ	0xFF6
   521                           tablat	equ	0xFF5
   522                           postinc0	equ	0xFEE
   523                           wreg	equ	0xFE8
   524                           postdec1	equ	0xFE5
   525                           fsr1l	equ	0xFE1
   526                           
   527                           	psect	dataBANK1
   528  000100                     __pdataBANK1:
   529                           	opt stack 0
   530  000100                     error_handle@F4850:
   531                           	opt stack 0
   532  000100                     	ds	39
   533  000127                     error_handle@F4848:
   534                           	opt stack 0
   535  000127                     	ds	25
   536  000140                     error_handle@F4852:
   537                           	opt stack 0
   538  000140                     	ds	22
   539  000156                     can_serial_transmit_msg@F4830:
   540                           	opt stack 0
   541  000156                     	ds	19
   542  000169                     can_serial_transmit_msg@F4832:
   543                           	opt stack 0
   544  000169                     	ds	19
   545  00017C                     can_serial_transmit_msg@F4838:
   546                           	opt stack 0
   547  00017C                     	ds	15
   548  00018B                     can_serial_transmit_msg@F4834:
   549                           	opt stack 0
   550  00018B                     	ds	14
   551  000199                     can_serial_transmit_msg@F4836:
   552                           	opt stack 0
   553  000199                     	ds	14
   554                           tblptru	equ	0xFF8
   555                           tblptrh	equ	0xFF7
   556                           tblptrl	equ	0xFF6
   557                           tablat	equ	0xFF5
   558                           postinc0	equ	0xFEE
   559                           wreg	equ	0xFE8
   560                           postdec1	equ	0xFE5
   561                           fsr1l	equ	0xFE1
   562                           
   563                           	psect	cstackBANK0
   564  000060                     __pcstackBANK0:
   565                           	opt stack 0
   566  000060                     can_serial_transmit_msg@buffer_0_msg:
   567                           	opt stack 0
   568  000060                     error_handle@warning_msg:
   569                           	opt stack 0
   570                           
   571                           ; 25 bytes @ 0x0
   572  000060                     	ds	14
   573  00006E                     can_serial_transmit_msg@buffer_1_msg:
   574                           	opt stack 0
   575                           
   576                           ; 14 bytes @ 0xE
   577  00006E                     	ds	11
   578  000079                     error_handle@reset_msg:
   579                           	opt stack 0
   580                           
   581                           ; 39 bytes @ 0x19
   582  000079                     	ds	3
   583  00007C                     can_serial_transmit_msg@std_msg:
   584                           	opt stack 0
   585                           
   586                           ; 19 bytes @ 0x1C
   587  00007C                     	ds	19
   588  00008F                     can_serial_transmit_msg@xtd_msg:
   589                           	opt stack 0
   590                           
   591                           ; 19 bytes @ 0x2F
   592  00008F                     	ds	17
   593  0000A0                     error_handle@all_clear_msg:
   594                           	opt stack 0
   595                           
   596                           ; 22 bytes @ 0x40
   597  0000A0                     	ds	2
   598  0000A2                     can_serial_transmit_msg@no_of_bytes_msg:
   599                           	opt stack 0
   600                           
   601                           ; 15 bytes @ 0x42
   602  0000A2                     	ds	15
   603  0000B1                     can_serial_transmit_msg@data_msg:
   604                           	opt stack 0
   605                           
   606                           ; 11 bytes @ 0x51
   607  0000B1                     	ds	5
   608  0000B6                     error_handle@error_flag:
   609                           	opt stack 0
   610                           
   611                           ; 1 bytes @ 0x56
   612  0000B6                     	ds	1
   613  0000B7                     error_handle@j:
   614                           	opt stack 0
   615                           
   616                           ; 1 bytes @ 0x57
   617  0000B7                     	ds	5
   618  0000BC                     can_serial_transmit_msg@id_msg:
   619                           	opt stack 0
   620                           
   621                           ; 9 bytes @ 0x5C
   622  0000BC                     	ds	9
   623  0000C5                     can_serial_transmit_msg@u:
   624                           	opt stack 0
   625                           
   626                           ; 1 bytes @ 0x65
   627  0000C5                     	ds	1
   628  0000C6                     can_serial_transmit_msg@i:
   629                           	opt stack 0
   630                           
   631                           ; 1 bytes @ 0x66
   632  0000C6                     	ds	1
   633                           tblptru	equ	0xFF8
   634                           tblptrh	equ	0xFF7
   635                           tblptrl	equ	0xFF6
   636                           tablat	equ	0xFF5
   637                           postinc0	equ	0xFEE
   638                           wreg	equ	0xFE8
   639                           postdec1	equ	0xFE5
   640                           fsr1l	equ	0xFE1
   641                           
   642                           	psect	cstackCOMRAM
   643  000001                     __pcstackCOMRAM:
   644                           	opt stack 0
   645  000001                     serial_transmit@m:
   646                           	opt stack 0
   647  000001                     OpenSPI@bus_mode:
   648                           	opt stack 0
   649  000001                     WriteSPI@TempVar:
   650                           	opt stack 0
   651  000001                     ReadSPI@TempVar:
   652                           	opt stack 0
   653                           
   654                           ; 1 bytes @ 0x0
   655  000001                     	ds	1
   656  000002                     ??_can_serial_transmit_msg:
   657  000002                     OpenSPI@smp_phase:
   658                           	opt stack 0
   659  000002                     WriteSPI@data_out:
   660                           	opt stack 0
   661                           
   662                           ; 1 bytes @ 0x1
   663  000002                     	ds	1
   664  000003                     OpenSPI@sync_mode:
   665                           	opt stack 0
   666  000003                     CAN2510BitModify@mask:
   667                           	opt stack 0
   668  000003                     CAN2510ByteRead@addr:
   669                           	opt stack 0
   670  000003                     CAN2510ByteWrite@value:
   671                           	opt stack 0
   672                           
   673                           ; 1 bytes @ 0x2
   674  000003                     	ds	1
   675  000004                     CAN2510BitModify@value:
   676                           	opt stack 0
   677  000004                     CAN2510ByteRead@ReturnValue:
   678                           	opt stack 0
   679  000004                     CAN2510ByteWrite@addr:
   680                           	opt stack 0
   681                           
   682                           ; 1 bytes @ 0x3
   683  000004                     	ds	1
   684  000005                     CAN2510ErrorState@BufferEFLG:
   685                           	opt stack 0
   686  000005                     CAN2510ReadMode@mode:
   687                           	opt stack 0
   688  000005                     CAN2510BitModify@addr:
   689                           	opt stack 0
   690  000005                     CAN2510SetSingleMaskStd@mask:
   691                           	opt stack 0
   692  000005                     CAN2510SetSingleFilterStd@filter:
   693                           	opt stack 0
   694  000005                     CAN2510BitTimeInit@BitTimeConfig:
   695                           	opt stack 0
   696                           
   697                           ; 4 bytes @ 0x4
   698  000005                     	ds	1
   699  000006                     ??_CAN2510SetMode:
   700  000006                     CAN2510DataRead@msgId:
   701                           	opt stack 0
   702                           
   703                           ; 2 bytes @ 0x5
   704  000006                     	ds	1
   705  000007                     ??_CAN2510SetSingleMaskStd:
   706  000007                     ??_CAN2510SetSingleFilterStd:
   707  000007                     CAN2510SetMode@mode:
   708                           	opt stack 0
   709                           
   710                           ; 1 bytes @ 0x6
   711  000007                     	ds	1
   712  000008                     CAN2510DataRead@numBytes:
   713                           	opt stack 0
   714                           
   715                           ; 2 bytes @ 0x7
   716  000008                     	ds	1
   717  000009                     ??_CAN2510BitTimeInit:
   718  000009                     CAN2510SetSingleMaskStd@writeValue:
   719                           	opt stack 0
   720  000009                     CAN2510SetSingleFilterStd@writeValue:
   721                           	opt stack 0
   722                           
   723                           ; 1 bytes @ 0x8
   724  000009                     	ds	1
   725  00000A                     CAN2510SetSingleMaskStd@maskNum:
   726                           	opt stack 0
   727  00000A                     CAN2510SetSingleFilterStd@addr:
   728                           	opt stack 0
   729  00000A                     CAN2510DataRead@data:
   730                           	opt stack 0
   731  00000A                     CAN2510Init@BufferConfig:
   732                           	opt stack 0
   733                           
   734                           ; 4 bytes @ 0x9
   735  00000A                     	ds	1
   736  00000B                     CAN2510SetSingleFilterStd@filterNum:
   737                           	opt stack 0
   738                           
   739                           ; 1 bytes @ 0xA
   740  00000B                     	ds	1
   741  00000C                     ??_CAN2510DataRead:
   742  00000C                     CAN2510SetMsgFilterStd@mask:
   743                           	opt stack 0
   744                           
   745                           ; 2 bytes @ 0xB
   746  00000C                     	ds	2
   747  00000E                     CAN2510SetMsgFilterStd@filters:
   748                           	opt stack 0
   749  00000E                     CAN2510Init@BitTimeConfig:
   750                           	opt stack 0
   751                           
   752                           ; 4 bytes @ 0xD
   753  00000E                     	ds	2
   754  000010                     ??_CAN2510SetMsgFilterStd:
   755                           
   756                           ; 0 bytes @ 0xF
   757  000010                     	ds	1
   758  000011                     CAN2510SetMsgFilterStd@bufferNum:
   759                           	opt stack 0
   760  000011                     CAN2510DataRead@result:
   761                           	opt stack 0
   762                           
   763                           ; 1 bytes @ 0x10
   764  000011                     	ds	1
   765  000012                     CAN2510SetMsgFilterStd@counter1:
   766                           	opt stack 0
   767  000012                     CAN2510Init@interruptEnables:
   768                           	opt stack 0
   769  000012                     CAN2510DataRead@bufferNum:
   770                           	opt stack 0
   771                           
   772                           ; 1 bytes @ 0x11
   773  000012                     	ds	1
   774  000013                     CAN2510SetMsgFilterStd@counter2:
   775                           	opt stack 0
   776  000013                     CAN2510Init@SPI_syncMode:
   777                           	opt stack 0
   778  000013                     CAN2510DataRead@tempSIDL:
   779                           	opt stack 0
   780                           
   781                           ; 1 bytes @ 0x12
   782  000013                     	ds	1
   783  000014                     CAN2510Init@SPI_busMode:
   784                           	opt stack 0
   785                           
   786                           ; 1 bytes @ 0x13
   787  000014                     	ds	1
   788  000015                     CAN2510Init@SPI_smpPhase:
   789                           	opt stack 0
   790                           
   791                           ; 1 bytes @ 0x14
   792  000015                     	ds	1
   793  000016                     ??_CAN2510Init:
   794                           
   795                           ; 0 bytes @ 0x15
   796  000016                     	ds	4
   797  00001A                     CAN2510Init@counter1:
   798                           	opt stack 0
   799                           
   800                           ; 1 bytes @ 0x19
   801  00001A                     	ds	1
   802  00001B                     CAN2510Init@counter2:
   803                           	opt stack 0
   804                           
   805                           ; 1 bytes @ 0x1A
   806  00001B                     	ds	1
   807  00001C                     ??_can_init:
   808                           
   809                           ; 0 bytes @ 0x1B
   810  00001C                     	ds	1
   811  00001D                     can_init@can_init_stat:
   812                           	opt stack 0
   813                           
   814                           ; 1 bytes @ 0x1C
   815  00001D                     	ds	1
   816  00001E                     can_init@filter_0_stat:
   817                           	opt stack 0
   818                           
   819                           ; 1 bytes @ 0x1D
   820  00001E                     	ds	1
   821  00001F                     can_init@filter_1_stat:
   822                           	opt stack 0
   823                           
   824                           ; 1 bytes @ 0x1E
   825  00001F                     	ds	1
   826  000020                     can_init@filter_B0:
   827                           	opt stack 0
   828                           
   829                           ; 4 bytes @ 0x1F
   830  000020                     	ds	4
   831  000024                     can_init@filter_B1:
   832                           	opt stack 0
   833                           
   834                           ; 4 bytes @ 0x23
   835  000024                     	ds	4
   836  000028                     can_init@mask_B0:
   837                           	opt stack 0
   838                           
   839                           ; 2 bytes @ 0x27
   840  000028                     	ds	2
   841  00002A                     can_init@mask_B1:
   842                           	opt stack 0
   843                           
   844                           ; 2 bytes @ 0x29
   845  00002A                     	ds	2
   846  00002C                     can_init@buffer_config:
   847                           	opt stack 0
   848                           
   849                           ; 3 bytes @ 0x2B
   850  00002C                     	ds	3
   851  00002F                     can_init@timing_config:
   852                           	opt stack 0
   853                           
   854                           ; 3 bytes @ 0x2E
   855  00002F                     	ds	3
   856  000032                     can_init@interrupt_en:
   857                           	opt stack 0
   858                           
   859                           ; 1 bytes @ 0x31
   860  000032                     	ds	1
   861  000033                     can_init@SPI_sync:
   862                           	opt stack 0
   863                           
   864                           ; 1 bytes @ 0x32
   865  000033                     	ds	1
   866  000034                     can_init@SPI_bus:
   867                           	opt stack 0
   868                           
   869                           ; 1 bytes @ 0x33
   870  000034                     	ds	1
   871  000035                     can_init@SPI_phase:
   872                           	opt stack 0
   873                           
   874                           ; 1 bytes @ 0x34
   875  000035                     	ds	1
   876  000036                     ??_error_handle:
   877                           
   878                           ; 0 bytes @ 0x35
   879  000036                     	ds	1
   880  000037                     ??_interrupt_handle:
   881                           
   882                           ; 0 bytes @ 0x36
   883  000037                     	ds	1
   884  000038                     interrupt_handle@interrupt_report:
   885                           	opt stack 0
   886                           
   887                           ; 1 bytes @ 0x37
   888  000038                     	ds	1
   889  000039                     ??_main:
   890                           
   891                           ; 0 bytes @ 0x38
   892  000039                     	ds	1
   893  00003A                     main@can_interrupt_stat:
   894                           	opt stack 0
   895                           
   896                           ; 1 bytes @ 0x39
   897  00003A                     	ds	1
   898                           tblptru	equ	0xFF8
   899                           tblptrh	equ	0xFF7
   900                           tblptrl	equ	0xFF6
   901                           tablat	equ	0xFF5
   902                           postinc0	equ	0xFEE
   903                           wreg	equ	0xFE8
   904                           postdec1	equ	0xFE5
   905                           fsr1l	equ	0xFE1
   906                           
   907 ;;
   908 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   909 ;;
   910 ;; *************** function _main *****************
   911 ;; Defined at:
   912 ;;		line 101 in file "CAN_RX.c"
   913 ;; Parameters:    Size  Location     Type
   914 ;;		None
   915 ;; Auto vars:     Size  Location     Type
   916 ;;  can_interrup    1   57[COMRAM] unsigned char 
   917 ;; Return value:  Size  Location     Type
   918 ;;		None               void
   919 ;; Registers used:
   920 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   921 ;; Tracked objects:
   922 ;;		On entry : 0/0
   923 ;;		On exit  : 0/0
   924 ;;		Unchanged: 0/0
   925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   926 ;;      Params:         0       0       0       0       0       0       0       0       0
   927 ;;      Locals:         1       0       0       0       0       0       0       0       0
   928 ;;      Temps:          1       0       0       0       0       0       0       0       0
   929 ;;      Totals:         2       0       0       0       0       0       0       0       0
   930 ;;Total ram usage:        2 bytes
   931 ;; Hardware stack levels required when called:    7
   932 ;; This function calls:
   933 ;;		_CAN2510InterruptStatus
   934 ;;		_can_init
   935 ;;		_can_serial_transmit_msg
   936 ;;		_interrupt_handle
   937 ;; This function is called by:
   938 ;;		Startup code after reset
   939 ;; This function uses a non-reentrant model
   940 ;;
   941                           
   942                           	psect	text0
   943  007130                     __ptext0:
   944                           	opt stack 0
   945  007130                     _main:
   946                           	opt stack 24
   947                           
   948                           ;CAN_RX.c: 103: TRISC=0x00;
   949                           
   950                           ;incstack = 0
   951  007130  0E00               	movlw	0
   952  007132  6E94               	movwf	3988,c	;volatile
   953                           
   954                           ;CAN_RX.c: 104: can_init();
   955  007134  ECDB  F039         	call	_can_init	;wreg free
   956  007138                     l2574:
   957                           
   958                           ;CAN_RX.c: 106: {
   959                           ;CAN_RX.c: 107: if(RC6==1)
   960  007138  AC82               	btfss	3970,6,c	;volatile
   961  00713A  D006               	goto	l2580
   962                           
   963                           ;CAN_RX.c: 108: {
   964                           ;CAN_RX.c: 109: unsigned char can_interrupt_stat;
   965                           ;CAN_RX.c: 110: can_interrupt_stat=CAN2510InterruptStatus();
   966  00713C  EC55  F037         	call	_CAN2510InterruptStatus	;wreg free
   967  007140  6E3A               	movwf	main@can_interrupt_stat,c
   968                           
   969                           ;CAN_RX.c: 111: interrupt_handle(can_interrupt_stat);
   970  007142  503A               	movf	main@can_interrupt_stat,w,c
   971  007144  EC3B  F039         	call	_interrupt_handle
   972  007148                     l2580:
   973                           
   974                           ;CAN_RX.c: 112: }
   975                           ;CAN_RX.c: 114: if(receive_flag==1)
   976  007148  0457               	decf	_receive_flag,w,c
   977  00714A  A4D8               	btfss	status,2,c
   978  00714C  D7F5               	goto	l2574
   979                           
   980                           ;CAN_RX.c: 115: {
   981                           ;CAN_RX.c: 116: can_serial_transmit_msg(buffer_num);
   982  00714E  5056               	movf	_buffer_num,w,c
   983  007150  ECA4  F03D         	call	_can_serial_transmit_msg
   984                           
   985                           ;CAN_RX.c: 118: receive_flag=0;
   986  007154  6E39               	movwf	??_main& (0+255),c
   987  007156  0E00               	movlw	0
   988  007158  6E57               	movwf	_receive_flag,c
   989  00715A  5039               	movf	??_main& (0+255),w,c
   990                           
   991                           ;CAN_RX.c: 119: num_bytes_1=0;
   992  00715C  6E39               	movwf	??_main& (0+255),c
   993  00715E  0E00               	movlw	0
   994  007160  0100               	movlb	0	; () banked
   995  007162  0100               	movlb	0	; () banked
   996  007164  6FE1               	movwf	_num_bytes_1& (0+255),b
   997  007166  5039               	movf	??_main& (0+255),w,c
   998                           
   999                           ; BSR set to: 0
  1000                           ;CAN_RX.c: 120: num_bytes_0=0;
  1001  007168  6E39               	movwf	??_main& (0+255),c
  1002  00716A  0E00               	movlw	0
  1003  00716C  0100               	movlb	0	; () banked
  1004  00716E  0100               	movlb	0	; () banked
  1005  007170  6FE0               	movwf	_num_bytes_0& (0+255),b
  1006  007172  5039               	movf	??_main& (0+255),w,c
  1007                           
  1008                           ; BSR set to: 0
  1009                           ;CAN_RX.c: 121: msg_stat=0;
  1010  007174  6E39               	movwf	??_main& (0+255),c
  1011  007176  0E00               	movlw	0
  1012  007178  0100               	movlb	0	; () banked
  1013  00717A  0100               	movlb	0	; () banked
  1014  00717C  6FC7               	movwf	_msg_stat& (0+255),b
  1015  00717E  5039               	movf	??_main& (0+255),w,c
  1016                           
  1017                           ; BSR set to: 0
  1018                           ;CAN_RX.c: 122: buffer_num=0;
  1019  007180  6E39               	movwf	??_main& (0+255),c
  1020  007182  0E00               	movlw	0
  1021  007184  6E56               	movwf	_buffer_num,c
  1022  007186  5039               	movf	??_main& (0+255),w,c
  1023  007188  D7D7               	goto	l2574
  1024  00718A                     __end_of_main:
  1025                           	opt stack 0
  1026                           tblptru	equ	0xFF8
  1027                           tblptrh	equ	0xFF7
  1028                           tblptrl	equ	0xFF6
  1029                           tablat	equ	0xFF5
  1030                           postinc0	equ	0xFEE
  1031                           wreg	equ	0xFE8
  1032                           postdec1	equ	0xFE5
  1033                           fsr1l	equ	0xFE1
  1034                           status	equ	0xFD8
  1035                           
  1036 ;; *************** function _interrupt_handle *****************
  1037 ;; Defined at:
  1038 ;;		line 162 in file "CAN_RX.c"
  1039 ;; Parameters:    Size  Location     Type
  1040 ;;  interrupt_re    1    wreg     unsigned char 
  1041 ;; Auto vars:     Size  Location     Type
  1042 ;;  interrupt_re    1   55[COMRAM] unsigned char 
  1043 ;; Return value:  Size  Location     Type
  1044 ;;		None               void
  1045 ;; Registers used:
  1046 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1047 ;; Tracked objects:
  1048 ;;		On entry : 0/0
  1049 ;;		On exit  : 0/0
  1050 ;;		Unchanged: 0/0
  1051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1052 ;;      Params:         0       0       0       0       0       0       0       0       0
  1053 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1054 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1055 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1056 ;;Total ram usage:        2 bytes
  1057 ;; Hardware stack levels used:    1
  1058 ;; Hardware stack levels required when called:    6
  1059 ;; This function calls:
  1060 ;;		_CAN2510DataRead
  1061 ;;		_error_handle
  1062 ;; This function is called by:
  1063 ;;		_main
  1064 ;; This function uses a non-reentrant model
  1065 ;;
  1066                           
  1067                           	psect	text1
  1068  007276                     __ptext1:
  1069                           	opt stack 0
  1070  007276                     _interrupt_handle:
  1071                           	opt stack 24
  1072                           
  1073                           ; BSR set to: 0
  1074                           ;incstack = 0
  1075                           ;interrupt_handle@interrupt_report stored from wreg
  1076  007276  CFE8 F038          	movff	wreg,interrupt_handle@interrupt_report
  1077                           
  1078                           ;CAN_RX.c: 164: switch(interrupt_report)
  1079  00727A  D03E               	goto	l2354
  1080  00727C                     l2338:
  1081                           
  1082                           ;CAN_RX.c: 167: error_handle();
  1083  00727C  EC7C  F03B         	call	_error_handle	;wreg free
  1084                           
  1085                           ;CAN_RX.c: 168: break;
  1086  007280  D045               	goto	l109
  1087  007282                     l2340:
  1088                           
  1089                           ;CAN_RX.c: 171: buffer_num=0x01;
  1090  007282  6E37               	movwf	??_interrupt_handle& (0+255),c
  1091  007284  0E01               	movlw	1
  1092  007286  6E56               	movwf	_buffer_num,c
  1093  007288  5037               	movf	??_interrupt_handle& (0+255),w,c
  1094                           
  1095                           ;CAN_RX.c: 172: msg_stat=CAN2510DataRead(0x01, msgID1, numbytes1, rxdata1);
  1096  00728A  0100               	movlb	0	; () banked
  1097  00728C  C0EE  F007         	movff	_msgID1+1,CAN2510DataRead@msgId+1
  1098  007290  0100               	movlb	0	; () banked
  1099  007292  C0ED  F006         	movff	_msgID1,CAN2510DataRead@msgId
  1100  007296  0100               	movlb	0	; () banked
  1101  007298  C0F2  F009         	movff	_numbytes1+1,CAN2510DataRead@numBytes+1
  1102  00729C  0100               	movlb	0	; () banked
  1103  00729E  C0F1  F008         	movff	_numbytes1,CAN2510DataRead@numBytes
  1104  0072A2  0100               	movlb	0	; () banked
  1105  0072A4  C0F6  F00B         	movff	_rxdata1+1,CAN2510DataRead@data+1
  1106  0072A8  0100               	movlb	0	; () banked
  1107  0072AA  C0F5  F00A         	movff	_rxdata1,CAN2510DataRead@data
  1108  0072AE  0E01               	movlw	1
  1109  0072B0  EC37  F03C         	call	_CAN2510DataRead
  1110  0072B4  D019               	goto	L1
  1111  0072B6                     l2346:
  1112                           
  1113                           ;CAN_RX.c: 177: buffer_num=0x00;
  1114  0072B6  6E37               	movwf	??_interrupt_handle& (0+255),c
  1115  0072B8  0E00               	movlw	0
  1116  0072BA  6E56               	movwf	_buffer_num,c
  1117  0072BC  5037               	movf	??_interrupt_handle& (0+255),w,c
  1118                           
  1119                           ;CAN_RX.c: 178: msg_stat=CAN2510DataRead(0x00, msgID0, numbytes0, rxdata0);
  1120  0072BE  0100               	movlb	0	; () banked
  1121  0072C0  C0EC  F007         	movff	_msgID0+1,CAN2510DataRead@msgId+1
  1122  0072C4  0100               	movlb	0	; () banked
  1123  0072C6  C0EB  F006         	movff	_msgID0,CAN2510DataRead@msgId
  1124  0072CA  0100               	movlb	0	; () banked
  1125  0072CC  C0F0  F009         	movff	_numbytes0+1,CAN2510DataRead@numBytes+1
  1126  0072D0  0100               	movlb	0	; () banked
  1127  0072D2  C0EF  F008         	movff	_numbytes0,CAN2510DataRead@numBytes
  1128  0072D6  0100               	movlb	0	; () banked
  1129  0072D8  C0F4  F00B         	movff	_rxdata0+1,CAN2510DataRead@data+1
  1130  0072DC  0100               	movlb	0	; () banked
  1131  0072DE  C0F3  F00A         	movff	_rxdata0,CAN2510DataRead@data
  1132  0072E2  0E00               	movlw	0
  1133  0072E4  EC37  F03C         	call	_CAN2510DataRead
  1134  0072E8                     L1:
  1135  0072E8  0100               	movlb	0	; () banked
  1136  0072EA  0100               	movlb	0	; () banked
  1137  0072EC  6FC7               	movwf	_msg_stat& (0+255),b
  1138                           
  1139                           ; BSR set to: 0
  1140                           ;CAN_RX.c: 179: receive_flag=1;
  1141  0072EE  6E37               	movwf	??_interrupt_handle& (0+255),c
  1142  0072F0  0E01               	movlw	1
  1143  0072F2  6E57               	movwf	_receive_flag,c
  1144  0072F4  5037               	movf	??_interrupt_handle& (0+255),w,c
  1145                           
  1146                           ;CAN_RX.c: 180: break;
  1147  0072F6  D00A               	goto	l109
  1148  0072F8                     l2354:
  1149  0072F8  5038               	movf	interrupt_handle@interrupt_report,w,c
  1150                           
  1151                           ; Switch size 1, requested type "space"
  1152                           ; Number of cases is 3, Range of values is 2 to 14
  1153                           ; switch strategies available:
  1154                           ; Name         Instructions Cycles
  1155                           ; simple_byte           10     6 (average)
  1156                           ;	Chosen strategy is simple_byte
  1157  0072FA  0A02               	xorlw	2	; case 2
  1158  0072FC  B4D8               	btfsc	status,2,c
  1159  0072FE  D7BE               	goto	l2338
  1160  007300  0A0E               	xorlw	14	; case 12
  1161  007302  B4D8               	btfsc	status,2,c
  1162  007304  D7D8               	goto	l2346
  1163  007306  0A02               	xorlw	2	; case 14
  1164  007308  B4D8               	btfsc	status,2,c
  1165  00730A  D7BB               	goto	l2340
  1166  00730C                     l109:
  1167  00730C  0012               	return	
  1168  00730E                     __end_of_interrupt_handle:
  1169                           	opt stack 0
  1170                           tblptru	equ	0xFF8
  1171                           tblptrh	equ	0xFF7
  1172                           tblptrl	equ	0xFF6
  1173                           tablat	equ	0xFF5
  1174                           postinc0	equ	0xFEE
  1175                           wreg	equ	0xFE8
  1176                           postdec1	equ	0xFE5
  1177                           fsr1l	equ	0xFE1
  1178                           status	equ	0xFD8
  1179                           
  1180 ;; *************** function _error_handle *****************
  1181 ;; Defined at:
  1182 ;;		line 315 in file "CAN_RX.c"
  1183 ;; Parameters:    Size  Location     Type
  1184 ;;		None
  1185 ;; Auto vars:     Size  Location     Type
  1186 ;;  reset_msg      39   25[BANK0 ] unsigned char [39]
  1187 ;;  warning_msg    25    0[BANK0 ] unsigned char [25]
  1188 ;;  all_clear_ms   22   64[BANK0 ] unsigned char [22]
  1189 ;;  j               1   87[BANK0 ] unsigned char 
  1190 ;;  error_flag      1   86[BANK0 ] unsigned char 
  1191 ;; Return value:  Size  Location     Type
  1192 ;;		None               void
  1193 ;; Registers used:
  1194 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1195 ;; Tracked objects:
  1196 ;;		On entry : 0/0
  1197 ;;		On exit  : 0/0
  1198 ;;		Unchanged: 0/0
  1199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1200 ;;      Params:         0       0       0       0       0       0       0       0       0
  1201 ;;      Locals:         0      88       0       0       0       0       0       0       0
  1202 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1203 ;;      Totals:         1      88       0       0       0       0       0       0       0
  1204 ;;Total ram usage:       89 bytes
  1205 ;; Hardware stack levels used:    1
  1206 ;; Hardware stack levels required when called:    5
  1207 ;; This function calls:
  1208 ;;		_CAN2510ErrorState
  1209 ;;		_CAN2510Reset
  1210 ;;		_can_init
  1211 ;;		_serial_transmit
  1212 ;; This function is called by:
  1213 ;;		_interrupt_handle
  1214 ;; This function uses a non-reentrant model
  1215 ;;
  1216                           
  1217                           	psect	text2
  1218  0076F8                     __ptext2:
  1219                           	opt stack 0
  1220  0076F8                     _error_handle:
  1221                           	opt stack 24
  1222                           
  1223                           ;CAN_RX.c: 317: unsigned char j;
  1224                           ;CAN_RX.c: 318: unsigned char error_flag= CAN2510ErrorState();
  1225                           
  1226                           ;incstack = 0
  1227  0076F8  ECDC  F037         	call	_CAN2510ErrorState	;wreg free
  1228  0076FC  0100               	movlb	0	; () banked
  1229  0076FE  0100               	movlb	0	; () banked
  1230  007700  6FB6               	movwf	error_handle@error_flag& (0+255),b
  1231                           
  1232                           ; BSR set to: 0
  1233                           ;CAN_RX.c: 319: unsigned char warning_msg[]={"Error count nearing 128\n"};
  1234  007702  EE21  F027         	lfsr	2,error_handle@F4848
  1235  007706  EE10  F060         	lfsr	1,error_handle@warning_msg
  1236  00770A  0E19               	movlw	25
  1237  00770C                     u1481:
  1238  00770C  CFDE FFE6          	movff	postinc2,postinc1
  1239  007710  2EE8               	decfsz	wreg,f,c
  1240  007712  D7FC               	goto	u1481
  1241                           
  1242                           ; BSR set to: 0
  1243                           ;CAN_RX.c: 320: unsigned char reset_msg[]={"Resetting CAN IC due to excess errors\n"};
  1244  007714  EE21  F000         	lfsr	2,error_handle@F4850
  1245  007718  EE10  F079         	lfsr	1,error_handle@reset_msg
  1246  00771C  0E27               	movlw	39
  1247  00771E                     u1491:
  1248  00771E  CFDE FFE6          	movff	postinc2,postinc1
  1249  007722  2EE8               	decfsz	wreg,f,c
  1250  007724  D7FC               	goto	u1491
  1251                           
  1252                           ; BSR set to: 0
  1253                           ;CAN_RX.c: 321: unsigned char all_clear_msg[]={"Error count below 96\n"};
  1254  007726  EE21  F040         	lfsr	2,error_handle@F4852
  1255  00772A  EE10  F0A0         	lfsr	1,error_handle@all_clear_msg
  1256  00772E  0E16               	movlw	22
  1257  007730                     u1501:
  1258  007730  CFDE FFE6          	movff	postinc2,postinc1
  1259  007734  2EE8               	decfsz	wreg,f,c
  1260  007736  D7FC               	goto	u1501
  1261                           
  1262                           ;CAN_RX.c: 322: switch(error_flag)
  1263  007738  D084               	goto	l2234
  1264  00773A                     l2176:
  1265                           
  1266                           ; BSR set to: 0
  1267                           ;CAN_RX.c: 325: for(j=0; j<38; j++)
  1268  00773A  6E36               	movwf	??_error_handle& (0+255),c
  1269  00773C  0E00               	movlw	0
  1270  00773E  0100               	movlb	0	; () banked
  1271  007740  0100               	movlb	0	; () banked
  1272  007742  6FB7               	movwf	error_handle@j& (0+255),b
  1273  007744  5036               	movf	??_error_handle& (0+255),w,c
  1274  007746  D012               	goto	L3
  1275  007748                     l2182:
  1276                           
  1277                           ; BSR set to: 0
  1278                           ;CAN_RX.c: 326: {
  1279                           ;CAN_RX.c: 327: serial_transmit(reset_msg[j]);
  1280  007748  0100               	movlb	0	; () banked
  1281  00774A  0100               	movlb	0	; () banked
  1282  00774C  51B7               	movf	error_handle@j& (0+255),w,b
  1283  00774E  0D01               	mullw	1
  1284  007750  0100               	movlb	0	; () banked
  1285  007752  0E79               	movlw	low error_handle@reset_msg
  1286  007754  24F3               	addwf	prodl,w,c
  1287  007756  6ED9               	movwf	fsr2l,c
  1288  007758  0100               	movlb	0	; () banked
  1289  00775A  0E00               	movlw	high error_handle@reset_msg
  1290  00775C  20F4               	addwfc	prodh,w,c
  1291  00775E  6EDA               	movwf	fsr2h,c
  1292  007760  50DF               	movf	indf2,w,c
  1293  007762  EC69  F037         	call	_serial_transmit
  1294  007766  0100               	movlb	0	; () banked
  1295  007768  0100               	movlb	0	; () banked
  1296  00776A  2BB7               	incf	error_handle@j& (0+255),f,b
  1297  00776C                     L3:
  1298                           
  1299                           ; BSR set to: 0
  1300  00776C  0E25               	movlw	37
  1301  00776E  0100               	movlb	0	; () banked
  1302  007770  0100               	movlb	0	; () banked
  1303  007772  65B7               	cpfsgt	error_handle@j& (0+255),b
  1304  007774  D7E9               	goto	l2182
  1305                           
  1306                           ; BSR set to: 0
  1307                           ;CAN_RX.c: 328: }
  1308                           ;CAN_RX.c: 329: CAN2510Reset();
  1309                           
  1310                           ; BSR set to: 0
  1311  007776  EC85  F037         	call	_CAN2510Reset	;wreg free
  1312                           
  1313                           ;CAN_RX.c: 330: can_init();
  1314  00777A  ECDB  F039         	call	_can_init	;wreg free
  1315                           
  1316                           ;CAN_RX.c: 331: break;
  1317  00777E  D076               	goto	l201
  1318  007780                     l2192:
  1319                           
  1320                           ;CAN_RX.c: 334: for(j=0; j<38; j++)
  1321  007780  6E36               	movwf	??_error_handle& (0+255),c
  1322  007782  0E00               	movlw	0
  1323  007784  0100               	movlb	0	; () banked
  1324  007786  0100               	movlb	0	; () banked
  1325  007788  6FB7               	movwf	error_handle@j& (0+255),b
  1326  00778A  5036               	movf	??_error_handle& (0+255),w,c
  1327  00778C  D012               	goto	L4
  1328  00778E                     l2198:
  1329                           
  1330                           ; BSR set to: 0
  1331                           ;CAN_RX.c: 335: {
  1332                           ;CAN_RX.c: 336: serial_transmit(reset_msg[j]);
  1333  00778E  0100               	movlb	0	; () banked
  1334  007790  0100               	movlb	0	; () banked
  1335  007792  51B7               	movf	error_handle@j& (0+255),w,b
  1336  007794  0D01               	mullw	1
  1337  007796  0100               	movlb	0	; () banked
  1338  007798  0E79               	movlw	low error_handle@reset_msg
  1339  00779A  24F3               	addwf	prodl,w,c
  1340  00779C  6ED9               	movwf	fsr2l,c
  1341  00779E  0100               	movlb	0	; () banked
  1342  0077A0  0E00               	movlw	high error_handle@reset_msg
  1343  0077A2  20F4               	addwfc	prodh,w,c
  1344  0077A4  6EDA               	movwf	fsr2h,c
  1345  0077A6  50DF               	movf	indf2,w,c
  1346  0077A8  EC69  F037         	call	_serial_transmit
  1347  0077AC  0100               	movlb	0	; () banked
  1348  0077AE  0100               	movlb	0	; () banked
  1349  0077B0  2BB7               	incf	error_handle@j& (0+255),f,b
  1350  0077B2                     L4:
  1351                           
  1352                           ; BSR set to: 0
  1353  0077B2  0E25               	movlw	37
  1354  0077B4  0100               	movlb	0	; () banked
  1355  0077B6  0100               	movlb	0	; () banked
  1356  0077B8  65B7               	cpfsgt	error_handle@j& (0+255),b
  1357  0077BA  D7E9               	goto	l2198
  1358                           
  1359                           ; BSR set to: 0
  1360                           ;CAN_RX.c: 337: }
  1361                           ;CAN_RX.c: 338: CAN2510Reset();
  1362                           
  1363                           ; BSR set to: 0
  1364  0077BC  EC85  F037         	call	_CAN2510Reset	;wreg free
  1365                           
  1366                           ;CAN_RX.c: 339: can_init();
  1367  0077C0  ECDB  F039         	call	_can_init	;wreg free
  1368                           
  1369                           ;CAN_RX.c: 340: break;
  1370  0077C4  D053               	goto	l201
  1371  0077C6                     l2208:
  1372                           
  1373                           ;CAN_RX.c: 343: for(j=0; j<24; j++)
  1374  0077C6  6E36               	movwf	??_error_handle& (0+255),c
  1375  0077C8  0E00               	movlw	0
  1376  0077CA  0100               	movlb	0	; () banked
  1377  0077CC  0100               	movlb	0	; () banked
  1378  0077CE  6FB7               	movwf	error_handle@j& (0+255),b
  1379  0077D0  5036               	movf	??_error_handle& (0+255),w,c
  1380  0077D2  D012               	goto	L5
  1381  0077D4                     l2214:
  1382                           
  1383                           ; BSR set to: 0
  1384                           ;CAN_RX.c: 344: {
  1385                           ;CAN_RX.c: 345: serial_transmit(warning_msg[j]);
  1386  0077D4  0100               	movlb	0	; () banked
  1387  0077D6  0100               	movlb	0	; () banked
  1388  0077D8  51B7               	movf	error_handle@j& (0+255),w,b
  1389  0077DA  0D01               	mullw	1
  1390  0077DC  0100               	movlb	0	; () banked
  1391  0077DE  0E60               	movlw	low error_handle@warning_msg
  1392  0077E0  24F3               	addwf	prodl,w,c
  1393  0077E2  6ED9               	movwf	fsr2l,c
  1394  0077E4  0100               	movlb	0	; () banked
  1395  0077E6  0E00               	movlw	high error_handle@warning_msg
  1396  0077E8  20F4               	addwfc	prodh,w,c
  1397  0077EA  6EDA               	movwf	fsr2h,c
  1398  0077EC  50DF               	movf	indf2,w,c
  1399  0077EE  EC69  F037         	call	_serial_transmit
  1400  0077F2  0100               	movlb	0	; () banked
  1401  0077F4  0100               	movlb	0	; () banked
  1402  0077F6  2BB7               	incf	error_handle@j& (0+255),f,b
  1403  0077F8                     L5:
  1404                           
  1405                           ; BSR set to: 0
  1406  0077F8  0E17               	movlw	23
  1407  0077FA  0100               	movlb	0	; () banked
  1408  0077FC  0100               	movlb	0	; () banked
  1409  0077FE  65B7               	cpfsgt	error_handle@j& (0+255),b
  1410  007800  D7E9               	goto	l2214
  1411  007802  D034               	goto	l201
  1412  007804                     l2220:
  1413                           
  1414                           ; BSR set to: 0
  1415                           ;CAN_RX.c: 350: for(j=0; j<21; j++)
  1416  007804  6E36               	movwf	??_error_handle& (0+255),c
  1417  007806  0E00               	movlw	0
  1418  007808  0100               	movlb	0	; () banked
  1419  00780A  0100               	movlb	0	; () banked
  1420  00780C  6FB7               	movwf	error_handle@j& (0+255),b
  1421  00780E  5036               	movf	??_error_handle& (0+255),w,c
  1422  007810  D012               	goto	L6
  1423  007812                     l2226:
  1424                           
  1425                           ; BSR set to: 0
  1426                           ;CAN_RX.c: 351: {
  1427                           ;CAN_RX.c: 352: serial_transmit(all_clear_msg[j]);
  1428  007812  0100               	movlb	0	; () banked
  1429  007814  0100               	movlb	0	; () banked
  1430  007816  51B7               	movf	error_handle@j& (0+255),w,b
  1431  007818  0D01               	mullw	1
  1432  00781A  0100               	movlb	0	; () banked
  1433  00781C  0EA0               	movlw	low error_handle@all_clear_msg
  1434  00781E  24F3               	addwf	prodl,w,c
  1435  007820  6ED9               	movwf	fsr2l,c
  1436  007822  0100               	movlb	0	; () banked
  1437  007824  0E00               	movlw	high error_handle@all_clear_msg
  1438  007826  20F4               	addwfc	prodh,w,c
  1439  007828  6EDA               	movwf	fsr2h,c
  1440  00782A  50DF               	movf	indf2,w,c
  1441  00782C  EC69  F037         	call	_serial_transmit
  1442  007830  0100               	movlb	0	; () banked
  1443  007832  0100               	movlb	0	; () banked
  1444  007834  2BB7               	incf	error_handle@j& (0+255),f,b
  1445  007836                     L6:
  1446                           
  1447                           ; BSR set to: 0
  1448  007836  0E14               	movlw	20
  1449  007838  0100               	movlb	0	; () banked
  1450  00783A  0100               	movlb	0	; () banked
  1451  00783C  65B7               	cpfsgt	error_handle@j& (0+255),b
  1452  00783E  D7E9               	goto	l2226
  1453  007840  D015               	goto	l201
  1454  007842                     l2234:
  1455                           
  1456                           ; BSR set to: 0
  1457  007842  0100               	movlb	0	; () banked
  1458  007844  0100               	movlb	0	; () banked
  1459  007846  51B6               	movf	error_handle@error_flag& (0+255),w,b
  1460                           
  1461                           ; Switch size 1, requested type "space"
  1462                           ; Number of cases is 6, Range of values is 0 to 5
  1463                           ; switch strategies available:
  1464                           ; Name         Instructions Cycles
  1465                           ; simple_byte           19    10 (average)
  1466                           ;	Chosen strategy is simple_byte
  1467  007848  0A00               	xorlw	0	; case 0
  1468  00784A  B4D8               	btfsc	status,2,c
  1469  00784C  D7DB               	goto	l2220
  1470  00784E  0A01               	xorlw	1	; case 1
  1471  007850  B4D8               	btfsc	status,2,c
  1472  007852  D7B9               	goto	l2208
  1473  007854  0A03               	xorlw	3	; case 2
  1474  007856  B4D8               	btfsc	status,2,c
  1475  007858  D7B6               	goto	l2208
  1476  00785A  0A01               	xorlw	1	; case 3
  1477  00785C  B4D8               	btfsc	status,2,c
  1478  00785E  D790               	goto	l2192
  1479  007860  0A07               	xorlw	7	; case 4
  1480  007862  B4D8               	btfsc	status,2,c
  1481  007864  D76A               	goto	l2176
  1482  007866  0A01               	xorlw	1	; case 5
  1483  007868  B4D8               	btfsc	status,2,c
  1484  00786A  D767               	goto	l2176
  1485  00786C                     l201:
  1486  00786C  0012               	return	
  1487  00786E                     __end_of_error_handle:
  1488                           	opt stack 0
  1489                           tblptru	equ	0xFF8
  1490                           tblptrh	equ	0xFF7
  1491                           tblptrl	equ	0xFF6
  1492                           tablat	equ	0xFF5
  1493                           prodh	equ	0xFF4
  1494                           prodl	equ	0xFF3
  1495                           postinc0	equ	0xFEE
  1496                           wreg	equ	0xFE8
  1497                           postinc1	equ	0xFE6
  1498                           postdec1	equ	0xFE5
  1499                           fsr1l	equ	0xFE1
  1500                           indf2	equ	0xFDF
  1501                           postinc2	equ	0xFDE
  1502                           fsr2h	equ	0xFDA
  1503                           fsr2l	equ	0xFD9
  1504                           status	equ	0xFD8
  1505                           
  1506 ;; *************** function _can_init *****************
  1507 ;; Defined at:
  1508 ;;		line 127 in file "CAN_RX.c"
  1509 ;; Parameters:    Size  Location     Type
  1510 ;;		None
  1511 ;; Auto vars:     Size  Location     Type
  1512 ;;  filter_B1       4   35[COMRAM] unsigned int [2]
  1513 ;;  filter_B0       4   31[COMRAM] unsigned int [2]
  1514 ;;  timing_confi    3   46[COMRAM] unsigned um
  1515 ;;  buffer_confi    3   43[COMRAM] unsigned um
  1516 ;;  mask_B1         2   41[COMRAM] unsigned int 
  1517 ;;  mask_B0         2   39[COMRAM] unsigned int 
  1518 ;;  SPI_phase       1   52[COMRAM] unsigned char 
  1519 ;;  SPI_bus         1   51[COMRAM] unsigned char 
  1520 ;;  SPI_sync        1   50[COMRAM] unsigned char 
  1521 ;;  interrupt_en    1   49[COMRAM] unsigned char 
  1522 ;;  filter_1_sta    1   30[COMRAM] unsigned char 
  1523 ;;  filter_0_sta    1   29[COMRAM] unsigned char 
  1524 ;;  can_init_sta    1   28[COMRAM] unsigned char 
  1525 ;; Return value:  Size  Location     Type
  1526 ;;		None               void
  1527 ;; Registers used:
  1528 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1529 ;; Tracked objects:
  1530 ;;		On entry : 0/0
  1531 ;;		On exit  : 0/0
  1532 ;;		Unchanged: 0/0
  1533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1534 ;;      Params:         0       0       0       0       0       0       0       0       0
  1535 ;;      Locals:        25       0       0       0       0       0       0       0       0
  1536 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1537 ;;      Totals:        26       0       0       0       0       0       0       0       0
  1538 ;;Total ram usage:       26 bytes
  1539 ;; Hardware stack levels used:    1
  1540 ;; Hardware stack levels required when called:    4
  1541 ;; This function calls:
  1542 ;;		_CAN2510Enable
  1543 ;;		_CAN2510Init
  1544 ;;		_CAN2510ReadMode
  1545 ;;		_CAN2510SetMode
  1546 ;;		_CAN2510SetMsgFilterStd
  1547 ;; This function is called by:
  1548 ;;		_main
  1549 ;;		_error_handle
  1550 ;; This function uses a non-reentrant model
  1551 ;;
  1552                           
  1553                           	psect	text3
  1554  0073B6                     __ptext3:
  1555                           	opt stack 0
  1556  0073B6                     _can_init:
  1557                           	opt stack 24
  1558                           
  1559                           ;CAN_RX.c: 129: can_msg_ID_0.msg_ID_0=0;
  1560                           
  1561                           ;incstack = 0
  1562  0073B6  0E00               	movlw	0
  1563  0073B8  0100               	movlb	0	; () banked
  1564  0073BA  0100               	movlb	0	; () banked
  1565  0073BC  6FD8               	movwf	_can_msg_ID_0& (0+255),b
  1566  0073BE  0E00               	movlw	0
  1567  0073C0  0100               	movlb	0	; () banked
  1568  0073C2  6FD9               	movwf	(_can_msg_ID_0+1)& (0+255),b
  1569  0073C4  0E00               	movlw	0
  1570  0073C6  0100               	movlb	0	; () banked
  1571  0073C8  6FDA               	movwf	(_can_msg_ID_0+2)& (0+255),b
  1572  0073CA  0E00               	movlw	0
  1573  0073CC  0100               	movlb	0	; () banked
  1574  0073CE  6FDB               	movwf	(_can_msg_ID_0+3)& (0+255),b
  1575                           
  1576                           ;CAN_RX.c: 130: can_msg_ID_1.msg_ID_1=0;
  1577  0073D0  0E00               	movlw	0
  1578  0073D2  0100               	movlb	0	; () banked
  1579  0073D4  0100               	movlb	0	; () banked
  1580  0073D6  6FDC               	movwf	_can_msg_ID_1& (0+255),b
  1581  0073D8  0E00               	movlw	0
  1582  0073DA  0100               	movlb	0	; () banked
  1583  0073DC  6FDD               	movwf	(_can_msg_ID_1+1)& (0+255),b
  1584  0073DE  0E00               	movlw	0
  1585  0073E0  0100               	movlb	0	; () banked
  1586  0073E2  6FDE               	movwf	(_can_msg_ID_1+2)& (0+255),b
  1587  0073E4  0E00               	movlw	0
  1588  0073E6  0100               	movlb	0	; () banked
  1589  0073E8  6FDF               	movwf	(_can_msg_ID_1+3)& (0+255),b
  1590                           
  1591                           ;CAN_RX.c: 131: unsigned short long buffer_config=0xFFFF7F & 0xFFFFFF & 0xFFFFFF & 0xFFF
      +                          FFF & 0xFFFFFF & 0xFFFFFF & 0xFFBFFF & 0xFFDFFF & 0xFFEFFF & 0x7FFFFF & 0xF8FFFF;
  1592  0073EA  0E7F               	movlw	127
  1593  0073EC  6E2C               	movwf	can_init@buffer_config,c
  1594  0073EE  0E8F               	movlw	143
  1595  0073F0  6E2D               	movwf	can_init@buffer_config+1,c
  1596  0073F2  0E78               	movlw	120
  1597  0073F4  6E2E               	movwf	can_init@buffer_config+2,c
  1598                           
  1599                           ;CAN_RX.c: 132: unsigned short long timing_config=0xBFFFFF & 0xFFFFFF & 0xFFFFFF & 0xFFF
      +                          EFF & 0xFFCFFF & 0xFFFFFF & 0xFBFFFF & 0xFFFFFC;
  1600  0073F6  0EFC               	movlw	252
  1601  0073F8  6E2F               	movwf	can_init@timing_config,c
  1602  0073FA  0ECE               	movlw	206
  1603  0073FC  6E30               	movwf	can_init@timing_config+1,c
  1604  0073FE  0EBB               	movlw	187
  1605  007400  6E31               	movwf	can_init@timing_config+2,c
  1606                           
  1607                           ; BSR set to: 0
  1608                           ;CAN_RX.c: 133: unsigned char interrupt_en=0x7F & 0xDF & 0xFD & 0xFE;
  1609  007402  6E1C               	movwf	??_can_init& (0+255),c
  1610  007404  0E5C               	movlw	92
  1611  007406  6E32               	movwf	can_init@interrupt_en,c
  1612  007408  501C               	movf	??_can_init& (0+255),w,c
  1613                           
  1614                           ; BSR set to: 0
  1615                           ;CAN_RX.c: 134: unsigned char SPI_sync=0b00000000;
  1616  00740A  6E1C               	movwf	??_can_init& (0+255),c
  1617  00740C  0E00               	movlw	0
  1618  00740E  6E33               	movwf	can_init@SPI_sync,c
  1619  007410  501C               	movf	??_can_init& (0+255),w,c
  1620                           
  1621                           ; BSR set to: 0
  1622                           ;CAN_RX.c: 135: unsigned char SPI_bus=0b00000000;
  1623  007412  6E1C               	movwf	??_can_init& (0+255),c
  1624  007414  0E00               	movlw	0
  1625  007416  6E34               	movwf	can_init@SPI_bus,c
  1626  007418  501C               	movf	??_can_init& (0+255),w,c
  1627                           
  1628                           ; BSR set to: 0
  1629                           ;CAN_RX.c: 136: unsigned char SPI_phase=0b00000000;
  1630  00741A  6E1C               	movwf	??_can_init& (0+255),c
  1631  00741C  0E00               	movlw	0
  1632  00741E  6E35               	movwf	can_init@SPI_phase,c
  1633  007420  501C               	movf	??_can_init& (0+255),w,c
  1634                           
  1635                           ; BSR set to: 0
  1636                           ;CAN_RX.c: 141: }while(can_init_stat==(-1));
  1637                           
  1638                           ; BSR set to: 0
  1639                           
  1640                           ;CAN_RX.c: 137: unsigned char can_init_stat;
  1641                           ;CAN_RX.c: 138: do
  1642  007422  502C               	movf	can_init@buffer_config,w,c
  1643  007424  6E0A               	movwf	CAN2510Init@BufferConfig,c
  1644  007426  502D               	movf	can_init@buffer_config+1,w,c
  1645  007428  6E0B               	movwf	CAN2510Init@BufferConfig+1,c
  1646  00742A  502E               	movf	can_init@buffer_config+2,w,c
  1647  00742C  6E0C               	movwf	CAN2510Init@BufferConfig+2,c
  1648  00742E  6A0D               	clrf	CAN2510Init@BufferConfig+3,c
  1649  007430  502F               	movf	can_init@timing_config,w,c
  1650  007432  6E0E               	movwf	CAN2510Init@BitTimeConfig,c
  1651  007434  5030               	movf	can_init@timing_config+1,w,c
  1652  007436  6E0F               	movwf	CAN2510Init@BitTimeConfig+1,c
  1653  007438  5031               	movf	can_init@timing_config+2,w,c
  1654  00743A  6E10               	movwf	CAN2510Init@BitTimeConfig+2,c
  1655  00743C  6A11               	clrf	CAN2510Init@BitTimeConfig+3,c
  1656  00743E  C032  F012         	movff	can_init@interrupt_en,CAN2510Init@interruptEnables
  1657  007442  C033  F013         	movff	can_init@SPI_sync,CAN2510Init@SPI_syncMode
  1658  007446  C034  F014         	movff	can_init@SPI_bus,CAN2510Init@SPI_busMode
  1659  00744A  C035  F015         	movff	can_init@SPI_phase,CAN2510Init@SPI_smpPhase
  1660  00744E  ECE3  F03A         	call	_CAN2510Init	;wreg free
  1661  007452  6E1D               	movwf	can_init@can_init_stat,c
  1662                           
  1663                           ;CAN_RX.c: 143: CAN2510Enable();
  1664  007454  EC52  F037         	call	_CAN2510Enable	;wreg free
  1665                           
  1666                           ;CAN_RX.c: 144: unsigned int mask_B0;
  1667                           ;CAN_RX.c: 145: unsigned int filter_B0[2]={0,0};
  1668  007458  C04A  F020         	movff	can_init@F4819,can_init@filter_B0
  1669  00745C  C04B  F021         	movff	can_init@F4819+1,can_init@filter_B0+1
  1670  007460  C04C  F022         	movff	can_init@F4819+2,can_init@filter_B0+2
  1671  007464  C04D  F023         	movff	can_init@F4819+3,can_init@filter_B0+3
  1672                           
  1673                           ;CAN_RX.c: 150: }while(filter_0_stat==(-1));
  1674                           
  1675                           ;CAN_RX.c: 146: unsigned char filter_0_stat;
  1676                           ;CAN_RX.c: 147: do
  1677  007468  C028  F00C         	movff	can_init@mask_B0,CAN2510SetMsgFilterStd@mask
  1678  00746C  C029  F00D         	movff	can_init@mask_B0+1,CAN2510SetMsgFilterStd@mask+1
  1679  007470  0E00               	movlw	high can_init@filter_B0
  1680  007472  6E0F               	movwf	CAN2510SetMsgFilterStd@filters+1,c
  1681  007474  0E20               	movlw	low can_init@filter_B0
  1682  007476  6E0E               	movwf	CAN2510SetMsgFilterStd@filters,c
  1683  007478  0E00               	movlw	0
  1684  00747A  EC5D  F03A         	call	_CAN2510SetMsgFilterStd
  1685  00747E  6E1E               	movwf	can_init@filter_0_stat,c
  1686                           
  1687                           ;CAN_RX.c: 151: unsigned int mask_B1;
  1688                           ;CAN_RX.c: 152: unsigned int filter_B1[2]={0,2};
  1689  007480  C046  F024         	movff	can_init@F4823,can_init@filter_B1
  1690  007484  C047  F025         	movff	can_init@F4823+1,can_init@filter_B1+1
  1691  007488  C048  F026         	movff	can_init@F4823+2,can_init@filter_B1+2
  1692  00748C  C049  F027         	movff	can_init@F4823+3,can_init@filter_B1+3
  1693                           
  1694                           ;CAN_RX.c: 157: }while(filter_1_stat==(-1));
  1695                           
  1696                           ;CAN_RX.c: 153: unsigned char filter_1_stat;
  1697                           ;CAN_RX.c: 154: do
  1698  007490  C02A  F00C         	movff	can_init@mask_B1,CAN2510SetMsgFilterStd@mask
  1699  007494  C02B  F00D         	movff	can_init@mask_B1+1,CAN2510SetMsgFilterStd@mask+1
  1700  007498  0E00               	movlw	high can_init@filter_B1
  1701  00749A  6E0F               	movwf	CAN2510SetMsgFilterStd@filters+1,c
  1702  00749C  0E24               	movlw	low can_init@filter_B1
  1703  00749E  6E0E               	movwf	CAN2510SetMsgFilterStd@filters,c
  1704  0074A0  0E01               	movlw	1
  1705  0074A2  EC5D  F03A         	call	_CAN2510SetMsgFilterStd
  1706  0074A6  6E1F               	movwf	can_init@filter_1_stat,c
  1707                           
  1708                           ;CAN_RX.c: 158: CAN2510SetMode(0x00);
  1709  0074A8  0E00               	movlw	0
  1710  0074AA  EC90  F037         	call	_CAN2510SetMode
  1711  0074AE                     l2124:
  1712  0074AE  EC5A  F037         	call	_CAN2510ReadMode	;wreg free
  1713  0074B2  0900               	iorlw	0
  1714  0074B4  B4D8               	btfsc	status,2,c
  1715  0074B6  0012               	return	
  1716  0074B8  D7FA               	goto	l2124
  1717  0074BA                     __end_of_can_init:
  1718                           	opt stack 0
  1719                           tblptru	equ	0xFF8
  1720                           tblptrh	equ	0xFF7
  1721                           tblptrl	equ	0xFF6
  1722                           tablat	equ	0xFF5
  1723                           prodh	equ	0xFF4
  1724                           prodl	equ	0xFF3
  1725                           postinc0	equ	0xFEE
  1726                           wreg	equ	0xFE8
  1727                           postinc1	equ	0xFE6
  1728                           postdec1	equ	0xFE5
  1729                           fsr1l	equ	0xFE1
  1730                           indf2	equ	0xFDF
  1731                           postinc2	equ	0xFDE
  1732                           fsr2h	equ	0xFDA
  1733                           fsr2l	equ	0xFD9
  1734                           status	equ	0xFD8
  1735                           
  1736 ;; *************** function _CAN2510SetMsgFilterStd *****************
  1737 ;; Defined at:
  1738 ;;		line 8 in file "D:\Microchip\xc8\v1.31\sources\pic18\plib\CAN2510\canfms.c"
  1739 ;; Parameters:    Size  Location     Type
  1740 ;;  bufferNum       1    wreg     unsigned char 
  1741 ;;  mask            2   11[COMRAM] unsigned int 
  1742 ;;  filters         2   13[COMRAM] PTR unsigned int 
  1743 ;;		 -> can_init@filter_B1(4), can_init@filter_B0(4), 
  1744 ;; Auto vars:     Size  Location     Type
  1745 ;;  bufferNum       1   16[COMRAM] unsigned char 
  1746 ;;  counter2        1   18[COMRAM] unsigned char 
  1747 ;;  counter1        1   17[COMRAM] unsigned char 
  1748 ;; Return value:  Size  Location     Type
  1749 ;;                  1    wreg      char 
  1750 ;; Registers used:
  1751 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1752 ;; Tracked objects:
  1753 ;;		On entry : 0/0
  1754 ;;		On exit  : 0/0
  1755 ;;		Unchanged: 0/0
  1756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1757 ;;      Params:         4       0       0       0       0       0       0       0       0
  1758 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1759 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1760 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1761 ;;Total ram usage:        8 bytes
  1762 ;; Hardware stack levels used:    1
  1763 ;; Hardware stack levels required when called:    3
  1764 ;; This function calls:
  1765 ;;		_CAN2510ByteWrite
  1766 ;;		_CAN2510ReadMode
  1767 ;;		_CAN2510SetMode
  1768 ;;		_CAN2510SetSingleFilterStd
  1769 ;;		_CAN2510SetSingleMaskStd
  1770 ;; This function is called by:
  1771 ;;		_can_init
  1772 ;; This function uses a non-reentrant model
  1773 ;;
  1774                           
  1775                           	psect	text4
  1776  0074BA                     __ptext4:
  1777                           	opt stack 0
  1778  0074BA                     _CAN2510SetMsgFilterStd:
  1779                           	opt stack 24
  1780                           
  1781                           ;incstack = 0
  1782                           ;CAN2510SetMsgFilterStd@bufferNum stored from wreg
  1783  0074BA  CFE8 F011          	movff	wreg,CAN2510SetMsgFilterStd@bufferNum
  1784  0074BE  EC5A  F037         	call	_CAN2510ReadMode	;wreg free
  1785  0074C2  0BE0               	andlw	224
  1786  0074C4  6E55               	movwf	CAN2510SetMsgFilterStd@modebits,c
  1787  0074C6  0E80               	movlw	128
  1788  0074C8  EC90  F037         	call	_CAN2510SetMode
  1789  0074CC  6E10               	movwf	??_CAN2510SetMsgFilterStd& (0+255),c
  1790  0074CE  0E00               	movlw	0
  1791  0074D0  6E12               	movwf	CAN2510SetMsgFilterStd@counter1,c
  1792  0074D2  5010               	movf	??_CAN2510SetMsgFilterStd& (0+255),w,c
  1793  0074D4  6E10               	movwf	??_CAN2510SetMsgFilterStd& (0+255),c
  1794  0074D6  0E00               	movlw	0
  1795  0074D8  6E13               	movwf	CAN2510SetMsgFilterStd@counter2,c
  1796  0074DA  5010               	movf	??_CAN2510SetMsgFilterStd& (0+255),w,c
  1797  0074DC  D00B               	goto	l2056
  1798  0074DE                     l2042:
  1799  0074DE  2A12               	incf	CAN2510SetMsgFilterStd@counter1,f,c
  1800  0074E0  6612               	tstfsz	CAN2510SetMsgFilterStd@counter1,c
  1801  0074E2  D008               	goto	l2056
  1802  0074E4  0E80               	movlw	128
  1803  0074E6  EC90  F037         	call	_CAN2510SetMode
  1804  0074EA  2A13               	incf	CAN2510SetMsgFilterStd@counter2,f,c
  1805  0074EC  5013               	movf	CAN2510SetMsgFilterStd@counter2,w,c
  1806  0074EE  0A05               	xorlw	5
  1807  0074F0  B4D8               	btfsc	status,2,c
  1808  0074F2  D05F               	goto	u1390
  1809  0074F4                     l2056:
  1810  0074F4  EC5A  F037         	call	_CAN2510ReadMode	;wreg free
  1811  0074F8  6E10               	movwf	??_CAN2510SetMsgFilterStd& (0+255),c
  1812  0074FA  0EE0               	movlw	224
  1813  0074FC  1610               	andwf	??_CAN2510SetMsgFilterStd,f,c
  1814  0074FE  5010               	movf	??_CAN2510SetMsgFilterStd,w,c
  1815  007500  0A80               	xorlw	128
  1816  007502  A4D8               	btfss	status,2,c
  1817  007504  D7EC               	goto	l2042
  1818  007506  6611               	tstfsz	CAN2510SetMsgFilterStd@bufferNum,c
  1819  007508  D020               	goto	l2064
  1820  00750A  C00C  F005         	movff	CAN2510SetMsgFilterStd@mask,CAN2510SetSingleMaskStd@mask
  1821  00750E  C00D  F006         	movff	CAN2510SetMsgFilterStd@mask+1,CAN2510SetSingleMaskStd@mask+1
  1822  007512  0E00               	movlw	0
  1823  007514  EC15  F038         	call	_CAN2510SetSingleMaskStd
  1824  007518  C00E  FFD9         	movff	CAN2510SetMsgFilterStd@filters,fsr2l
  1825  00751C  C00F  FFDA         	movff	CAN2510SetMsgFilterStd@filters+1,fsr2h
  1826  007520  CFDE F005          	movff	postinc2,CAN2510SetSingleFilterStd@filter
  1827  007524  CFDD F006          	movff	postdec2,CAN2510SetSingleFilterStd@filter+1
  1828  007528  0E00               	movlw	0
  1829  00752A  ECC5  F038         	call	_CAN2510SetSingleFilterStd
  1830  00752E  EE20 F002          	lfsr	2,2
  1831  007532  500E               	movf	CAN2510SetMsgFilterStd@filters,w,c
  1832  007534  26D9               	addwf	fsr2l,f,c
  1833  007536  500F               	movf	CAN2510SetMsgFilterStd@filters+1,w,c
  1834  007538  22DA               	addwfc	fsr2h,f,c
  1835  00753A  CFDE F005          	movff	postinc2,CAN2510SetSingleFilterStd@filter
  1836  00753E  CFDD F006          	movff	postdec2,CAN2510SetSingleFilterStd@filter+1
  1837  007542  0E01               	movlw	1
  1838  007544  ECC5  F038         	call	_CAN2510SetSingleFilterStd
  1839  007548  D020               	goto	l2078
  1840  00754A                     l2064:
  1841  00754A  C00C  F005         	movff	CAN2510SetMsgFilterStd@mask,CAN2510SetSingleMaskStd@mask
  1842  00754E  C00D  F006         	movff	CAN2510SetMsgFilterStd@mask+1,CAN2510SetSingleMaskStd@mask+1
  1843  007552  0E01               	movlw	1
  1844  007554  EC15  F038         	call	_CAN2510SetSingleMaskStd
  1845  007558  6E10               	movwf	??_CAN2510SetMsgFilterStd& (0+255),c
  1846  00755A  0E00               	movlw	0
  1847  00755C  6E54               	movwf	CAN2510SetMsgFilterStd@currFilter,c
  1848  00755E  5010               	movf	??_CAN2510SetMsgFilterStd& (0+255),w,c
  1849  007560  D011               	goto	L8
  1850  007562                     l2072:
  1851  007562  5054               	movf	CAN2510SetMsgFilterStd@currFilter,w,c
  1852  007564  0D02               	mullw	2
  1853  007566  50F3               	movf	prodl,w,c
  1854  007568  240E               	addwf	CAN2510SetMsgFilterStd@filters,w,c
  1855  00756A  6ED9               	movwf	fsr2l,c
  1856  00756C  50F4               	movf	prodh,w,c
  1857  00756E  200F               	addwfc	CAN2510SetMsgFilterStd@filters+1,w,c
  1858  007570  6EDA               	movwf	fsr2h,c
  1859  007572  CFDE F005          	movff	postinc2,CAN2510SetSingleFilterStd@filter
  1860  007576  CFDD F006          	movff	postdec2,CAN2510SetSingleFilterStd@filter+1
  1861  00757A  5054               	movf	CAN2510SetMsgFilterStd@currFilter,w,c
  1862  00757C  0F02               	addlw	2
  1863  00757E  ECC5  F038         	call	_CAN2510SetSingleFilterStd
  1864  007582  2A54               	incf	CAN2510SetMsgFilterStd@currFilter,f,c
  1865  007584                     L8:
  1866  007584  0E03               	movlw	3
  1867  007586  6454               	cpfsgt	CAN2510SetMsgFilterStd@currFilter,c
  1868  007588  D7EC               	goto	l2072
  1869  00758A                     l2078:
  1870  00758A  C055  F003         	movff	CAN2510SetMsgFilterStd@modebits,CAN2510ByteWrite@value
  1871  00758E  0E0F               	movlw	15
  1872  007590  ECC3  F037         	call	_CAN2510ByteWrite
  1873  007594  5055               	movf	CAN2510SetMsgFilterStd@modebits,w,c
  1874  007596  EC90  F037         	call	_CAN2510SetMode
  1875  00759A  D00D               	goto	l2094
  1876  00759C                     l2080:
  1877  00759C  2A12               	incf	CAN2510SetMsgFilterStd@counter1,f,c
  1878  00759E  6612               	tstfsz	CAN2510SetMsgFilterStd@counter1,c
  1879  0075A0  D00A               	goto	l2094
  1880  0075A2  5055               	movf	CAN2510SetMsgFilterStd@modebits,w,c
  1881  0075A4  EC90  F037         	call	_CAN2510SetMode
  1882  0075A8  2A13               	incf	CAN2510SetMsgFilterStd@counter2,f,c
  1883  0075AA  5013               	movf	CAN2510SetMsgFilterStd@counter2,w,c
  1884  0075AC  0A05               	xorlw	5
  1885  0075AE  A4D8               	btfss	status,2,c
  1886  0075B0  D002               	goto	l2094
  1887  0075B2                     u1390:
  1888  0075B2  0EFF               	movlw	255
  1889  0075B4  D007               	goto	l259
  1890  0075B6                     l2094:
  1891  0075B6  EC5A  F037         	call	_CAN2510ReadMode	;wreg free
  1892  0075BA  0BE0               	andlw	224
  1893  0075BC  1855               	xorwf	CAN2510SetMsgFilterStd@modebits,w,c
  1894  0075BE  A4D8               	btfss	status,2,c
  1895  0075C0  D7ED               	goto	l2080
  1896  0075C2  0E00               	movlw	0
  1897  0075C4                     l259:
  1898  0075C4  0012               	return	
  1899  0075C6                     __end_of_CAN2510SetMsgFilterStd:
  1900                           	opt stack 0
  1901                           tblptru	equ	0xFF8
  1902                           tblptrh	equ	0xFF7
  1903                           tblptrl	equ	0xFF6
  1904                           tablat	equ	0xFF5
  1905                           prodh	equ	0xFF4
  1906                           prodl	equ	0xFF3
  1907                           postinc0	equ	0xFEE
  1908                           wreg	equ	0xFE8
  1909                           postinc1	equ	0xFE6
  1910                           postdec1	equ	0xFE5
  1911                           fsr1l	equ	0xFE1
  1912                           indf2	equ	0xFDF
  1913                           postinc2	equ	0xFDE
  1914                           postdec2	equ	0xFDD
  1915                           fsr2h	equ	0xFDA
  1916                           fsr2l	equ	0xFD9
  1917                           status	equ	0xFD8
  1918                           
  1919 ;; *************** function _CAN2510SetSingleMaskStd *****************
  1920 ;; Defined at:
  1921 ;;		line 9 in file "D:\Microchip\xc8\v1.31\sources\pic18\plib\CAN2510\canmasks.c"
  1922 ;; Parameters:    Size  Location     Type
  1923 ;;  maskNum         1    wreg     unsigned char 
  1924 ;;  mask            2    4[COMRAM] unsigned int 
  1925 ;; Auto vars:     Size  Location     Type
  1926 ;;  maskNum         1    9[COMRAM] unsigned char 
  1927 ;;  writeValue      1    8[COMRAM] unsigned char 
  1928 ;; Return value:  Size  Location     Type
  1929 ;;		None               void
  1930 ;; Registers used:
  1931 ;;		wreg, status,2, status,0, cstack
  1932 ;; Tracked objects:
  1933 ;;		On entry : 0/0
  1934 ;;		On exit  : 0/0
  1935 ;;		Unchanged: 0/0
  1936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1937 ;;      Params:         2       0       0       0       0       0       0       0       0
  1938 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1939 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1940 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1941 ;;Total ram usage:        6 bytes
  1942 ;; Hardware stack levels used:    1
  1943 ;; Hardware stack levels required when called:    2
  1944 ;; This function calls:
  1945 ;;		_CAN2510ByteWrite
  1946 ;; This function is called by:
  1947 ;;		_CAN2510SetMsgFilterStd
  1948 ;; This function uses a non-reentrant model
  1949 ;;
  1950                           
  1951                           	psect	text5
  1952  00702A                     __ptext5:
  1953                           	opt stack 0
  1954  00702A                     _CAN2510SetSingleMaskStd:
  1955                           	opt stack 24
  1956                           
  1957                           ;incstack = 0
  1958                           ;CAN2510SetSingleMaskStd@maskNum stored from wreg
  1959  00702A  CFE8 F00A          	movff	wreg,CAN2510SetSingleMaskStd@maskNum
  1960  00702E  660A               	tstfsz	CAN2510SetSingleMaskStd@maskNum,c
  1961  007030  D003               	goto	l1910
  1962  007032  6E07               	movwf	??_CAN2510SetSingleMaskStd& (0+255),c
  1963  007034  0E21               	movlw	33
  1964  007036  D002               	goto	L9
  1965  007038                     l1910:
  1966  007038  6E07               	movwf	??_CAN2510SetSingleMaskStd& (0+255),c
  1967  00703A  0E25               	movlw	37
  1968  00703C                     L9:
  1969  00703C  6E0A               	movwf	CAN2510SetSingleMaskStd@maskNum,c
  1970  00703E  5007               	movf	??_CAN2510SetSingleMaskStd& (0+255),w,c
  1971  007040  3805               	swapf	CAN2510SetSingleMaskStd@mask,w,c
  1972  007042  46E8               	rlncf	wreg,f,c
  1973  007044  0BE0               	andlw	224
  1974  007046  6E09               	movwf	CAN2510SetSingleMaskStd@writeValue,c
  1975  007048  C009  F003         	movff	CAN2510SetSingleMaskStd@writeValue,CAN2510ByteWrite@value
  1976  00704C  500A               	movf	CAN2510SetSingleMaskStd@maskNum,w,c
  1977  00704E  ECC3  F037         	call	_CAN2510ByteWrite
  1978  007052  060A               	decf	CAN2510SetSingleMaskStd@maskNum,f,c
  1979  007054  C005  F007         	movff	CAN2510SetSingleMaskStd@mask,??_CAN2510SetSingleMaskStd
  1980  007058  C006  F008         	movff	CAN2510SetSingleMaskStd@mask+1,??_CAN2510SetSingleMaskStd+1
  1981  00705C  90D8               	bcf	status,0,c
  1982  00705E  3208               	rrcf	??_CAN2510SetSingleMaskStd+1,f,c
  1983  007060  3207               	rrcf	??_CAN2510SetSingleMaskStd,f,c
  1984  007062  90D8               	bcf	status,0,c
  1985  007064  3208               	rrcf	??_CAN2510SetSingleMaskStd+1,f,c
  1986  007066  3207               	rrcf	??_CAN2510SetSingleMaskStd,f,c
  1987  007068  90D8               	bcf	status,0,c
  1988  00706A  3208               	rrcf	??_CAN2510SetSingleMaskStd+1,f,c
  1989  00706C  3207               	rrcf	??_CAN2510SetSingleMaskStd,f,c
  1990  00706E  5007               	movf	??_CAN2510SetSingleMaskStd,w,c
  1991  007070  6E09               	movwf	CAN2510SetSingleMaskStd@writeValue,c
  1992  007072  C009  F003         	movff	CAN2510SetSingleMaskStd@writeValue,CAN2510ByteWrite@value
  1993  007076  500A               	movf	CAN2510SetSingleMaskStd@maskNum,w,c
  1994  007078  ECC3  F037         	call	_CAN2510ByteWrite
  1995  00707C  0012               	return	
  1996  00707E                     __end_of_CAN2510SetSingleMaskStd:
  1997                           	opt stack 0
  1998                           tblptru	equ	0xFF8
  1999                           tblptrh	equ	0xFF7
  2000                           tblptrl	equ	0xFF6
  2001                           tablat	equ	0xFF5
  2002                           prodh	equ	0xFF4
  2003                           prodl	equ	0xFF3
  2004                           postinc0	equ	0xFEE
  2005                           wreg	equ	0xFE8
  2006                           postinc1	equ	0xFE6
  2007                           postdec1	equ	0xFE5
  2008                           fsr1l	equ	0xFE1
  2009                           indf2	equ	0xFDF
  2010                           postinc2	equ	0xFDE
  2011                           postdec2	equ	0xFDD
  2012                           fsr2h	equ	0xFDA
  2013                           fsr2l	equ	0xFD9
  2014                           status	equ	0xFD8
  2015                           
  2016 ;; *************** function _CAN2510SetSingleFilterStd *****************
  2017 ;; Defined at:
  2018 ;;		line 16 in file "D:\Microchip\xc8\v1.31\sources\pic18\plib\CAN2510\canfilts.c"
  2019 ;; Parameters:    Size  Location     Type
  2020 ;;  filterNum       1    wreg     unsigned char 
  2021 ;;  filter          2    4[COMRAM] unsigned int 
  2022 ;; Auto vars:     Size  Location     Type
  2023 ;;  filterNum       1   10[COMRAM] unsigned char 
  2024 ;;  addr            1    9[COMRAM] unsigned char 
  2025 ;;  writeValue      1    8[COMRAM] unsigned char 
  2026 ;; Return value:  Size  Location     Type
  2027 ;;		None               void
  2028 ;; Registers used:
  2029 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2030 ;; Tracked objects:
  2031 ;;		On entry : 0/0
  2032 ;;		On exit  : 0/0
  2033 ;;		Unchanged: 0/0
  2034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2035 ;;      Params:         2       0       0       0       0       0       0       0       0
  2036 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2037 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2038 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2039 ;;Total ram usage:        7 bytes
  2040 ;; Hardware stack levels used:    1
  2041 ;; Hardware stack levels required when called:    2
  2042 ;; This function calls:
  2043 ;;		_CAN2510ByteWrite
  2044 ;; This function is called by:
  2045 ;;		_CAN2510SetMsgFilterStd
  2046 ;; This function uses a non-reentrant model
  2047 ;;
  2048                           
  2049                           	psect	text6
  2050  00718A                     __ptext6:
  2051                           	opt stack 0
  2052  00718A                     _CAN2510SetSingleFilterStd:
  2053                           	opt stack 24
  2054                           
  2055                           ;incstack = 0
  2056                           ;CAN2510SetSingleFilterStd@filterNum stored from wreg
  2057  00718A  CFE8 F00B          	movff	wreg,CAN2510SetSingleFilterStd@filterNum
  2058  00718E  0E03               	movlw	3
  2059  007190  5C0B               	subwf	CAN2510SetSingleFilterStd@filterNum,w,c
  2060  007192  B0D8               	btfsc	status,0,c
  2061  007194  D004               	goto	l1926
  2062  007196  500B               	movf	CAN2510SetSingleFilterStd@filterNum,w,c
  2063  007198  0D04               	mullw	4
  2064  00719A  28F3               	incf	prodl,w,c
  2065  00719C  D00B               	goto	L10
  2066  00719E                     l1926:
  2067  00719E  0E05               	movlw	5
  2068  0071A0  640B               	cpfsgt	CAN2510SetSingleFilterStd@filterNum,c
  2069  0071A2  D004               	goto	l1930
  2070  0071A4  6E07               	movwf	??_CAN2510SetSingleFilterStd& (0+255),c
  2071  0071A6  0E05               	movlw	5
  2072  0071A8  6E0B               	movwf	CAN2510SetSingleFilterStd@filterNum,c
  2073  0071AA  5007               	movf	??_CAN2510SetSingleFilterStd& (0+255),w,c
  2074  0071AC                     l1930:
  2075  0071AC  500B               	movf	CAN2510SetSingleFilterStd@filterNum,w,c
  2076  0071AE  0D04               	mullw	4
  2077  0071B0  50F3               	movf	prodl,w,c
  2078  0071B2  0F05               	addlw	5
  2079  0071B4                     L10:
  2080  0071B4  6E0A               	movwf	CAN2510SetSingleFilterStd@addr,c
  2081  0071B6  3805               	swapf	CAN2510SetSingleFilterStd@filter,w,c
  2082  0071B8  46E8               	rlncf	wreg,f,c
  2083  0071BA  0BE0               	andlw	224
  2084  0071BC  6E09               	movwf	CAN2510SetSingleFilterStd@writeValue,c
  2085  0071BE  C009  F003         	movff	CAN2510SetSingleFilterStd@writeValue,CAN2510ByteWrite@value
  2086  0071C2  500A               	movf	CAN2510SetSingleFilterStd@addr,w,c
  2087  0071C4  ECC3  F037         	call	_CAN2510ByteWrite
  2088  0071C8  060A               	decf	CAN2510SetSingleFilterStd@addr,f,c
  2089  0071CA  C005  F007         	movff	CAN2510SetSingleFilterStd@filter,??_CAN2510SetSingleFilterStd
  2090  0071CE  C006  F008         	movff	CAN2510SetSingleFilterStd@filter+1,??_CAN2510SetSingleFilterStd+1
  2091  0071D2  90D8               	bcf	status,0,c
  2092  0071D4  3208               	rrcf	??_CAN2510SetSingleFilterStd+1,f,c
  2093  0071D6  3207               	rrcf	??_CAN2510SetSingleFilterStd,f,c
  2094  0071D8  90D8               	bcf	status,0,c
  2095  0071DA  3208               	rrcf	??_CAN2510SetSingleFilterStd+1,f,c
  2096  0071DC  3207               	rrcf	??_CAN2510SetSingleFilterStd,f,c
  2097  0071DE  90D8               	bcf	status,0,c
  2098  0071E0  3208               	rrcf	??_CAN2510SetSingleFilterStd+1,f,c
  2099  0071E2  3207               	rrcf	??_CAN2510SetSingleFilterStd,f,c
  2100  0071E4  5007               	movf	??_CAN2510SetSingleFilterStd,w,c
  2101  0071E6  6E09               	movwf	CAN2510SetSingleFilterStd@writeValue,c
  2102  0071E8  C009  F003         	movff	CAN2510SetSingleFilterStd@writeValue,CAN2510ByteWrite@value
  2103  0071EC  500A               	movf	CAN2510SetSingleFilterStd@addr,w,c
  2104  0071EE  ECC3  F037         	call	_CAN2510ByteWrite
  2105  0071F2  0012               	return	
  2106  0071F4                     __end_of_CAN2510SetSingleFilterStd:
  2107                           	opt stack 0
  2108                           tblptru	equ	0xFF8
  2109                           tblptrh	equ	0xFF7
  2110                           tblptrl	equ	0xFF6
  2111                           tablat	equ	0xFF5
  2112                           prodh	equ	0xFF4
  2113                           prodl	equ	0xFF3
  2114                           postinc0	equ	0xFEE
  2115                           wreg	equ	0xFE8
  2116                           postinc1	equ	0xFE6
  2117                           postdec1	equ	0xFE5
  2118                           fsr1l	equ	0xFE1
  2119                           indf2	equ	0xFDF
  2120                           postinc2	equ	0xFDE
  2121                           postdec2	equ	0xFDD
  2122                           fsr2h	equ	0xFDA
  2123                           fsr2l	equ	0xFD9
  2124                           status	equ	0xFD8
  2125                           
  2126 ;; *************** function _CAN2510Init *****************
  2127 ;; Defined at:
  2128 ;;		line 117 in file "D:\Microchip\xc8\v1.31\sources\pic18\plib\CAN2510\caninit.c"
  2129 ;; Parameters:    Size  Location     Type
  2130 ;;  BufferConfig    4    9[COMRAM] unsigned long 
  2131 ;;  BitTimeConfi    4   13[COMRAM] unsigned long 
  2132 ;;  interruptEna    1   17[COMRAM] unsigned char 
  2133 ;;  SPI_syncMode    1   18[COMRAM] unsigned char 
  2134 ;;  SPI_busMode     1   19[COMRAM] unsigned char 
  2135 ;;  SPI_smpPhase    1   20[COMRAM] unsigned char 
  2136 ;; Auto vars:     Size  Location     Type
  2137 ;;  counter2        1   26[COMRAM] unsigned char 
  2138 ;;  counter1        1   25[COMRAM] unsigned char 
  2139 ;; Return value:  Size  Location     Type
  2140 ;;                  1    wreg      char 
  2141 ;; Registers used:
  2142 ;;		wreg, status,2, status,0, cstack
  2143 ;; Tracked objects:
  2144 ;;		On entry : 0/0
  2145 ;;		On exit  : 0/0
  2146 ;;		Unchanged: 0/0
  2147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2148 ;;      Params:        12       0       0       0       0       0       0       0       0
  2149 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2150 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2151 ;;      Totals:        18       0       0       0       0       0       0       0       0
  2152 ;;Total ram usage:       18 bytes
  2153 ;; Hardware stack levels used:    1
  2154 ;; Hardware stack levels required when called:    3
  2155 ;; This function calls:
  2156 ;;		_CAN2510BitTimeInit
  2157 ;;		_CAN2510ByteWrite
  2158 ;;		_CAN2510ReadMode
  2159 ;;		_CAN2510Reset
  2160 ;;		_CAN2510SetMode
  2161 ;;		_OpenSPI
  2162 ;; This function is called by:
  2163 ;;		_can_init
  2164 ;; This function uses a non-reentrant model
  2165 ;;
  2166                           
  2167                           	psect	text7
  2168  0075C6                     __ptext7:
  2169                           	opt stack 0
  2170  0075C6                     _CAN2510Init:
  2171                           	opt stack 24
  2172                           
  2173                           ;incstack = 0
  2174  0075C6  C014  F001         	movff	CAN2510Init@SPI_busMode,OpenSPI@bus_mode
  2175  0075CA  C015  F002         	movff	CAN2510Init@SPI_smpPhase,OpenSPI@smp_phase
  2176  0075CE  5013               	movf	CAN2510Init@SPI_syncMode,w,c
  2177  0075D0  EC3F  F038         	call	_OpenSPI
  2178  0075D4  0E80               	movlw	128
  2179  0075D6  140A               	andwf	CAN2510Init@BufferConfig,w,c
  2180  0075D8  6E16               	movwf	??_CAN2510Init& (0+255),c
  2181  0075DA  0E00               	movlw	0
  2182  0075DC  140B               	andwf	CAN2510Init@BufferConfig+1,w,c
  2183  0075DE  6E17               	movwf	(??_CAN2510Init+1)& (0+255),c
  2184  0075E0  0E00               	movlw	0
  2185  0075E2  140C               	andwf	CAN2510Init@BufferConfig+2,w,c
  2186  0075E4  6E18               	movwf	(??_CAN2510Init+2)& (0+255),c
  2187  0075E6  0EFF               	movlw	255
  2188  0075E8  140D               	andwf	CAN2510Init@BufferConfig+3,w,c
  2189  0075EA  6E19               	movwf	(??_CAN2510Init+3)& (0+255),c
  2190  0075EC  5019               	movf	??_CAN2510Init+3,w,c
  2191  0075EE  1016               	iorwf	??_CAN2510Init,w,c
  2192  0075F0  1017               	iorwf	??_CAN2510Init+1,w,c
  2193  0075F2  1018               	iorwf	??_CAN2510Init+2,w,c
  2194  0075F4  B4D8               	btfsc	status,2,c
  2195  0075F6  EC85  F037         	call	_CAN2510Reset	;wreg free
  2196  0075FA  0E80               	movlw	128
  2197  0075FC  EC90  F037         	call	_CAN2510SetMode
  2198  007600  6E16               	movwf	??_CAN2510Init& (0+255),c
  2199  007602  0E00               	movlw	0
  2200  007604  6E1A               	movwf	CAN2510Init@counter1,c
  2201  007606  5016               	movf	??_CAN2510Init& (0+255),w,c
  2202  007608  6E16               	movwf	??_CAN2510Init& (0+255),c
  2203  00760A  0E00               	movlw	0
  2204  00760C  6E1B               	movwf	CAN2510Init@counter2,c
  2205  00760E  5016               	movf	??_CAN2510Init& (0+255),w,c
  2206  007610  D00D               	goto	l2000
  2207  007612                     l1986:
  2208  007612  2A1A               	incf	CAN2510Init@counter1,f,c
  2209  007614  661A               	tstfsz	CAN2510Init@counter1,c
  2210  007616  D00A               	goto	l2000
  2211  007618  0E80               	movlw	128
  2212  00761A  EC90  F037         	call	_CAN2510SetMode
  2213  00761E  2A1B               	incf	CAN2510Init@counter2,f,c
  2214  007620  501B               	movf	CAN2510Init@counter2,w,c
  2215  007622  0A05               	xorlw	5
  2216  007624  A4D8               	btfss	status,2,c
  2217  007626  D002               	goto	l2000
  2218  007628  0EFF               	movlw	255
  2219  00762A  D065               	goto	l291
  2220  00762C                     l2000:
  2221  00762C  EC5A  F037         	call	_CAN2510ReadMode	;wreg free
  2222  007630  0A80               	xorlw	128
  2223  007632  A4D8               	btfss	status,2,c
  2224  007634  D7EE               	goto	l1986
  2225  007636  500C               	movf	CAN2510Init@BufferConfig+2,w,c
  2226  007638  0B07               	andlw	7
  2227  00763A  6E53               	movwf	CAN2510Init@setting,c
  2228  00763C  8E53               	bsf	CAN2510Init@setting,7,c
  2229  00763E  C053  F003         	movff	CAN2510Init@setting,CAN2510ByteWrite@value
  2230  007642  0E0F               	movlw	15
  2231  007644  ECC3  F037         	call	_CAN2510ByteWrite
  2232  007648  C00E  F005         	movff	CAN2510Init@BitTimeConfig,CAN2510BitTimeInit@BitTimeConfig
  2233  00764C  C00F  F006         	movff	CAN2510Init@BitTimeConfig+1,CAN2510BitTimeInit@BitTimeConfig+1
  2234  007650  C010  F007         	movff	CAN2510Init@BitTimeConfig+2,CAN2510BitTimeInit@BitTimeConfig+2
  2235  007654  C011  F008         	movff	CAN2510Init@BitTimeConfig+3,CAN2510BitTimeInit@BitTimeConfig+3
  2236  007658  EC6B  F038         	call	_CAN2510BitTimeInit	;wreg free
  2237  00765C  C00A  F016         	movff	CAN2510Init@BufferConfig,??_CAN2510Init
  2238  007660  C00B  F017         	movff	CAN2510Init@BufferConfig+1,??_CAN2510Init+1
  2239  007664  C00C  F018         	movff	CAN2510Init@BufferConfig+2,??_CAN2510Init+2
  2240  007668  C00D  F019         	movff	CAN2510Init@BufferConfig+3,??_CAN2510Init+3
  2241  00766C  0E0D               	movlw	13
  2242  00766E  D005               	goto	u1310
  2243  007670                     u1315:
  2244  007670  90D8               	bcf	status,0,c
  2245  007672  3219               	rrcf	??_CAN2510Init+3,f,c
  2246  007674  3218               	rrcf	??_CAN2510Init+2,f,c
  2247  007676  3217               	rrcf	??_CAN2510Init+1,f,c
  2248  007678  3216               	rrcf	??_CAN2510Init,f,c
  2249  00767A                     u1310:
  2250  00767A  2EE8               	decfsz	wreg,f,c
  2251  00767C  D7F9               	goto	u1315
  2252  00767E  5016               	movf	??_CAN2510Init,w,c
  2253  007680  0B07               	andlw	7
  2254  007682  6E53               	movwf	CAN2510Init@setting,c
  2255  007684  C053  F003         	movff	CAN2510Init@setting,CAN2510ByteWrite@value
  2256  007688  0E0D               	movlw	13
  2257  00768A  ECC3  F037         	call	_CAN2510ByteWrite
  2258  00768E  500B               	movf	CAN2510Init@BufferConfig+1,w,c
  2259  007690  0B0F               	andlw	15
  2260  007692  6E53               	movwf	CAN2510Init@setting,c
  2261  007694  500A               	movf	CAN2510Init@BufferConfig,w,c
  2262  007696  240A               	addwf	CAN2510Init@BufferConfig,w,c
  2263  007698  0B30               	andlw	48
  2264  00769A  1253               	iorwf	CAN2510Init@setting,f,c
  2265  00769C  C053  F003         	movff	CAN2510Init@setting,CAN2510ByteWrite@value
  2266  0076A0  0E0C               	movlw	12
  2267  0076A2  ECC3  F037         	call	_CAN2510ByteWrite
  2268  0076A6  500A               	movf	CAN2510Init@BufferConfig,w,c
  2269  0076A8  0B60               	andlw	96
  2270  0076AA  0AFF               	xorlw	255
  2271  0076AC  6E16               	movwf	??_CAN2510Init& (0+255),c
  2272  0076AE  500A               	movf	CAN2510Init@BufferConfig,w,c
  2273  0076B0  0B04               	andlw	4
  2274  0076B2  1016               	iorwf	??_CAN2510Init,w,c
  2275  0076B4  6E53               	movwf	CAN2510Init@setting,c
  2276  0076B6  C053  F003         	movff	CAN2510Init@setting,CAN2510ByteWrite@value
  2277  0076BA  0E60               	movlw	96
  2278  0076BC  ECC3  F037         	call	_CAN2510ByteWrite
  2279  0076C0  380A               	swapf	CAN2510Init@BufferConfig,w,c
  2280  0076C2  46E8               	rlncf	wreg,f,c
  2281  0076C4  0BE0               	andlw	224
  2282  0076C6  0AFF               	xorlw	255
  2283  0076C8  0B60               	andlw	96
  2284  0076CA  6E53               	movwf	CAN2510Init@setting,c
  2285  0076CC  C053  F003         	movff	CAN2510Init@setting,CAN2510ByteWrite@value
  2286  0076D0  0E70               	movlw	112
  2287  0076D2  ECC3  F037         	call	_CAN2510ByteWrite
  2288  0076D6  5012               	movf	CAN2510Init@interruptEnables,w,c
  2289  0076D8  0AFF               	xorlw	255
  2290  0076DA  6E53               	movwf	CAN2510Init@setting,c
  2291  0076DC  6E16               	movwf	??_CAN2510Init& (0+255),c
  2292  0076DE  0E00               	movlw	0
  2293  0076E0  6E03               	movwf	CAN2510ByteWrite@value,c
  2294  0076E2  5016               	movf	??_CAN2510Init& (0+255),w,c
  2295  0076E4  0E2C               	movlw	44
  2296  0076E6  ECC3  F037         	call	_CAN2510ByteWrite
  2297  0076EA  C053  F003         	movff	CAN2510Init@setting,CAN2510ByteWrite@value
  2298  0076EE  0E2B               	movlw	43
  2299  0076F0  ECC3  F037         	call	_CAN2510ByteWrite
  2300  0076F4  0E00               	movlw	0
  2301  0076F6                     l291:
  2302  0076F6  0012               	return	
  2303  0076F8                     __end_of_CAN2510Init:
  2304                           	opt stack 0
  2305                           tblptru	equ	0xFF8
  2306                           tblptrh	equ	0xFF7
  2307                           tblptrl	equ	0xFF6
  2308                           tablat	equ	0xFF5
  2309                           prodh	equ	0xFF4
  2310                           prodl	equ	0xFF3
  2311                           postinc0	equ	0xFEE
  2312                           wreg	equ	0xFE8
  2313                           postinc1	equ	0xFE6
  2314                           postdec1	equ	0xFE5
  2315                           fsr1l	equ	0xFE1
  2316                           indf2	equ	0xFDF
  2317                           postinc2	equ	0xFDE
  2318                           postdec2	equ	0xFDD
  2319                           fsr2h	equ	0xFDA
  2320                           fsr2l	equ	0xFD9
  2321                           status	equ	0xFD8
  2322                           
  2323 ;; *************** function _OpenSPI *****************
  2324 ;; Defined at:
  2325 ;;		line 14 in file "D:\Microchip\xc8\v1.31\sources\pic18\plib\SPI\spi_open.c"
  2326 ;; Parameters:    Size  Location     Type
  2327 ;;  sync_mode       1    wreg     unsigned char 
  2328 ;;  bus_mode        1    0[COMRAM] unsigned char 
  2329 ;;  smp_phase       1    1[COMRAM] unsigned char 
  2330 ;; Auto vars:     Size  Location     Type
  2331 ;;  sync_mode       1    2[COMRAM] unsigned char 
  2332 ;; Return value:  Size  Location     Type
  2333 ;;		None               void
  2334 ;; Registers used:
  2335 ;;		wreg, status,2, status,0
  2336 ;; Tracked objects:
  2337 ;;		On entry : 0/0
  2338 ;;		On exit  : 0/0
  2339 ;;		Unchanged: 0/0
  2340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2341 ;;      Params:         2       0       0       0       0       0       0       0       0
  2342 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2343 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2344 ;;      Totals:         3       0       0       0       0       0       0       0       0
  2345 ;;Total ram usage:        3 bytes
  2346 ;; Hardware stack levels used:    1
  2347 ;; This function calls:
  2348 ;;		Nothing
  2349 ;; This function is called by:
  2350 ;;		_CAN2510Init
  2351 ;; This function uses a non-reentrant model
  2352 ;;
  2353                           
  2354                           	psect	text8
  2355  00707E                     __ptext8:
  2356                           	opt stack 0
  2357  00707E                     _OpenSPI:
  2358                           	opt stack 26
  2359                           
  2360                           ;incstack = 0
  2361                           ;OpenSPI@sync_mode stored from wreg
  2362  00707E  CFE8 F003          	movff	wreg,OpenSPI@sync_mode
  2363  007082  0E3F               	movlw	63
  2364  007084  16C7               	andwf	4039,f,c	;volatile
  2365  007086  0E00               	movlw	0
  2366  007088  6EC6               	movwf	4038,c	;volatile
  2367  00708A  5003               	movf	OpenSPI@sync_mode,w,c
  2368  00708C  12C6               	iorwf	4038,f,c	;volatile
  2369  00708E  5002               	movf	OpenSPI@smp_phase,w,c
  2370  007090  12C7               	iorwf	4039,f,c	;volatile
  2371  007092  D005               	goto	l1952
  2372  007094                     l366:
  2373  007094  8CC7               	bsf	4039,6,c	;volatile
  2374  007096  D013               	goto	l1956
  2375  007098                     l368:
  2376  007098  8CC7               	bsf	4039,6,c	;volatile
  2377  00709A                     l369:
  2378  00709A  88C6               	bsf	4038,4,c	;volatile
  2379  00709C  D010               	goto	l1956
  2380  00709E                     l1952:
  2381  00709E  5001               	movf	OpenSPI@bus_mode,w,c
  2382                           
  2383                           ; Switch size 1, requested type "space"
  2384                           ; Number of cases is 3, Range of values is 0 to 3
  2385                           ; switch strategies available:
  2386                           ; Name         Instructions Cycles
  2387                           ; simple_byte           10     6 (average)
  2388                           ;	Chosen strategy is simple_byte
  2389  0070A0  0A00               	xorlw	0	; case 0
  2390  0070A2  B4D8               	btfsc	status,2,c
  2391  0070A4  D7F7               	goto	l366
  2392  0070A6  0A02               	xorlw	2	; case 2
  2393  0070A8  B4D8               	btfsc	status,2,c
  2394  0070AA  D7F6               	goto	l368
  2395  0070AC  0A01               	xorlw	1	; case 3
  2396  0070AE  B4D8               	btfsc	status,2,c
  2397  0070B0  D7F4               	goto	l369
  2398  0070B2  D005               	goto	l1956
  2399  0070B4                     l372:
  2400  0070B4  8A92               	bsf	3986,5,c	;volatile
  2401  0070B6                     l374:
  2402  0070B6  8293               	bsf	3987,1,c	;volatile
  2403  0070B8  D00A               	goto	l373
  2404  0070BA                     l375:
  2405  0070BA  9293               	bcf	3987,1,c	;volatile
  2406  0070BC  D008               	goto	l373
  2407  0070BE                     l1956:
  2408  0070BE  5003               	movf	OpenSPI@sync_mode,w,c
  2409                           
  2410                           ; Switch size 1, requested type "space"
  2411                           ; Number of cases is 2, Range of values is 4 to 5
  2412                           ; switch strategies available:
  2413                           ; Name         Instructions Cycles
  2414                           ; simple_byte            7     4 (average)
  2415                           ;	Chosen strategy is simple_byte
  2416  0070C0  0A04               	xorlw	4	; case 4
  2417  0070C2  B4D8               	btfsc	status,2,c
  2418  0070C4  D7F7               	goto	l372
  2419  0070C6  0A01               	xorlw	1	; case 5
  2420  0070C8  B4D8               	btfsc	status,2,c
  2421  0070CA  D7F5               	goto	l374
  2422  0070CC  D7F6               	goto	l375
  2423  0070CE                     l373:
  2424  0070CE  8093               	bsf	3987,0,c	;volatile
  2425  0070D0  9E94               	bcf	3988,7,c	;volatile
  2426  0070D2  8AC6               	bsf	4038,5,c	;volatile
  2427  0070D4  0012               	return	
  2428  0070D6                     __end_of_OpenSPI:
  2429                           	opt stack 0
  2430                           tblptru	equ	0xFF8
  2431                           tblptrh	equ	0xFF7
  2432                           tblptrl	equ	0xFF6
  2433                           tablat	equ	0xFF5
  2434                           prodh	equ	0xFF4
  2435                           prodl	equ	0xFF3
  2436                           postinc0	equ	0xFEE
  2437                           wreg	equ	0xFE8
  2438                           postinc1	equ	0xFE6
  2439                           postdec1	equ	0xFE5
  2440                           fsr1l	equ	0xFE1
  2441                           indf2	equ	0xFDF
  2442                           postinc2	equ	0xFDE
  2443                           postdec2	equ	0xFDD
  2444                           fsr2h	equ	0xFDA
  2445                           fsr2l	equ	0xFD9
  2446                           status	equ	0xFD8
  2447                           
  2448 ;; *************** function _CAN2510SetMode *****************
  2449 ;; Defined at:
  2450 ;;		line 8 in file "D:\Microchip\xc8\v1.31\sources\pic18\plib\CAN2510\canmodes.c"
  2451 ;; Parameters:    Size  Location     Type
  2452 ;;  mode            1    wreg     unsigned char 
  2453 ;; Auto vars:     Size  Location     Type
  2454 ;;  mode            1    6[COMRAM] unsigned char 
  2455 ;; Return value:  Size  Location     Type
  2456 ;;		None               void
  2457 ;; Registers used:
  2458 ;;		wreg, status,2, status,0, cstack
  2459 ;; Tracked objects:
  2460 ;;		On entry : 0/0
  2461 ;;		On exit  : 0/0
  2462 ;;		Unchanged: 0/0
  2463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2464 ;;      Params:         0       0       0       0       0       0       0       0       0
  2465 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2466 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2467 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2468 ;;Total ram usage:        2 bytes
  2469 ;; Hardware stack levels used:    1
  2470 ;; Hardware stack levels required when called:    2
  2471 ;; This function calls:
  2472 ;;		_CAN2510BitModify
  2473 ;; This function is called by:
  2474 ;;		_can_init
  2475 ;;		_CAN2510SetMsgFilterStd
  2476 ;;		_CAN2510Init
  2477 ;; This function uses a non-reentrant model
  2478 ;;
  2479                           
  2480                           	psect	text9
  2481  006F20                     __ptext9:
  2482                           	opt stack 0
  2483  006F20                     _CAN2510SetMode:
  2484                           	opt stack 24
  2485                           
  2486                           ;incstack = 0
  2487                           ;CAN2510SetMode@mode stored from wreg
  2488  006F20  CFE8 F007          	movff	wreg,CAN2510SetMode@mode
  2489  006F24  6E06               	movwf	??_CAN2510SetMode& (0+255),c
  2490  006F26  0EE0               	movlw	224
  2491  006F28  6E03               	movwf	CAN2510BitModify@mask,c
  2492  006F2A  5006               	movf	??_CAN2510SetMode& (0+255),w,c
  2493  006F2C  C007  F004         	movff	CAN2510SetMode@mode,CAN2510BitModify@value
  2494  006F30  0E0F               	movlw	15
  2495  006F32  ECF6  F037         	call	_CAN2510BitModify
  2496  006F36  0012               	return	
  2497  006F38                     __end_of_CAN2510SetMode:
  2498                           	opt stack 0
  2499                           tblptru	equ	0xFF8
  2500                           tblptrh	equ	0xFF7
  2501                           tblptrl	equ	0xFF6
  2502                           tablat	equ	0xFF5
  2503                           prodh	equ	0xFF4
  2504                           prodl	equ	0xFF3
  2505                           postinc0	equ	0xFEE
  2506                           wreg	equ	0xFE8
  2507                           postinc1	equ	0xFE6
  2508                           postdec1	equ	0xFE5
  2509                           fsr1l	equ	0xFE1
  2510                           indf2	equ	0xFDF
  2511                           postinc2	equ	0xFDE
  2512                           postdec2	equ	0xFDD
  2513                           fsr2h	equ	0xFDA
  2514                           fsr2l	equ	0xFD9
  2515                           status	equ	0xFD8
  2516                           
  2517 ;; *************** function _CAN2510Reset *****************
  2518 ;; Defined at:
  2519 ;;		line 9 in file "D:\Microchip\xc8\v1.31\sources\pic18\plib\CAN2510\CANreset.c"
  2520 ;; Parameters:    Size  Location     Type
  2521 ;;		None
  2522 ;; Auto vars:     Size  Location     Type
  2523 ;;		None
  2524 ;; Return value:  Size  Location     Type
  2525 ;;		None               void
  2526 ;; Registers used:
  2527 ;;		wreg, status,2, status,0, cstack
  2528 ;; Tracked objects:
  2529 ;;		On entry : 0/0
  2530 ;;		On exit  : 0/0
  2531 ;;		Unchanged: 0/0
  2532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2533 ;;      Params:         0       0       0       0       0       0       0       0       0
  2534 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2535 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2536 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2537 ;;Total ram usage:        0 bytes
  2538 ;; Hardware stack levels used:    1
  2539 ;; Hardware stack levels required when called:    1
  2540 ;; This function calls:
  2541 ;;		_CAN2510Disable
  2542 ;;		_CAN2510Enable
  2543 ;;		_WriteSPI
  2544 ;; This function is called by:
  2545 ;;		_error_handle
  2546 ;;		_CAN2510Init
  2547 ;; This function uses a non-reentrant model
  2548 ;;
  2549                           
  2550                           	psect	text10
  2551  006F0A                     __ptext10:
  2552                           	opt stack 0
  2553  006F0A                     _CAN2510Reset:
  2554                           	opt stack 25
  2555                           
  2556                           ;incstack = 0
  2557  006F0A  EC52  F037         	call	_CAN2510Enable	;wreg free
  2558  006F0E                     l1902:
  2559  006F0E  0EC0               	movlw	192
  2560  006F10  EC9C  F037         	call	_WriteSPI
  2561  006F14  0900               	iorlw	0
  2562  006F16  A4D8               	btfss	status,2,c
  2563  006F18  D7FA               	goto	l1902
  2564  006F1A  EC4F  F037         	call	_CAN2510Disable	;wreg free
  2565  006F1E  0012               	return	
  2566  006F20                     __end_of_CAN2510Reset:
  2567                           	opt stack 0
  2568                           tblptru	equ	0xFF8
  2569                           tblptrh	equ	0xFF7
  2570                           tblptrl	equ	0xFF6
  2571                           tablat	equ	0xFF5
  2572                           prodh	equ	0xFF4
  2573                           prodl	equ	0xFF3
  2574                           postinc0	equ	0xFEE
  2575                           wreg	equ	0xFE8
  2576                           postinc1	equ	0xFE6
  2577                           postdec1	equ	0xFE5
  2578                           fsr1l	equ	0xFE1
  2579                           indf2	equ	0xFDF
  2580                           postinc2	equ	0xFDE
  2581                           postdec2	equ	0xFDD
  2582                           fsr2h	equ	0xFDA
  2583                           fsr2l	equ	0xFD9
  2584                           status	equ	0xFD8
  2585                           
  2586 ;; *************** function _CAN2510ReadMode *****************
  2587 ;; Defined at:
  2588 ;;		line 8 in file "D:\Microchip\xc8\v1.31\sources\pic18\plib\CAN2510\canmoder.c"
  2589 ;; Parameters:    Size  Location     Type
  2590 ;;		None
  2591 ;; Auto vars:     Size  Location     Type
  2592 ;;  mode            1    4[COMRAM] unsigned char 
  2593 ;; Return value:  Size  Location     Type
  2594 ;;                  1    wreg      unsigned char 
  2595 ;; Registers used:
  2596 ;;		wreg, status,2, status,0, cstack
  2597 ;; Tracked objects:
  2598 ;;		On entry : 0/0
  2599 ;;		On exit  : 0/0
  2600 ;;		Unchanged: 0/0
  2601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2602 ;;      Params:         0       0       0       0       0       0       0       0       0
  2603 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2604 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2605 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2606 ;;Total ram usage:        1 bytes
  2607 ;; Hardware stack levels used:    1
  2608 ;; Hardware stack levels required when called:    2
  2609 ;; This function calls:
  2610 ;;		_CAN2510ByteRead
  2611 ;; This function is called by:
  2612 ;;		_can_init
  2613 ;;		_CAN2510SetMsgFilterStd
  2614 ;;		_CAN2510Init
  2615 ;; This function uses a non-reentrant model
  2616 ;;
  2617                           
  2618                           	psect	text11
  2619  006EB4                     __ptext11:
  2620                           	opt stack 0
  2621  006EB4                     _CAN2510ReadMode:
  2622                           	opt stack 24
  2623                           
  2624                           ;incstack = 0
  2625  006EB4  0E0E               	movlw	14
  2626  006EB6  ECAC  F037         	call	_CAN2510ByteRead
  2627  006EBA  6E05               	movwf	CAN2510ReadMode@mode,c
  2628  006EBC  5005               	movf	CAN2510ReadMode@mode,w,c
  2629  006EBE  0BE0               	andlw	224
  2630  006EC0  0012               	return	
  2631  006EC2                     __end_of_CAN2510ReadMode:
  2632                           	opt stack 0
  2633                           tblptru	equ	0xFF8
  2634                           tblptrh	equ	0xFF7
  2635                           tblptrl	equ	0xFF6
  2636                           tablat	equ	0xFF5
  2637                           prodh	equ	0xFF4
  2638                           prodl	equ	0xFF3
  2639                           postinc0	equ	0xFEE
  2640                           wreg	equ	0xFE8
  2641                           postinc1	equ	0xFE6
  2642                           postdec1	equ	0xFE5
  2643                           fsr1l	equ	0xFE1
  2644                           indf2	equ	0xFDF
  2645                           postinc2	equ	0xFDE
  2646                           postdec2	equ	0xFDD
  2647                           fsr2h	equ	0xFDA
  2648                           fsr2l	equ	0xFD9
  2649                           status	equ	0xFD8
  2650                           
  2651 ;; *************** function _CAN2510BitTimeInit *****************
  2652 ;; Defined at:
  2653 ;;		line 226 in file "D:\Microchip\xc8\v1.31\sources\pic18\plib\CAN2510\caninit.c"
  2654 ;; Parameters:    Size  Location     Type
  2655 ;;  BitTimeConfi    4    4[COMRAM] unsigned long 
  2656 ;; Auto vars:     Size  Location     Type
  2657 ;;		None
  2658 ;; Return value:  Size  Location     Type
  2659 ;;		None               void
  2660 ;; Registers used:
  2661 ;;		wreg, status,2, status,0, cstack
  2662 ;; Tracked objects:
  2663 ;;		On entry : 0/0
  2664 ;;		On exit  : 0/0
  2665 ;;		Unchanged: 0/0
  2666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2667 ;;      Params:         4       0       0       0       0       0       0       0       0
  2668 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2669 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2670 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2671 ;;Total ram usage:        5 bytes
  2672 ;; Hardware stack levels used:    1
  2673 ;; Hardware stack levels required when called:    2
  2674 ;; This function calls:
  2675 ;;		_CAN2510ByteWrite
  2676 ;; This function is called by:
  2677 ;;		_CAN2510Init
  2678 ;; This function uses a non-reentrant model
  2679 ;;
  2680                           
  2681                           	psect	text12
  2682  0070D6                     __ptext12:
  2683                           	opt stack 0
  2684  0070D6                     _CAN2510BitTimeInit:
  2685                           	opt stack 24
  2686                           
  2687                           ;incstack = 0
  2688  0070D6  C005  F04F         	movff	CAN2510BitTimeInit@BitTimeConfig,CAN2510BitTimeInit@databyte
  2689  0070DA  504F               	movf	CAN2510BitTimeInit@databyte,w,c
  2690  0070DC  0AFF               	xorlw	255
  2691  0070DE  6E4E               	movwf	CAN2510BitTimeInit@WriteData,c
  2692  0070E0  C04E  F003         	movff	CAN2510BitTimeInit@WriteData,CAN2510ByteWrite@value
  2693  0070E4  0E2A               	movlw	42
  2694  0070E6  ECC3  F037         	call	_CAN2510ByteWrite
  2695  0070EA  C006  F04F         	movff	CAN2510BitTimeInit@BitTimeConfig+1,CAN2510BitTimeInit@databyte
  2696  0070EE  504F               	movf	CAN2510BitTimeInit@databyte,w,c
  2697  0070F0  0AFF               	xorlw	255
  2698  0070F2  6E09               	movwf	??_CAN2510BitTimeInit& (0+255),c
  2699  0070F4  0E3F               	movlw	63
  2700  0070F6  1609               	andwf	??_CAN2510BitTimeInit,f,c
  2701  0070F8  504F               	movf	CAN2510BitTimeInit@databyte,w,c
  2702  0070FA  0BC0               	andlw	192
  2703  0070FC  1009               	iorwf	??_CAN2510BitTimeInit,w,c
  2704  0070FE  6E4E               	movwf	CAN2510BitTimeInit@WriteData,c
  2705  007100  C04E  F003         	movff	CAN2510BitTimeInit@WriteData,CAN2510ByteWrite@value
  2706  007104  0E29               	movlw	41
  2707  007106  ECC3  F037         	call	_CAN2510ByteWrite
  2708  00710A  C007  F04F         	movff	CAN2510BitTimeInit@BitTimeConfig+2,CAN2510BitTimeInit@databyte
  2709  00710E  0E47               	movlw	71
  2710  007110  164F               	andwf	CAN2510BitTimeInit@databyte,f,c
  2711  007112  504F               	movf	CAN2510BitTimeInit@databyte,w,c
  2712  007114  0AFF               	xorlw	255
  2713  007116  6E09               	movwf	??_CAN2510BitTimeInit& (0+255),c
  2714  007118  0E06               	movlw	6
  2715  00711A  1609               	andwf	??_CAN2510BitTimeInit,f,c
  2716  00711C  504F               	movf	CAN2510BitTimeInit@databyte,w,c
  2717  00711E  0B41               	andlw	65
  2718  007120  1009               	iorwf	??_CAN2510BitTimeInit,w,c
  2719  007122  6E4E               	movwf	CAN2510BitTimeInit@WriteData,c
  2720  007124  C04E  F003         	movff	CAN2510BitTimeInit@WriteData,CAN2510ByteWrite@value
  2721  007128  0E28               	movlw	40
  2722  00712A  ECC3  F037         	call	_CAN2510ByteWrite
  2723  00712E  0012               	return	
  2724  007130                     __end_of_CAN2510BitTimeInit:
  2725                           	opt stack 0
  2726                           tblptru	equ	0xFF8
  2727                           tblptrh	equ	0xFF7
  2728                           tblptrl	equ	0xFF6
  2729                           tablat	equ	0xFF5
  2730                           prodh	equ	0xFF4
  2731                           prodl	equ	0xFF3
  2732                           postinc0	equ	0xFEE
  2733                           wreg	equ	0xFE8
  2734                           postinc1	equ	0xFE6
  2735                           postdec1	equ	0xFE5
  2736                           fsr1l	equ	0xFE1
  2737                           indf2	equ	0xFDF
  2738                           postinc2	equ	0xFDE
  2739                           postdec2	equ	0xFDD
  2740                           fsr2h	equ	0xFDA
  2741                           fsr2l	equ	0xFD9
  2742                           status	equ	0xFD8
  2743                           
  2744 ;; *************** function _CAN2510ByteWrite *****************
  2745 ;; Defined at:
  2746 ;;		line 9 in file "D:\Microchip\xc8\v1.31\sources\pic18\plib\CAN2510\WrtByte.c"
  2747 ;; Parameters:    Size  Location     Type
  2748 ;;  addr            1    wreg     unsigned char 
  2749 ;;  value           1    2[COMRAM] unsigned char 
  2750 ;; Auto vars:     Size  Location     Type
  2751 ;;  addr            1    3[COMRAM] unsigned char 
  2752 ;; Return value:  Size  Location     Type
  2753 ;;		None               void
  2754 ;; Registers used:
  2755 ;;		wreg, status,2, status,0, cstack
  2756 ;; Tracked objects:
  2757 ;;		On entry : 0/0
  2758 ;;		On exit  : 0/0
  2759 ;;		Unchanged: 0/0
  2760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2761 ;;      Params:         1       0       0       0       0       0       0       0       0
  2762 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2763 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2764 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2765 ;;Total ram usage:        2 bytes
  2766 ;; Hardware stack levels used:    1
  2767 ;; Hardware stack levels required when called:    1
  2768 ;; This function calls:
  2769 ;;		_CAN2510Disable
  2770 ;;		_CAN2510Enable
  2771 ;;		_WriteSPI
  2772 ;; This function is called by:
  2773 ;;		_CAN2510SetMsgFilterStd
  2774 ;;		_CAN2510Init
  2775 ;;		_CAN2510BitTimeInit
  2776 ;;		_CAN2510SetSingleMaskStd
  2777 ;;		_CAN2510SetSingleFilterStd
  2778 ;; This function uses a non-reentrant model
  2779 ;;
  2780                           
  2781                           	psect	text13
  2782  006F86                     __ptext13:
  2783                           	opt stack 0
  2784  006F86                     _CAN2510ByteWrite:
  2785                           	opt stack 24
  2786                           
  2787                           ;incstack = 0
  2788                           ;CAN2510ByteWrite@addr stored from wreg
  2789  006F86  CFE8 F004          	movff	wreg,CAN2510ByteWrite@addr
  2790  006F8A  EC52  F037         	call	_CAN2510Enable	;wreg free
  2791  006F8E                     l1872:
  2792  006F8E  0E02               	movlw	2
  2793  006F90  EC9C  F037         	call	_WriteSPI
  2794  006F94  0900               	iorlw	0
  2795  006F96  A4D8               	btfss	status,2,c
  2796  006F98  D7FA               	goto	l1872
  2797  006F9A                     l1874:
  2798  006F9A  5004               	movf	CAN2510ByteWrite@addr,w,c
  2799  006F9C  EC9C  F037         	call	_WriteSPI
  2800  006FA0  0900               	iorlw	0
  2801  006FA2  A4D8               	btfss	status,2,c
  2802  006FA4  D7FA               	goto	l1874
  2803  006FA6                     l1876:
  2804  006FA6  5003               	movf	CAN2510ByteWrite@value,w,c
  2805  006FA8  EC9C  F037         	call	_WriteSPI
  2806  006FAC  0900               	iorlw	0
  2807  006FAE  A4D8               	btfss	status,2,c
  2808  006FB0  D7FA               	goto	l1876
  2809  006FB2  EC4F  F037         	call	_CAN2510Disable	;wreg free
  2810  006FB6  0012               	return	
  2811  006FB8                     __end_of_CAN2510ByteWrite:
  2812                           	opt stack 0
  2813                           tblptru	equ	0xFF8
  2814                           tblptrh	equ	0xFF7
  2815                           tblptrl	equ	0xFF6
  2816                           tablat	equ	0xFF5
  2817                           prodh	equ	0xFF4
  2818                           prodl	equ	0xFF3
  2819                           postinc0	equ	0xFEE
  2820                           wreg	equ	0xFE8
  2821                           postinc1	equ	0xFE6
  2822                           postdec1	equ	0xFE5
  2823                           fsr1l	equ	0xFE1
  2824                           indf2	equ	0xFDF
  2825                           postinc2	equ	0xFDE
  2826                           postdec2	equ	0xFDD
  2827                           fsr2h	equ	0xFDA
  2828                           fsr2l	equ	0xFD9
  2829                           status	equ	0xFD8
  2830                           
  2831 ;; *************** function _CAN2510ErrorState *****************
  2832 ;; Defined at:
  2833 ;;		line 8 in file "D:\Microchip\xc8\v1.31\sources\pic18\plib\CAN2510\canerrst.c"
  2834 ;; Parameters:    Size  Location     Type
  2835 ;;		None
  2836 ;; Auto vars:     Size  Location     Type
  2837 ;;  BufferEFLG      1    4[COMRAM] struct EFLG
  2838 ;; Return value:  Size  Location     Type
  2839 ;;                  1    wreg      unsigned char 
  2840 ;; Registers used:
  2841 ;;		wreg, status,2, status,0, cstack
  2842 ;; Tracked objects:
  2843 ;;		On entry : 0/0
  2844 ;;		On exit  : 0/0
  2845 ;;		Unchanged: 0/0
  2846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2847 ;;      Params:         0       0       0       0       0       0       0       0       0
  2848 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2849 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2850 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2851 ;;Total ram usage:        1 bytes
  2852 ;; Hardware stack levels used:    1
  2853 ;; Hardware stack levels required when called:    2
  2854 ;; This function calls:
  2855 ;;		_CAN2510ByteRead
  2856 ;; This function is called by:
  2857 ;;		_error_handle
  2858 ;; This function uses a non-reentrant model
  2859 ;;
  2860                           
  2861                           	psect	text14
  2862  006FB8                     __ptext14:
  2863                           	opt stack 0
  2864  006FB8                     _CAN2510ErrorState:
  2865                           	opt stack 26
  2866                           
  2867                           ;incstack = 0
  2868  006FB8  0E2D               	movlw	45
  2869  006FBA  ECAC  F037         	call	_CAN2510ByteRead
  2870  006FBE  6E05               	movwf	CAN2510ErrorState@BufferEFLG,c
  2871  006FC0  A405               	btfss	CAN2510ErrorState@BufferEFLG,2,c
  2872  006FC2  D002               	goto	l228
  2873  006FC4  0E05               	movlw	5
  2874  006FC6  D011               	goto	l229
  2875  006FC8                     l228:
  2876  006FC8  A605               	btfss	CAN2510ErrorState@BufferEFLG,3,c
  2877  006FCA  D002               	goto	l231
  2878  006FCC  0E04               	movlw	4
  2879  006FCE  D00D               	goto	l229
  2880  006FD0                     l231:
  2881  006FD0  A805               	btfss	CAN2510ErrorState@BufferEFLG,4,c
  2882  006FD2  D002               	goto	l233
  2883  006FD4  0E03               	movlw	3
  2884  006FD6  D009               	goto	l229
  2885  006FD8                     l233:
  2886  006FD8  AA05               	btfss	CAN2510ErrorState@BufferEFLG,5,c
  2887  006FDA  D002               	goto	l235
  2888  006FDC  0E02               	movlw	2
  2889  006FDE  D005               	goto	l229
  2890  006FE0                     l235:
  2891  006FE0  AC05               	btfss	CAN2510ErrorState@BufferEFLG,6,c
  2892  006FE2  D002               	goto	l2164
  2893  006FE4  0E01               	movlw	1
  2894  006FE6  D001               	goto	l229
  2895  006FE8                     l2164:
  2896  006FE8  0E00               	movlw	0
  2897  006FEA                     l229:
  2898  006FEA  0012               	return	
  2899  006FEC                     __end_of_CAN2510ErrorState:
  2900                           	opt stack 0
  2901                           tblptru	equ	0xFF8
  2902                           tblptrh	equ	0xFF7
  2903                           tblptrl	equ	0xFF6
  2904                           tablat	equ	0xFF5
  2905                           prodh	equ	0xFF4
  2906                           prodl	equ	0xFF3
  2907                           postinc0	equ	0xFEE
  2908                           wreg	equ	0xFE8
  2909                           postinc1	equ	0xFE6
  2910                           postdec1	equ	0xFE5
  2911                           fsr1l	equ	0xFE1
  2912                           indf2	equ	0xFDF
  2913                           postinc2	equ	0xFDE
  2914                           postdec2	equ	0xFDD
  2915                           fsr2h	equ	0xFDA
  2916                           fsr2l	equ	0xFD9
  2917                           status	equ	0xFD8
  2918                           
  2919 ;; *************** function _CAN2510DataRead *****************
  2920 ;; Defined at:
  2921 ;;		line 8 in file "D:\Microchip\xc8\v1.31\sources\pic18\plib\CAN2510\canread.c"
  2922 ;; Parameters:    Size  Location     Type
  2923 ;;  bufferNum       1    wreg     unsigned char 
  2924 ;;  msgId           2    5[COMRAM] PTR unsigned long 
  2925 ;;		 -> can_msg_ID_0(4), can_msg_ID_1(4), 
  2926 ;;  numBytes        2    7[COMRAM] PTR unsigned char 
  2927 ;;		 -> num_bytes_0(1), num_bytes_1(1), 
  2928 ;;  data            2    9[COMRAM] PTR unsigned char 
  2929 ;;		 -> rx_data_0(8), rx_data_1(8), 
  2930 ;; Auto vars:     Size  Location     Type
  2931 ;;  bufferNum       1   17[COMRAM] unsigned char 
  2932 ;;  tempSIDL        1   18[COMRAM] unsigned char 
  2933 ;;  result          1   16[COMRAM] unsigned char 
  2934 ;; Return value:  Size  Location     Type
  2935 ;;                  1    wreg      unsigned char 
  2936 ;; Registers used:
  2937 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2938 ;; Tracked objects:
  2939 ;;		On entry : 0/0
  2940 ;;		On exit  : 0/0
  2941 ;;		Unchanged: 0/0
  2942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2943 ;;      Params:         6       0       0       0       0       0       0       0       0
  2944 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2945 ;;      Temps:          5       0       0       0       0       0       0       0       0
  2946 ;;      Totals:        14       0       0       0       0       0       0       0       0
  2947 ;;Total ram usage:       14 bytes
  2948 ;; Hardware stack levels used:    1
  2949 ;; Hardware stack levels required when called:    2
  2950 ;; This function calls:
  2951 ;;		_CAN2510BitModify
  2952 ;;		_CAN2510ByteRead
  2953 ;; This function is called by:
  2954 ;;		_interrupt_handle
  2955 ;; This function uses a non-reentrant model
  2956 ;;
  2957                           
  2958                           	psect	text15
  2959  00786E                     __ptext15:
  2960                           	opt stack 0
  2961  00786E                     _CAN2510DataRead:
  2962                           	opt stack 27
  2963                           
  2964                           ;incstack = 0
  2965                           ;CAN2510DataRead@bufferNum stored from wreg
  2966  00786E  CFE8 F012          	movff	wreg,CAN2510DataRead@bufferNum
  2967  007872  0E01               	movlw	1
  2968  007874  1612               	andwf	CAN2510DataRead@bufferNum,f,c
  2969  007876  5012               	movf	CAN2510DataRead@bufferNum,w,c
  2970  007878  0F06               	addlw	6
  2971  00787A  6E51               	movwf	CAN2510DataRead@bufferAddr,c
  2972  00787C  3A51               	swapf	CAN2510DataRead@bufferAddr,f,c
  2973  00787E  0EF0               	movlw	240
  2974  007880  1651               	andwf	CAN2510DataRead@bufferAddr,f,c
  2975  007882  5051               	movf	CAN2510DataRead@bufferAddr,w,c
  2976  007884  0F05               	addlw	5
  2977  007886  ECAC  F037         	call	_CAN2510ByteRead
  2978  00788A  6E50               	movwf	CAN2510DataRead@DLCRegister,c
  2979  00788C  5050               	movf	CAN2510DataRead@DLCRegister,w,c
  2980  00788E  0B0F               	andlw	15
  2981  007890  6E52               	movwf	CAN2510DataRead@readValue,c
  2982  007892  0E08               	movlw	8
  2983  007894  6452               	cpfsgt	CAN2510DataRead@readValue,c
  2984  007896  D004               	goto	l2246
  2985  007898  6E0C               	movwf	??_CAN2510DataRead& (0+255),c
  2986  00789A  0E08               	movlw	8
  2987  00789C  6E52               	movwf	CAN2510DataRead@readValue,c
  2988  00789E  500C               	movf	??_CAN2510DataRead& (0+255),w,c
  2989  0078A0                     l2246:
  2990  0078A0  C008  FFD9         	movff	CAN2510DataRead@numBytes,fsr2l
  2991  0078A4  C009  FFDA         	movff	CAN2510DataRead@numBytes+1,fsr2h
  2992  0078A8  C052  FFDF         	movff	CAN2510DataRead@readValue,indf2
  2993  0078AC  5051               	movf	CAN2510DataRead@bufferAddr,w,c
  2994  0078AE  0F02               	addlw	2
  2995  0078B0  ECAC  F037         	call	_CAN2510ByteRead
  2996  0078B4  6E13               	movwf	CAN2510DataRead@tempSIDL,c
  2997  0078B6  A613               	btfss	CAN2510DataRead@tempSIDL,3,c
  2998  0078B8  D0B8               	goto	l2290
  2999  0078BA  2851               	incf	CAN2510DataRead@bufferAddr,w,c
  3000  0078BC  ECAC  F037         	call	_CAN2510ByteRead
  3001  0078C0  6E52               	movwf	CAN2510DataRead@readValue,c
  3002  0078C2  C052  F00C         	movff	CAN2510DataRead@readValue,??_CAN2510DataRead
  3003  0078C6  6A0D               	clrf	(??_CAN2510DataRead+1)& (0+255),c
  3004  0078C8  6A0E               	clrf	(??_CAN2510DataRead+2)& (0+255),c
  3005  0078CA  6A0F               	clrf	(??_CAN2510DataRead+3)& (0+255),c
  3006  0078CC  C006  FFD9         	movff	CAN2510DataRead@msgId,fsr2l
  3007  0078D0  C007  FFDA         	movff	CAN2510DataRead@msgId+1,fsr2h
  3008  0078D4  C00C  FFDE         	movff	??_CAN2510DataRead,postinc2
  3009  0078D8  C00D  FFDE         	movff	??_CAN2510DataRead+1,postinc2
  3010  0078DC  C00E  FFDE         	movff	??_CAN2510DataRead+2,postinc2
  3011  0078E0  C00F  FFDD         	movff	??_CAN2510DataRead+3,postdec2
  3012  0078E4  06D9               	decf	fsr2l,f,c
  3013  0078E6  06D9               	decf	fsr2l,f,c
  3014  0078E8  C006  FFD9         	movff	CAN2510DataRead@msgId,fsr2l
  3015  0078EC  C007  FFDA         	movff	CAN2510DataRead@msgId+1,fsr2h
  3016  0078F0  0E03               	movlw	3
  3017  0078F2                     u1615:
  3018  0078F2  90D8               	bcf	status,0,c
  3019  0078F4  36DE               	rlcf	postinc2,f,c
  3020  0078F6  36DE               	rlcf	postinc2,f,c
  3021  0078F8  36DE               	rlcf	postinc2,f,c
  3022  0078FA  36DD               	rlcf	postdec2,f,c
  3023  0078FC  06D9               	decf	fsr2l,f,c
  3024  0078FE  06D9               	decf	fsr2l,f,c
  3025  007900  2EE8               	decfsz	wreg,f,c
  3026  007902  D7F7               	goto	u1615
  3027  007904  C013  F00C         	movff	CAN2510DataRead@tempSIDL,??_CAN2510DataRead
  3028  007908  0E05               	movlw	5
  3029  00790A  6E0D               	movwf	(??_CAN2510DataRead+1)& (0+255),c
  3030  00790C                     u1625:
  3031  00790C  90D8               	bcf	status,0,c
  3032  00790E  320C               	rrcf	??_CAN2510DataRead,f,c
  3033  007910  2E0D               	decfsz	(??_CAN2510DataRead+1)& (0+255),f,c
  3034  007912  D7FC               	goto	u1625
  3035  007914  0E07               	movlw	7
  3036  007916  160C               	andwf	??_CAN2510DataRead,f,c
  3037  007918  500C               	movf	??_CAN2510DataRead,w,c
  3038  00791A  C006  FFD9         	movff	CAN2510DataRead@msgId,fsr2l
  3039  00791E  C007  FFDA         	movff	CAN2510DataRead@msgId+1,fsr2h
  3040  007922  12DE               	iorwf	postinc2,f,c
  3041  007924  0E00               	movlw	0
  3042  007926  12DE               	iorwf	postinc2,f,c
  3043  007928  12DE               	iorwf	postinc2,f,c
  3044  00792A  12DD               	iorwf	postdec2,f,c
  3045  00792C  52DD               	movf	postdec2,f,c
  3046  00792E  52DD               	movf	postdec2,f,c
  3047  007930  C006  FFD9         	movff	CAN2510DataRead@msgId,fsr2l
  3048  007934  C007  FFDA         	movff	CAN2510DataRead@msgId+1,fsr2h
  3049  007938  0E02               	movlw	2
  3050  00793A                     u1635:
  3051  00793A  90D8               	bcf	status,0,c
  3052  00793C  36DE               	rlcf	postinc2,f,c
  3053  00793E  36DE               	rlcf	postinc2,f,c
  3054  007940  36DE               	rlcf	postinc2,f,c
  3055  007942  36DD               	rlcf	postdec2,f,c
  3056  007944  06D9               	decf	fsr2l,f,c
  3057  007946  06D9               	decf	fsr2l,f,c
  3058  007948  2EE8               	decfsz	wreg,f,c
  3059  00794A  D7F7               	goto	u1635
  3060  00794C  C013  F00C         	movff	CAN2510DataRead@tempSIDL,??_CAN2510DataRead
  3061  007950  0E03               	movlw	3
  3062  007952  160C               	andwf	??_CAN2510DataRead,f,c
  3063  007954  500C               	movf	??_CAN2510DataRead,w,c
  3064  007956  C006  FFD9         	movff	CAN2510DataRead@msgId,fsr2l
  3065  00795A  C007  FFDA         	movff	CAN2510DataRead@msgId+1,fsr2h
  3066  00795E  12DE               	iorwf	postinc2,f,c
  3067  007960  0E00               	movlw	0
  3068  007962  12DE               	iorwf	postinc2,f,c
  3069  007964  12DE               	iorwf	postinc2,f,c
  3070  007966  12DD               	iorwf	postdec2,f,c
  3071  007968  52DD               	movf	postdec2,f,c
  3072  00796A  52DD               	movf	postdec2,f,c
  3073  00796C  C006  FFD9         	movff	CAN2510DataRead@msgId,fsr2l
  3074  007970  C007  FFDA         	movff	CAN2510DataRead@msgId+1,fsr2h
  3075  007974  0E08               	movlw	8
  3076  007976                     u1645:
  3077  007976  90D8               	bcf	status,0,c
  3078  007978  36DE               	rlcf	postinc2,f,c
  3079  00797A  36DE               	rlcf	postinc2,f,c
  3080  00797C  36DE               	rlcf	postinc2,f,c
  3081  00797E  36DD               	rlcf	postdec2,f,c
  3082  007980  06D9               	decf	fsr2l,f,c
  3083  007982  06D9               	decf	fsr2l,f,c
  3084  007984  2EE8               	decfsz	wreg,f,c
  3085  007986  D7F7               	goto	u1645
  3086  007988  5051               	movf	CAN2510DataRead@bufferAddr,w,c
  3087  00798A  0F03               	addlw	3
  3088  00798C  ECAC  F037         	call	_CAN2510ByteRead
  3089  007990  6E52               	movwf	CAN2510DataRead@readValue,c
  3090  007992  5052               	movf	CAN2510DataRead@readValue,w,c
  3091  007994  C006  FFD9         	movff	CAN2510DataRead@msgId,fsr2l
  3092  007998  C007  FFDA         	movff	CAN2510DataRead@msgId+1,fsr2h
  3093  00799C  12DE               	iorwf	postinc2,f,c
  3094  00799E  0E00               	movlw	0
  3095  0079A0  12DE               	iorwf	postinc2,f,c
  3096  0079A2  12DE               	iorwf	postinc2,f,c
  3097  0079A4  12DD               	iorwf	postdec2,f,c
  3098  0079A6  52DD               	movf	postdec2,f,c
  3099  0079A8  52DD               	movf	postdec2,f,c
  3100  0079AA  C006  FFD9         	movff	CAN2510DataRead@msgId,fsr2l
  3101  0079AE  C007  FFDA         	movff	CAN2510DataRead@msgId+1,fsr2h
  3102  0079B2  0E08               	movlw	8
  3103  0079B4                     u1655:
  3104  0079B4  90D8               	bcf	status,0,c
  3105  0079B6  36DE               	rlcf	postinc2,f,c
  3106  0079B8  36DE               	rlcf	postinc2,f,c
  3107  0079BA  36DE               	rlcf	postinc2,f,c
  3108  0079BC  36DD               	rlcf	postdec2,f,c
  3109  0079BE  06D9               	decf	fsr2l,f,c
  3110  0079C0  06D9               	decf	fsr2l,f,c
  3111  0079C2  2EE8               	decfsz	wreg,f,c
  3112  0079C4  D7F7               	goto	u1655
  3113  0079C6  5051               	movf	CAN2510DataRead@bufferAddr,w,c
  3114  0079C8  0F04               	addlw	4
  3115  0079CA  ECAC  F037         	call	_CAN2510ByteRead
  3116  0079CE  6E52               	movwf	CAN2510DataRead@readValue,c
  3117  0079D0  5052               	movf	CAN2510DataRead@readValue,w,c
  3118  0079D2  C006  FFD9         	movff	CAN2510DataRead@msgId,fsr2l
  3119  0079D6  C007  FFDA         	movff	CAN2510DataRead@msgId+1,fsr2h
  3120  0079DA  12DE               	iorwf	postinc2,f,c
  3121  0079DC  0E00               	movlw	0
  3122  0079DE  12DE               	iorwf	postinc2,f,c
  3123  0079E0  12DE               	iorwf	postinc2,f,c
  3124  0079E2  12DD               	iorwf	postdec2,f,c
  3125  0079E4  52DD               	movf	postdec2,f,c
  3126  0079E6  52DD               	movf	postdec2,f,c
  3127  0079E8  AC50               	btfss	CAN2510DataRead@DLCRegister,6,c
  3128  0079EA  D01C               	goto	l2288
  3129  0079EC  5012               	movf	CAN2510DataRead@bufferNum,w,c
  3130  0079EE  B4D8               	btfsc	status,2,c
  3131  0079F0  D00C               	goto	l2282
  3132  0079F2  6E0C               	movwf	??_CAN2510DataRead& (0+255),c
  3133  0079F4  0E02               	movlw	2
  3134  0079F6  6E03               	movwf	CAN2510BitModify@mask,c
  3135  0079F8  500C               	movf	??_CAN2510DataRead& (0+255),w,c
  3136  0079FA  6E0D               	movwf	(??_CAN2510DataRead+1)& (0+255),c
  3137  0079FC  0E00               	movlw	0
  3138  0079FE  6E04               	movwf	CAN2510BitModify@value,c
  3139  007A00  500D               	movf	(??_CAN2510DataRead+1)& (0+255),w,c
  3140  007A02  0E2C               	movlw	44
  3141  007A04  ECF6  F037         	call	_CAN2510BitModify
  3142  007A08  D00B               	goto	l2284
  3143  007A0A                     l2282:
  3144  007A0A  6E0C               	movwf	??_CAN2510DataRead& (0+255),c
  3145  007A0C  0E01               	movlw	1
  3146  007A0E  6E03               	movwf	CAN2510BitModify@mask,c
  3147  007A10  500C               	movf	??_CAN2510DataRead& (0+255),w,c
  3148  007A12  6E0D               	movwf	(??_CAN2510DataRead+1)& (0+255),c
  3149  007A14  0E00               	movlw	0
  3150  007A16  6E04               	movwf	CAN2510BitModify@value,c
  3151  007A18  500D               	movf	(??_CAN2510DataRead+1)& (0+255),w,c
  3152  007A1A  0E2C               	movlw	44
  3153  007A1C  ECF6  F037         	call	_CAN2510BitModify
  3154  007A20                     l2284:
  3155  007A20  0E01               	movlw	1
  3156  007A22  D091               	goto	l339
  3157  007A24                     l2288:
  3158  007A24  6E0C               	movwf	??_CAN2510DataRead& (0+255),c
  3159  007A26  0E03               	movlw	3
  3160  007A28  D059               	goto	L11
  3161  007A2A                     l2290:
  3162  007A2A  2851               	incf	CAN2510DataRead@bufferAddr,w,c
  3163  007A2C  ECAC  F037         	call	_CAN2510ByteRead
  3164  007A30  6E0C               	movwf	??_CAN2510DataRead& (0+255),c
  3165  007A32  C00C  F00D         	movff	??_CAN2510DataRead,??_CAN2510DataRead+1
  3166  007A36  6A0E               	clrf	(??_CAN2510DataRead+2)& (0+255),c
  3167  007A38  6A0F               	clrf	(??_CAN2510DataRead+3)& (0+255),c
  3168  007A3A  6A10               	clrf	(??_CAN2510DataRead+4)& (0+255),c
  3169  007A3C  C006  FFD9         	movff	CAN2510DataRead@msgId,fsr2l
  3170  007A40  C007  FFDA         	movff	CAN2510DataRead@msgId+1,fsr2h
  3171  007A44  C00D  FFDE         	movff	??_CAN2510DataRead+1,postinc2
  3172  007A48  C00E  FFDE         	movff	??_CAN2510DataRead+2,postinc2
  3173  007A4C  C00F  FFDE         	movff	??_CAN2510DataRead+3,postinc2
  3174  007A50  C010  FFDD         	movff	??_CAN2510DataRead+4,postdec2
  3175  007A54  06D9               	decf	fsr2l,f,c
  3176  007A56  06D9               	decf	fsr2l,f,c
  3177  007A58  C006  FFD9         	movff	CAN2510DataRead@msgId,fsr2l
  3178  007A5C  C007  FFDA         	movff	CAN2510DataRead@msgId+1,fsr2h
  3179  007A60  0E03               	movlw	3
  3180  007A62                     u1685:
  3181  007A62  90D8               	bcf	status,0,c
  3182  007A64  36DE               	rlcf	postinc2,f,c
  3183  007A66  36DE               	rlcf	postinc2,f,c
  3184  007A68  36DE               	rlcf	postinc2,f,c
  3185  007A6A  36DD               	rlcf	postdec2,f,c
  3186  007A6C  06D9               	decf	fsr2l,f,c
  3187  007A6E  06D9               	decf	fsr2l,f,c
  3188  007A70  2EE8               	decfsz	wreg,f,c
  3189  007A72  D7F7               	goto	u1685
  3190  007A74  C013  F00C         	movff	CAN2510DataRead@tempSIDL,??_CAN2510DataRead
  3191  007A78  0E05               	movlw	5
  3192  007A7A  6E0D               	movwf	(??_CAN2510DataRead+1)& (0+255),c
  3193  007A7C                     u1695:
  3194  007A7C  90D8               	bcf	status,0,c
  3195  007A7E  320C               	rrcf	??_CAN2510DataRead,f,c
  3196  007A80  2E0D               	decfsz	(??_CAN2510DataRead+1)& (0+255),f,c
  3197  007A82  D7FC               	goto	u1695
  3198  007A84  500C               	movf	??_CAN2510DataRead,w,c
  3199  007A86  C006  FFD9         	movff	CAN2510DataRead@msgId,fsr2l
  3200  007A8A  C007  FFDA         	movff	CAN2510DataRead@msgId+1,fsr2h
  3201  007A8E  12DE               	iorwf	postinc2,f,c
  3202  007A90  0E00               	movlw	0
  3203  007A92  12DE               	iorwf	postinc2,f,c
  3204  007A94  12DE               	iorwf	postinc2,f,c
  3205  007A96  12DD               	iorwf	postdec2,f,c
  3206  007A98  52DD               	movf	postdec2,f,c
  3207  007A9A  52DD               	movf	postdec2,f,c
  3208  007A9C  A813               	btfss	CAN2510DataRead@tempSIDL,4,c
  3209  007A9E  D01C               	goto	l2308
  3210  007AA0  5012               	movf	CAN2510DataRead@bufferNum,w,c
  3211  007AA2  B4D8               	btfsc	status,2,c
  3212  007AA4  D00C               	goto	l2302
  3213  007AA6  6E0C               	movwf	??_CAN2510DataRead& (0+255),c
  3214  007AA8  0E02               	movlw	2
  3215  007AAA  6E03               	movwf	CAN2510BitModify@mask,c
  3216  007AAC  500C               	movf	??_CAN2510DataRead& (0+255),w,c
  3217  007AAE  6E0D               	movwf	(??_CAN2510DataRead+1)& (0+255),c
  3218  007AB0  0E00               	movlw	0
  3219  007AB2  6E04               	movwf	CAN2510BitModify@value,c
  3220  007AB4  500D               	movf	(??_CAN2510DataRead+1)& (0+255),w,c
  3221  007AB6  0E2C               	movlw	44
  3222  007AB8  ECF6  F037         	call	_CAN2510BitModify
  3223  007ABC  D00B               	goto	l2304
  3224  007ABE                     l2302:
  3225  007ABE  6E0C               	movwf	??_CAN2510DataRead& (0+255),c
  3226  007AC0  0E01               	movlw	1
  3227  007AC2  6E03               	movwf	CAN2510BitModify@mask,c
  3228  007AC4  500C               	movf	??_CAN2510DataRead& (0+255),w,c
  3229  007AC6  6E0D               	movwf	(??_CAN2510DataRead+1)& (0+255),c
  3230  007AC8  0E00               	movlw	0
  3231  007ACA  6E04               	movwf	CAN2510BitModify@value,c
  3232  007ACC  500D               	movf	(??_CAN2510DataRead+1)& (0+255),w,c
  3233  007ACE  0E2C               	movlw	44
  3234  007AD0  ECF6  F037         	call	_CAN2510BitModify
  3235  007AD4                     l2304:
  3236  007AD4  0E02               	movlw	2
  3237  007AD6  D037               	goto	l339
  3238  007AD8                     l2308:
  3239  007AD8  6E0C               	movwf	??_CAN2510DataRead& (0+255),c
  3240  007ADA  0E04               	movlw	4
  3241  007ADC                     L11:
  3242  007ADC  6E11               	movwf	CAN2510DataRead@result,c
  3243  007ADE  500C               	movf	??_CAN2510DataRead& (0+255),w,c
  3244  007AE0  0E06               	movlw	6
  3245  007AE2  2651               	addwf	CAN2510DataRead@bufferAddr,f,c
  3246  007AE4  C008  FFD9         	movff	CAN2510DataRead@numBytes,fsr2l
  3247  007AE8  C009  FFDA         	movff	CAN2510DataRead@numBytes+1,fsr2h
  3248  007AEC  50DF               	movf	indf2,w,c
  3249  007AEE  6E52               	movwf	CAN2510DataRead@readValue,c
  3250  007AF0  D00B               	goto	l2320
  3251  007AF2                     l2314:
  3252  007AF2  5051               	movf	CAN2510DataRead@bufferAddr,w,c
  3253  007AF4  ECAC  F037         	call	_CAN2510ByteRead
  3254  007AF8  C00A  FFD9         	movff	CAN2510DataRead@data,fsr2l
  3255  007AFC  C00B  FFDA         	movff	CAN2510DataRead@data+1,fsr2h
  3256  007B00  6EDF               	movwf	indf2,c
  3257  007B02  2A51               	incf	CAN2510DataRead@bufferAddr,f,c
  3258  007B04  4A0A               	infsnz	CAN2510DataRead@data,f,c
  3259  007B06  2A0B               	incf	CAN2510DataRead@data+1,f,c
  3260  007B08                     l2320:
  3261  007B08  0652               	decf	CAN2510DataRead@readValue,f,c
  3262  007B0A  2852               	incf	CAN2510DataRead@readValue& (0+255),w,c
  3263  007B0C  A4D8               	btfss	status,2,c
  3264  007B0E  D7F1               	goto	l2314
  3265  007B10  5012               	movf	CAN2510DataRead@bufferNum,w,c
  3266  007B12  B4D8               	btfsc	status,2,c
  3267  007B14  D00C               	goto	l2326
  3268  007B16  6E0C               	movwf	??_CAN2510DataRead& (0+255),c
  3269  007B18  0E02               	movlw	2
  3270  007B1A  6E03               	movwf	CAN2510BitModify@mask,c
  3271  007B1C  500C               	movf	??_CAN2510DataRead& (0+255),w,c
  3272  007B1E  6E0D               	movwf	(??_CAN2510DataRead+1)& (0+255),c
  3273  007B20  0E00               	movlw	0
  3274  007B22  6E04               	movwf	CAN2510BitModify@value,c
  3275  007B24  500D               	movf	(??_CAN2510DataRead+1)& (0+255),w,c
  3276  007B26  0E2C               	movlw	44
  3277  007B28  ECF6  F037         	call	_CAN2510BitModify
  3278  007B2C  D00B               	goto	l2328
  3279  007B2E                     l2326:
  3280  007B2E  6E0C               	movwf	??_CAN2510DataRead& (0+255),c
  3281  007B30  0E01               	movlw	1
  3282  007B32  6E03               	movwf	CAN2510BitModify@mask,c
  3283  007B34  500C               	movf	??_CAN2510DataRead& (0+255),w,c
  3284  007B36  6E0D               	movwf	(??_CAN2510DataRead+1)& (0+255),c
  3285  007B38  0E00               	movlw	0
  3286  007B3A  6E04               	movwf	CAN2510BitModify@value,c
  3287  007B3C  500D               	movf	(??_CAN2510DataRead+1)& (0+255),w,c
  3288  007B3E  0E2C               	movlw	44
  3289  007B40  ECF6  F037         	call	_CAN2510BitModify
  3290  007B44                     l2328:
  3291  007B44  5011               	movf	CAN2510DataRead@result,w,c
  3292  007B46                     l339:
  3293  007B46  0012               	return	
  3294  007B48                     __end_of_CAN2510DataRead:
  3295                           	opt stack 0
  3296                           tblptru	equ	0xFF8
  3297                           tblptrh	equ	0xFF7
  3298                           tblptrl	equ	0xFF6
  3299                           tablat	equ	0xFF5
  3300                           prodh	equ	0xFF4
  3301                           prodl	equ	0xFF3
  3302                           postinc0	equ	0xFEE
  3303                           wreg	equ	0xFE8
  3304                           postinc1	equ	0xFE6
  3305                           postdec1	equ	0xFE5
  3306                           fsr1l	equ	0xFE1
  3307                           indf2	equ	0xFDF
  3308                           postinc2	equ	0xFDE
  3309                           postdec2	equ	0xFDD
  3310                           fsr2h	equ	0xFDA
  3311                           fsr2l	equ	0xFD9
  3312                           status	equ	0xFD8
  3313                           
  3314 ;; *************** function _CAN2510BitModify *****************
  3315 ;; Defined at:
  3316 ;;		line 16 in file "D:\Microchip\xc8\v1.31\sources\pic18\plib\CAN2510\CANbmod.c"
  3317 ;; Parameters:    Size  Location     Type
  3318 ;;  addr            1    wreg     unsigned char 
  3319 ;;  mask            1    2[COMRAM] unsigned char 
  3320 ;;  value           1    3[COMRAM] unsigned char 
  3321 ;; Auto vars:     Size  Location     Type
  3322 ;;  addr            1    4[COMRAM] unsigned char 
  3323 ;; Return value:  Size  Location     Type
  3324 ;;		None               void
  3325 ;; Registers used:
  3326 ;;		wreg, status,2, status,0, cstack
  3327 ;; Tracked objects:
  3328 ;;		On entry : 0/0
  3329 ;;		On exit  : 0/0
  3330 ;;		Unchanged: 0/0
  3331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3332 ;;      Params:         2       0       0       0       0       0       0       0       0
  3333 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3334 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3335 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3336 ;;Total ram usage:        3 bytes
  3337 ;; Hardware stack levels used:    1
  3338 ;; Hardware stack levels required when called:    1
  3339 ;; This function calls:
  3340 ;;		_CAN2510Disable
  3341 ;;		_CAN2510Enable
  3342 ;;		_WriteSPI
  3343 ;; This function is called by:
  3344 ;;		_CAN2510SetMode
  3345 ;;		_CAN2510DataRead
  3346 ;; This function uses a non-reentrant model
  3347 ;;
  3348                           
  3349                           	psect	text16
  3350  006FEC                     __ptext16:
  3351                           	opt stack 0
  3352  006FEC                     _CAN2510BitModify:
  3353                           	opt stack 24
  3354                           
  3355                           ;incstack = 0
  3356                           ;CAN2510BitModify@addr stored from wreg
  3357  006FEC  CFE8 F005          	movff	wreg,CAN2510BitModify@addr
  3358  006FF0  EC52  F037         	call	_CAN2510Enable	;wreg free
  3359  006FF4                     l1882:
  3360  006FF4  0E05               	movlw	5
  3361  006FF6  EC9C  F037         	call	_WriteSPI
  3362  006FFA  0900               	iorlw	0
  3363  006FFC  A4D8               	btfss	status,2,c
  3364  006FFE  D7FA               	goto	l1882
  3365  007000                     l1884:
  3366  007000  5005               	movf	CAN2510BitModify@addr,w,c
  3367  007002  EC9C  F037         	call	_WriteSPI
  3368  007006  0900               	iorlw	0
  3369  007008  A4D8               	btfss	status,2,c
  3370  00700A  D7FA               	goto	l1884
  3371  00700C                     l1886:
  3372  00700C  5003               	movf	CAN2510BitModify@mask,w,c
  3373  00700E  EC9C  F037         	call	_WriteSPI
  3374  007012  0900               	iorlw	0
  3375  007014  A4D8               	btfss	status,2,c
  3376  007016  D7FA               	goto	l1886
  3377  007018                     l1888:
  3378  007018  5004               	movf	CAN2510BitModify@value,w,c
  3379  00701A  EC9C  F037         	call	_WriteSPI
  3380  00701E  0900               	iorlw	0
  3381  007020  A4D8               	btfss	status,2,c
  3382  007022  D7FA               	goto	l1888
  3383  007024  EC4F  F037         	call	_CAN2510Disable	;wreg free
  3384  007028  0012               	return	
  3385  00702A                     __end_of_CAN2510BitModify:
  3386                           	opt stack 0
  3387                           tblptru	equ	0xFF8
  3388                           tblptrh	equ	0xFF7
  3389                           tblptrl	equ	0xFF6
  3390                           tablat	equ	0xFF5
  3391                           prodh	equ	0xFF4
  3392                           prodl	equ	0xFF3
  3393                           postinc0	equ	0xFEE
  3394                           wreg	equ	0xFE8
  3395                           postinc1	equ	0xFE6
  3396                           postdec1	equ	0xFE5
  3397                           fsr1l	equ	0xFE1
  3398                           indf2	equ	0xFDF
  3399                           postinc2	equ	0xFDE
  3400                           postdec2	equ	0xFDD
  3401                           fsr2h	equ	0xFDA
  3402                           fsr2l	equ	0xFD9
  3403                           status	equ	0xFD8
  3404                           
  3405 ;; *************** function _can_serial_transmit_msg *****************
  3406 ;; Defined at:
  3407 ;;		line 204 in file "CAN_RX.c"
  3408 ;; Parameters:    Size  Location     Type
  3409 ;;  u               1    wreg     unsigned char 
  3410 ;; Auto vars:     Size  Location     Type
  3411 ;;  u               1  101[BANK0 ] unsigned char 
  3412 ;;  xtd_msg        19   47[BANK0 ] unsigned char [19]
  3413 ;;  std_msg        19   28[BANK0 ] unsigned char [19]
  3414 ;;  no_of_bytes_   15   66[BANK0 ] unsigned char [15]
  3415 ;;  buffer_1_msg   14   14[BANK0 ] unsigned char [14]
  3416 ;;  buffer_0_msg   14    0[BANK0 ] unsigned char [14]
  3417 ;;  data_msg       11   81[BANK0 ] unsigned char [11]
  3418 ;;  id_msg          9   92[BANK0 ] unsigned char [9]
  3419 ;;  i               1  102[BANK0 ] unsigned char 
  3420 ;; Return value:  Size  Location     Type
  3421 ;;		None               void
  3422 ;; Registers used:
  3423 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3424 ;; Tracked objects:
  3425 ;;		On entry : 0/0
  3426 ;;		On exit  : 0/0
  3427 ;;		Unchanged: 0/0
  3428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3429 ;;      Params:         0       0       0       0       0       0       0       0       0
  3430 ;;      Locals:         0     103       0       0       0       0       0       0       0
  3431 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3432 ;;      Totals:         1     103       0       0       0       0       0       0       0
  3433 ;;Total ram usage:      104 bytes
  3434 ;; Hardware stack levels used:    1
  3435 ;; Hardware stack levels required when called:    1
  3436 ;; This function calls:
  3437 ;;		_serial_transmit
  3438 ;; This function is called by:
  3439 ;;		_main
  3440 ;; This function uses a non-reentrant model
  3441 ;;
  3442                           
  3443                           	psect	text17
  3444  007B48                     __ptext17:
  3445                           	opt stack 0
  3446  007B48                     _can_serial_transmit_msg:
  3447                           	opt stack 29
  3448                           
  3449                           ;incstack = 0
  3450                           ;can_serial_transmit_msg@u stored from wreg
  3451  007B48  CFE8 F0C5          	movff	wreg,can_serial_transmit_msg@u
  3452                           
  3453                           ;CAN_RX.c: 207: unsigned char std_msg[]={"STANDARD MESSAGE/n"};
  3454  007B4C  EE21  F056         	lfsr	2,can_serial_transmit_msg@F4830
  3455  007B50  EE10  F07C         	lfsr	1,can_serial_transmit_msg@std_msg
  3456  007B54  0E13               	movlw	19
  3457  007B56                     u1741:
  3458  007B56  CFDE FFE6          	movff	postinc2,postinc1
  3459  007B5A  2EE8               	decfsz	wreg,f,c
  3460  007B5C  D7FC               	goto	u1741
  3461                           
  3462                           ;CAN_RX.c: 208: unsigned char xtd_msg[]={"EXTENDED MESSAGE/n"};
  3463  007B5E  EE21  F069         	lfsr	2,can_serial_transmit_msg@F4832
  3464  007B62  EE10  F08F         	lfsr	1,can_serial_transmit_msg@xtd_msg
  3465  007B66  0E13               	movlw	19
  3466  007B68                     u1751:
  3467  007B68  CFDE FFE6          	movff	postinc2,postinc1
  3468  007B6C  2EE8               	decfsz	wreg,f,c
  3469  007B6E  D7FC               	goto	u1751
  3470                           
  3471                           ;CAN_RX.c: 209: unsigned char buffer_0_msg[]={"BUFFER: RXB0\n"};
  3472  007B70  EE21  F08B         	lfsr	2,can_serial_transmit_msg@F4834
  3473  007B74  EE10  F060         	lfsr	1,can_serial_transmit_msg@buffer_0_msg
  3474  007B78  0E0E               	movlw	14
  3475  007B7A                     u1761:
  3476  007B7A  CFDE FFE6          	movff	postinc2,postinc1
  3477  007B7E  2EE8               	decfsz	wreg,f,c
  3478  007B80  D7FC               	goto	u1761
  3479                           
  3480                           ;CAN_RX.c: 210: unsigned char buffer_1_msg[]={"BUFFER: RXB1\n"};
  3481  007B82  EE21  F099         	lfsr	2,can_serial_transmit_msg@F4836
  3482  007B86  EE10  F06E         	lfsr	1,can_serial_transmit_msg@buffer_1_msg
  3483  007B8A  0E0E               	movlw	14
  3484  007B8C                     u1771:
  3485  007B8C  CFDE FFE6          	movff	postinc2,postinc1
  3486  007B90  2EE8               	decfsz	wreg,f,c
  3487  007B92  D7FC               	goto	u1771
  3488                           
  3489                           ;CAN_RX.c: 211: unsigned char no_of_bytes_msg[]={"NO. OF BYTES: "};
  3490  007B94  EE21  F07C         	lfsr	2,can_serial_transmit_msg@F4838
  3491  007B98  EE10  F0A2         	lfsr	1,can_serial_transmit_msg@no_of_bytes_msg
  3492  007B9C  0E0F               	movlw	15
  3493  007B9E                     u1781:
  3494  007B9E  CFDE FFE6          	movff	postinc2,postinc1
  3495  007BA2  2EE8               	decfsz	wreg,f,c
  3496  007BA4  D7FC               	goto	u1781
  3497                           
  3498                           ;CAN_RX.c: 212: unsigned char id_msg[]={"CAN ID: "};
  3499  007BA6  EE20  F0E2         	lfsr	2,can_serial_transmit_msg@F4840
  3500  007BAA  EE10  F0BC         	lfsr	1,can_serial_transmit_msg@id_msg
  3501  007BAE  0E09               	movlw	9
  3502  007BB0                     u1791:
  3503  007BB0  CFDE FFE6          	movff	postinc2,postinc1
  3504  007BB4  2EE8               	decfsz	wreg,f,c
  3505  007BB6  D7FC               	goto	u1791
  3506                           
  3507                           ;CAN_RX.c: 213: unsigned char data_msg[]={"CAN DATA: "};
  3508  007BB8  EE20  F03B         	lfsr	2,can_serial_transmit_msg@F4842
  3509  007BBC  EE10  F0B1         	lfsr	1,can_serial_transmit_msg@data_msg
  3510  007BC0  0E0B               	movlw	11
  3511  007BC2                     u1801:
  3512  007BC2  CFDE FFE6          	movff	postinc2,postinc1
  3513  007BC6  2EE8               	decfsz	wreg,f,c
  3514  007BC8  D7FC               	goto	u1801
  3515                           
  3516                           ;CAN_RX.c: 214: unsigned char i;
  3517                           ;CAN_RX.c: 215: if(u==0x00)
  3518  007BCA  0100               	movlb	0	; () banked
  3519  007BCC  0100               	movlb	0	; () banked
  3520  007BCE  67C5               	tstfsz	can_serial_transmit_msg@u& (0+255),b
  3521  007BD0  D109               	goto	l2464
  3522                           
  3523                           ; BSR set to: 0
  3524                           ;CAN_RX.c: 216: {
  3525                           ;CAN_RX.c: 218: if(msg_stat==0x04)
  3526  007BD2  0100               	movlb	0	; () banked
  3527  007BD4  0100               	movlb	0	; () banked
  3528  007BD6  51C7               	movf	_msg_stat& (0+255),w,b
  3529  007BD8  0A04               	xorlw	4
  3530  007BDA  A4D8               	btfss	status,2,c
  3531  007BDC  D01F               	goto	l2374
  3532                           
  3533                           ; BSR set to: 0
  3534                           ;CAN_RX.c: 219: {
  3535                           ;CAN_RX.c: 220: for(i=0; i<17; i++)
  3536  007BDE  6E02               	movwf	??_can_serial_transmit_msg& (0+255),c
  3537  007BE0  0E00               	movlw	0
  3538  007BE2  0100               	movlb	0	; () banked
  3539  007BE4  0100               	movlb	0	; () banked
  3540  007BE6  6FC6               	movwf	can_serial_transmit_msg@i& (0+255),b
  3541  007BE8  5002               	movf	??_can_serial_transmit_msg& (0+255),w,c
  3542  007BEA  D012               	goto	L15
  3543  007BEC                     l2368:
  3544                           
  3545                           ; BSR set to: 0
  3546                           ;CAN_RX.c: 221: {
  3547                           ;CAN_RX.c: 222: serial_transmit(std_msg[i]);
  3548  007BEC  0100               	movlb	0	; () banked
  3549  007BEE  0100               	movlb	0	; () banked
  3550  007BF0  51C6               	movf	can_serial_transmit_msg@i& (0+255),w,b
  3551  007BF2  0D01               	mullw	1
  3552  007BF4  0100               	movlb	0	; () banked
  3553  007BF6  0E7C               	movlw	low can_serial_transmit_msg@std_msg
  3554  007BF8  24F3               	addwf	prodl,w,c
  3555  007BFA  6ED9               	movwf	fsr2l,c
  3556  007BFC  0100               	movlb	0	; () banked
  3557  007BFE  0E00               	movlw	high can_serial_transmit_msg@std_msg
  3558  007C00  20F4               	addwfc	prodh,w,c
  3559  007C02  6EDA               	movwf	fsr2h,c
  3560  007C04  50DF               	movf	indf2,w,c
  3561  007C06  EC69  F037         	call	_serial_transmit
  3562  007C0A  0100               	movlb	0	; () banked
  3563  007C0C  0100               	movlb	0	; () banked
  3564  007C0E  2BC6               	incf	can_serial_transmit_msg@i& (0+255),f,b
  3565  007C10                     L15:
  3566                           
  3567                           ; BSR set to: 0
  3568  007C10  0E10               	movlw	16
  3569  007C12  0100               	movlb	0	; () banked
  3570  007C14  0100               	movlb	0	; () banked
  3571  007C16  65C6               	cpfsgt	can_serial_transmit_msg@i& (0+255),b
  3572  007C18  D7E9               	goto	l2368
  3573  007C1A  D024               	goto	l2388
  3574  007C1C                     l2374:
  3575                           
  3576                           ; BSR set to: 0
  3577                           ;CAN_RX.c: 225: else if(msg_stat==0x03)
  3578  007C1C  0100               	movlb	0	; () banked
  3579  007C1E  0100               	movlb	0	; () banked
  3580  007C20  51C7               	movf	_msg_stat& (0+255),w,b
  3581  007C22  0A03               	xorlw	3
  3582  007C24  A4D8               	btfss	status,2,c
  3583  007C26  D01E               	goto	l2388
  3584                           
  3585                           ; BSR set to: 0
  3586                           ;CAN_RX.c: 226: {
  3587                           ;CAN_RX.c: 227: for(i=0; i<17; i++)
  3588  007C28  6E02               	movwf	??_can_serial_transmit_msg& (0+255),c
  3589  007C2A  0E00               	movlw	0
  3590  007C2C  0100               	movlb	0	; () banked
  3591  007C2E  0100               	movlb	0	; () banked
  3592  007C30  6FC6               	movwf	can_serial_transmit_msg@i& (0+255),b
  3593  007C32  5002               	movf	??_can_serial_transmit_msg& (0+255),w,c
  3594  007C34  D012               	goto	L16
  3595  007C36                     l2382:
  3596                           
  3597                           ; BSR set to: 0
  3598                           ;CAN_RX.c: 228: {
  3599                           ;CAN_RX.c: 229: serial_transmit(xtd_msg[i]);
  3600  007C36  0100               	movlb	0	; () banked
  3601  007C38  0100               	movlb	0	; () banked
  3602  007C3A  51C6               	movf	can_serial_transmit_msg@i& (0+255),w,b
  3603  007C3C  0D01               	mullw	1
  3604  007C3E  0100               	movlb	0	; () banked
  3605  007C40  0E8F               	movlw	low can_serial_transmit_msg@xtd_msg
  3606  007C42  24F3               	addwf	prodl,w,c
  3607  007C44  6ED9               	movwf	fsr2l,c
  3608  007C46  0100               	movlb	0	; () banked
  3609  007C48  0E00               	movlw	high can_serial_transmit_msg@xtd_msg
  3610  007C4A  20F4               	addwfc	prodh,w,c
  3611  007C4C  6EDA               	movwf	fsr2h,c
  3612  007C4E  50DF               	movf	indf2,w,c
  3613  007C50  EC69  F037         	call	_serial_transmit
  3614  007C54  0100               	movlb	0	; () banked
  3615  007C56  0100               	movlb	0	; () banked
  3616  007C58  2BC6               	incf	can_serial_transmit_msg@i& (0+255),f,b
  3617  007C5A                     L16:
  3618                           
  3619                           ; BSR set to: 0
  3620  007C5A  0E10               	movlw	16
  3621  007C5C  0100               	movlb	0	; () banked
  3622  007C5E  0100               	movlb	0	; () banked
  3623  007C60  65C6               	cpfsgt	can_serial_transmit_msg@i& (0+255),b
  3624  007C62  D7E9               	goto	l2382
  3625  007C64                     l2388:
  3626                           
  3627                           ; BSR set to: 0
  3628                           ;CAN_RX.c: 230: }
  3629                           ;CAN_RX.c: 231: }
  3630                           ;CAN_RX.c: 233: for(i=0; i<13; i++)
  3631  007C64  6E02               	movwf	??_can_serial_transmit_msg& (0+255),c
  3632  007C66  0E00               	movlw	0
  3633  007C68  0100               	movlb	0	; () banked
  3634  007C6A  0100               	movlb	0	; () banked
  3635  007C6C  6FC6               	movwf	can_serial_transmit_msg@i& (0+255),b
  3636  007C6E  5002               	movf	??_can_serial_transmit_msg& (0+255),w,c
  3637  007C70  D012               	goto	L17
  3638  007C72                     l2394:
  3639                           
  3640                           ; BSR set to: 0
  3641                           ;CAN_RX.c: 234: {
  3642                           ;CAN_RX.c: 235: serial_transmit(buffer_0_msg[i]);
  3643  007C72  0100               	movlb	0	; () banked
  3644  007C74  0100               	movlb	0	; () banked
  3645  007C76  51C6               	movf	can_serial_transmit_msg@i& (0+255),w,b
  3646  007C78  0D01               	mullw	1
  3647  007C7A  0100               	movlb	0	; () banked
  3648  007C7C  0E60               	movlw	low can_serial_transmit_msg@buffer_0_msg
  3649  007C7E  24F3               	addwf	prodl,w,c
  3650  007C80  6ED9               	movwf	fsr2l,c
  3651  007C82  0100               	movlb	0	; () banked
  3652  007C84  0E00               	movlw	high can_serial_transmit_msg@buffer_0_msg
  3653  007C86  20F4               	addwfc	prodh,w,c
  3654  007C88  6EDA               	movwf	fsr2h,c
  3655  007C8A  50DF               	movf	indf2,w,c
  3656  007C8C  EC69  F037         	call	_serial_transmit
  3657  007C90  0100               	movlb	0	; () banked
  3658  007C92  0100               	movlb	0	; () banked
  3659  007C94  2BC6               	incf	can_serial_transmit_msg@i& (0+255),f,b
  3660  007C96                     L17:
  3661                           
  3662                           ; BSR set to: 0
  3663  007C96  0E0C               	movlw	12
  3664  007C98  0100               	movlb	0	; () banked
  3665  007C9A  0100               	movlb	0	; () banked
  3666  007C9C  65C6               	cpfsgt	can_serial_transmit_msg@i& (0+255),b
  3667  007C9E  D7E9               	goto	l2394
  3668                           
  3669                           ; BSR set to: 0
  3670                           ;CAN_RX.c: 236: }
  3671                           ;CAN_RX.c: 238: for(i=0; i<14; i++)
  3672                           
  3673                           ; BSR set to: 0
  3674  007CA0  6E02               	movwf	??_can_serial_transmit_msg& (0+255),c
  3675  007CA2  0E00               	movlw	0
  3676  007CA4  0100               	movlb	0	; () banked
  3677  007CA6  0100               	movlb	0	; () banked
  3678  007CA8  6FC6               	movwf	can_serial_transmit_msg@i& (0+255),b
  3679  007CAA  5002               	movf	??_can_serial_transmit_msg& (0+255),w,c
  3680  007CAC  D012               	goto	L18
  3681  007CAE                     l2406:
  3682                           
  3683                           ; BSR set to: 0
  3684                           ;CAN_RX.c: 239: {
  3685                           ;CAN_RX.c: 240: serial_transmit(no_of_bytes_msg[i]);
  3686  007CAE  0100               	movlb	0	; () banked
  3687  007CB0  0100               	movlb	0	; () banked
  3688  007CB2  51C6               	movf	can_serial_transmit_msg@i& (0+255),w,b
  3689  007CB4  0D01               	mullw	1
  3690  007CB6  0100               	movlb	0	; () banked
  3691  007CB8  0EA2               	movlw	low can_serial_transmit_msg@no_of_bytes_msg
  3692  007CBA  24F3               	addwf	prodl,w,c
  3693  007CBC  6ED9               	movwf	fsr2l,c
  3694  007CBE  0100               	movlb	0	; () banked
  3695  007CC0  0E00               	movlw	high can_serial_transmit_msg@no_of_bytes_msg
  3696  007CC2  20F4               	addwfc	prodh,w,c
  3697  007CC4  6EDA               	movwf	fsr2h,c
  3698  007CC6  50DF               	movf	indf2,w,c
  3699  007CC8  EC69  F037         	call	_serial_transmit
  3700  007CCC  0100               	movlb	0	; () banked
  3701  007CCE  0100               	movlb	0	; () banked
  3702  007CD0  2BC6               	incf	can_serial_transmit_msg@i& (0+255),f,b
  3703  007CD2                     L18:
  3704                           
  3705                           ; BSR set to: 0
  3706  007CD2  0E0D               	movlw	13
  3707  007CD4  0100               	movlb	0	; () banked
  3708  007CD6  0100               	movlb	0	; () banked
  3709  007CD8  65C6               	cpfsgt	can_serial_transmit_msg@i& (0+255),b
  3710  007CDA  D7E9               	goto	l2406
  3711                           
  3712                           ; BSR set to: 0
  3713                           ;CAN_RX.c: 241: }
  3714                           ;CAN_RX.c: 242: serial_transmit(num_bytes_0);
  3715                           
  3716                           ; BSR set to: 0
  3717  007CDC  0100               	movlb	0	; () banked
  3718  007CDE  0100               	movlb	0	; () banked
  3719  007CE0  51E0               	movf	_num_bytes_0& (0+255),w,b
  3720  007CE2  EC69  F037         	call	_serial_transmit
  3721                           
  3722                           ;CAN_RX.c: 243: serial_transmit('\n');
  3723  007CE6  0E0A               	movlw	10
  3724  007CE8  EC69  F037         	call	_serial_transmit
  3725                           
  3726                           ;CAN_RX.c: 245: for(i=0; i<8; i++)
  3727  007CEC  6E02               	movwf	??_can_serial_transmit_msg& (0+255),c
  3728  007CEE  0E00               	movlw	0
  3729  007CF0  0100               	movlb	0	; () banked
  3730  007CF2  0100               	movlb	0	; () banked
  3731  007CF4  6FC6               	movwf	can_serial_transmit_msg@i& (0+255),b
  3732  007CF6  5002               	movf	??_can_serial_transmit_msg& (0+255),w,c
  3733  007CF8  D012               	goto	L19
  3734  007CFA                     l2420:
  3735                           
  3736                           ; BSR set to: 0
  3737                           ;CAN_RX.c: 246: {
  3738                           ;CAN_RX.c: 247: serial_transmit(id_msg[i]);
  3739  007CFA  0100               	movlb	0	; () banked
  3740  007CFC  0100               	movlb	0	; () banked
  3741  007CFE  51C6               	movf	can_serial_transmit_msg@i& (0+255),w,b
  3742  007D00  0D01               	mullw	1
  3743  007D02  0100               	movlb	0	; () banked
  3744  007D04  0EBC               	movlw	low can_serial_transmit_msg@id_msg
  3745  007D06  24F3               	addwf	prodl,w,c
  3746  007D08  6ED9               	movwf	fsr2l,c
  3747  007D0A  0100               	movlb	0	; () banked
  3748  007D0C  0E00               	movlw	high can_serial_transmit_msg@id_msg
  3749  007D0E  20F4               	addwfc	prodh,w,c
  3750  007D10  6EDA               	movwf	fsr2h,c
  3751  007D12  50DF               	movf	indf2,w,c
  3752  007D14  EC69  F037         	call	_serial_transmit
  3753  007D18  0100               	movlb	0	; () banked
  3754  007D1A  0100               	movlb	0	; () banked
  3755  007D1C  2BC6               	incf	can_serial_transmit_msg@i& (0+255),f,b
  3756  007D1E                     L19:
  3757                           
  3758                           ; BSR set to: 0
  3759  007D1E  0E07               	movlw	7
  3760  007D20  0100               	movlb	0	; () banked
  3761  007D22  0100               	movlb	0	; () banked
  3762  007D24  65C6               	cpfsgt	can_serial_transmit_msg@i& (0+255),b
  3763  007D26  D7E9               	goto	l2420
  3764                           
  3765                           ; BSR set to: 0
  3766                           ;CAN_RX.c: 248: }
  3767                           ;CAN_RX.c: 249: for(i=0; i<3; i++)
  3768                           
  3769                           ; BSR set to: 0
  3770  007D28  6E02               	movwf	??_can_serial_transmit_msg& (0+255),c
  3771  007D2A  0E00               	movlw	0
  3772  007D2C  0100               	movlb	0	; () banked
  3773  007D2E  0100               	movlb	0	; () banked
  3774  007D30  6FC6               	movwf	can_serial_transmit_msg@i& (0+255),b
  3775  007D32  5002               	movf	??_can_serial_transmit_msg& (0+255),w,c
  3776  007D34  D012               	goto	L20
  3777  007D36                     l2432:
  3778                           
  3779                           ; BSR set to: 0
  3780                           ;CAN_RX.c: 250: {
  3781                           ;CAN_RX.c: 251: serial_transmit(can_msg_ID_0.msg_ID_UART_compatible[i]);
  3782  007D36  0100               	movlb	0	; () banked
  3783  007D38  0100               	movlb	0	; () banked
  3784  007D3A  51C6               	movf	can_serial_transmit_msg@i& (0+255),w,b
  3785  007D3C  0D01               	mullw	1
  3786  007D3E  0100               	movlb	0	; () banked
  3787  007D40  0ED8               	movlw	low _can_msg_ID_0
  3788  007D42  24F3               	addwf	prodl,w,c
  3789  007D44  6ED9               	movwf	fsr2l,c
  3790  007D46  0100               	movlb	0	; () banked
  3791  007D48  0E00               	movlw	high _can_msg_ID_0
  3792  007D4A  20F4               	addwfc	prodh,w,c
  3793  007D4C  6EDA               	movwf	fsr2h,c
  3794  007D4E  50DF               	movf	indf2,w,c
  3795  007D50  EC69  F037         	call	_serial_transmit
  3796  007D54  0100               	movlb	0	; () banked
  3797  007D56  0100               	movlb	0	; () banked
  3798  007D58  2BC6               	incf	can_serial_transmit_msg@i& (0+255),f,b
  3799  007D5A                     L20:
  3800                           
  3801                           ; BSR set to: 0
  3802  007D5A  0E02               	movlw	2
  3803  007D5C  0100               	movlb	0	; () banked
  3804  007D5E  0100               	movlb	0	; () banked
  3805  007D60  65C6               	cpfsgt	can_serial_transmit_msg@i& (0+255),b
  3806  007D62  D7E9               	goto	l2432
  3807                           
  3808                           ; BSR set to: 0
  3809                           ;CAN_RX.c: 252: }
  3810                           ;CAN_RX.c: 253: serial_transmit('\n');
  3811                           
  3812                           ; BSR set to: 0
  3813  007D64  0E0A               	movlw	10
  3814  007D66  EC69  F037         	call	_serial_transmit
  3815                           
  3816                           ;CAN_RX.c: 255: for(i=0; i<10; i++)
  3817  007D6A  6E02               	movwf	??_can_serial_transmit_msg& (0+255),c
  3818  007D6C  0E00               	movlw	0
  3819  007D6E  0100               	movlb	0	; () banked
  3820  007D70  0100               	movlb	0	; () banked
  3821  007D72  6FC6               	movwf	can_serial_transmit_msg@i& (0+255),b
  3822  007D74  5002               	movf	??_can_serial_transmit_msg& (0+255),w,c
  3823  007D76  D012               	goto	L21
  3824  007D78                     l2446:
  3825                           
  3826                           ; BSR set to: 0
  3827                           ;CAN_RX.c: 256: {
  3828                           ;CAN_RX.c: 257: serial_transmit(data_msg[i]);
  3829  007D78  0100               	movlb	0	; () banked
  3830  007D7A  0100               	movlb	0	; () banked
  3831  007D7C  51C6               	movf	can_serial_transmit_msg@i& (0+255),w,b
  3832  007D7E  0D01               	mullw	1
  3833  007D80  0100               	movlb	0	; () banked
  3834  007D82  0EB1               	movlw	low can_serial_transmit_msg@data_msg
  3835  007D84  24F3               	addwf	prodl,w,c
  3836  007D86  6ED9               	movwf	fsr2l,c
  3837  007D88  0100               	movlb	0	; () banked
  3838  007D8A  0E00               	movlw	high can_serial_transmit_msg@data_msg
  3839  007D8C  20F4               	addwfc	prodh,w,c
  3840  007D8E  6EDA               	movwf	fsr2h,c
  3841  007D90  50DF               	movf	indf2,w,c
  3842  007D92  EC69  F037         	call	_serial_transmit
  3843  007D96  0100               	movlb	0	; () banked
  3844  007D98  0100               	movlb	0	; () banked
  3845  007D9A  2BC6               	incf	can_serial_transmit_msg@i& (0+255),f,b
  3846  007D9C                     L21:
  3847                           
  3848                           ; BSR set to: 0
  3849  007D9C  0E09               	movlw	9
  3850  007D9E  0100               	movlb	0	; () banked
  3851  007DA0  0100               	movlb	0	; () banked
  3852  007DA2  65C6               	cpfsgt	can_serial_transmit_msg@i& (0+255),b
  3853  007DA4  D7E9               	goto	l2446
  3854                           
  3855                           ; BSR set to: 0
  3856                           ;CAN_RX.c: 258: }
  3857                           ;CAN_RX.c: 259: for(i=0; i<8; i++)
  3858                           
  3859                           ; BSR set to: 0
  3860  007DA6  6E02               	movwf	??_can_serial_transmit_msg& (0+255),c
  3861  007DA8  0E00               	movlw	0
  3862  007DAA  0100               	movlb	0	; () banked
  3863  007DAC  0100               	movlb	0	; () banked
  3864  007DAE  6FC6               	movwf	can_serial_transmit_msg@i& (0+255),b
  3865  007DB0  5002               	movf	??_can_serial_transmit_msg& (0+255),w,c
  3866  007DB2  D012               	goto	L22
  3867  007DB4                     l2458:
  3868                           
  3869                           ; BSR set to: 0
  3870                           ;CAN_RX.c: 260: {
  3871                           ;CAN_RX.c: 261: serial_transmit(rx_data_0[i]);
  3872  007DB4  0100               	movlb	0	; () banked
  3873  007DB6  0100               	movlb	0	; () banked
  3874  007DB8  51C6               	movf	can_serial_transmit_msg@i& (0+255),w,b
  3875  007DBA  0D01               	mullw	1
  3876  007DBC  0100               	movlb	0	; () banked
  3877  007DBE  0EC8               	movlw	low _rx_data_0
  3878  007DC0  24F3               	addwf	prodl,w,c
  3879  007DC2  6ED9               	movwf	fsr2l,c
  3880  007DC4  0100               	movlb	0	; () banked
  3881  007DC6  0E00               	movlw	high _rx_data_0
  3882  007DC8  20F4               	addwfc	prodh,w,c
  3883  007DCA  6EDA               	movwf	fsr2h,c
  3884  007DCC  50DF               	movf	indf2,w,c
  3885  007DCE  EC69  F037         	call	_serial_transmit
  3886  007DD2  0100               	movlb	0	; () banked
  3887  007DD4  0100               	movlb	0	; () banked
  3888  007DD6  2BC6               	incf	can_serial_transmit_msg@i& (0+255),f,b
  3889  007DD8                     L22:
  3890                           
  3891                           ; BSR set to: 0
  3892  007DD8  0E07               	movlw	7
  3893  007DDA  0100               	movlb	0	; () banked
  3894  007DDC  0100               	movlb	0	; () banked
  3895  007DDE  65C6               	cpfsgt	can_serial_transmit_msg@i& (0+255),b
  3896  007DE0  D7E9               	goto	l2458
  3897  007DE2  D10D               	goto	l176
  3898  007DE4                     l2464:
  3899                           
  3900                           ; BSR set to: 0
  3901                           ;CAN_RX.c: 264: else if(u==0x01)
  3902  007DE4  0100               	movlb	0	; () banked
  3903  007DE6  0100               	movlb	0	; () banked
  3904  007DE8  05C5               	decf	can_serial_transmit_msg@u& (0+255),w,b
  3905  007DEA  A4D8               	btfss	status,2,c
  3906  007DEC  D108               	goto	l176
  3907                           
  3908                           ; BSR set to: 0
  3909                           ;CAN_RX.c: 265: {
  3910                           ;CAN_RX.c: 267: if(msg_stat==0x04)
  3911  007DEE  0100               	movlb	0	; () banked
  3912  007DF0  0100               	movlb	0	; () banked
  3913  007DF2  51C7               	movf	_msg_stat& (0+255),w,b
  3914  007DF4  0A04               	xorlw	4
  3915  007DF6  A4D8               	btfss	status,2,c
  3916  007DF8  D01F               	goto	l2480
  3917                           
  3918                           ; BSR set to: 0
  3919                           ;CAN_RX.c: 268: {
  3920                           ;CAN_RX.c: 269: for(i=0; i<17; i++)
  3921  007DFA  6E02               	movwf	??_can_serial_transmit_msg& (0+255),c
  3922  007DFC  0E00               	movlw	0
  3923  007DFE  0100               	movlb	0	; () banked
  3924  007E00  0100               	movlb	0	; () banked
  3925  007E02  6FC6               	movwf	can_serial_transmit_msg@i& (0+255),b
  3926  007E04  5002               	movf	??_can_serial_transmit_msg& (0+255),w,c
  3927  007E06  D012               	goto	L23
  3928  007E08                     l2474:
  3929                           
  3930                           ; BSR set to: 0
  3931                           ;CAN_RX.c: 270: {
  3932                           ;CAN_RX.c: 271: serial_transmit(std_msg[i]);
  3933  007E08  0100               	movlb	0	; () banked
  3934  007E0A  0100               	movlb	0	; () banked
  3935  007E0C  51C6               	movf	can_serial_transmit_msg@i& (0+255),w,b
  3936  007E0E  0D01               	mullw	1
  3937  007E10  0100               	movlb	0	; () banked
  3938  007E12  0E7C               	movlw	low can_serial_transmit_msg@std_msg
  3939  007E14  24F3               	addwf	prodl,w,c
  3940  007E16  6ED9               	movwf	fsr2l,c
  3941  007E18  0100               	movlb	0	; () banked
  3942  007E1A  0E00               	movlw	high can_serial_transmit_msg@std_msg
  3943  007E1C  20F4               	addwfc	prodh,w,c
  3944  007E1E  6EDA               	movwf	fsr2h,c
  3945  007E20  50DF               	movf	indf2,w,c
  3946  007E22  EC69  F037         	call	_serial_transmit
  3947  007E26  0100               	movlb	0	; () banked
  3948  007E28  0100               	movlb	0	; () banked
  3949  007E2A  2BC6               	incf	can_serial_transmit_msg@i& (0+255),f,b
  3950  007E2C                     L23:
  3951                           
  3952                           ; BSR set to: 0
  3953  007E2C  0E10               	movlw	16
  3954  007E2E  0100               	movlb	0	; () banked
  3955  007E30  0100               	movlb	0	; () banked
  3956  007E32  65C6               	cpfsgt	can_serial_transmit_msg@i& (0+255),b
  3957  007E34  D7E9               	goto	l2474
  3958  007E36  D024               	goto	l2494
  3959  007E38                     l2480:
  3960                           
  3961                           ; BSR set to: 0
  3962                           ;CAN_RX.c: 274: else if(msg_stat==0x03)
  3963  007E38  0100               	movlb	0	; () banked
  3964  007E3A  0100               	movlb	0	; () banked
  3965  007E3C  51C7               	movf	_msg_stat& (0+255),w,b
  3966  007E3E  0A03               	xorlw	3
  3967  007E40  A4D8               	btfss	status,2,c
  3968  007E42  D01E               	goto	l2494
  3969                           
  3970                           ; BSR set to: 0
  3971                           ;CAN_RX.c: 275: {
  3972                           ;CAN_RX.c: 276: for(i=0; i<17; i++)
  3973  007E44  6E02               	movwf	??_can_serial_transmit_msg& (0+255),c
  3974  007E46  0E00               	movlw	0
  3975  007E48  0100               	movlb	0	; () banked
  3976  007E4A  0100               	movlb	0	; () banked
  3977  007E4C  6FC6               	movwf	can_serial_transmit_msg@i& (0+255),b
  3978  007E4E  5002               	movf	??_can_serial_transmit_msg& (0+255),w,c
  3979  007E50  D012               	goto	L24
  3980  007E52                     l2488:
  3981                           
  3982                           ; BSR set to: 0
  3983                           ;CAN_RX.c: 277: {
  3984                           ;CAN_RX.c: 278: serial_transmit(xtd_msg[i]);
  3985  007E52  0100               	movlb	0	; () banked
  3986  007E54  0100               	movlb	0	; () banked
  3987  007E56  51C6               	movf	can_serial_transmit_msg@i& (0+255),w,b
  3988  007E58  0D01               	mullw	1
  3989  007E5A  0100               	movlb	0	; () banked
  3990  007E5C  0E8F               	movlw	low can_serial_transmit_msg@xtd_msg
  3991  007E5E  24F3               	addwf	prodl,w,c
  3992  007E60  6ED9               	movwf	fsr2l,c
  3993  007E62  0100               	movlb	0	; () banked
  3994  007E64  0E00               	movlw	high can_serial_transmit_msg@xtd_msg
  3995  007E66  20F4               	addwfc	prodh,w,c
  3996  007E68  6EDA               	movwf	fsr2h,c
  3997  007E6A  50DF               	movf	indf2,w,c
  3998  007E6C  EC69  F037         	call	_serial_transmit
  3999  007E70  0100               	movlb	0	; () banked
  4000  007E72  0100               	movlb	0	; () banked
  4001  007E74  2BC6               	incf	can_serial_transmit_msg@i& (0+255),f,b
  4002  007E76                     L24:
  4003                           
  4004                           ; BSR set to: 0
  4005  007E76  0E10               	movlw	16
  4006  007E78  0100               	movlb	0	; () banked
  4007  007E7A  0100               	movlb	0	; () banked
  4008  007E7C  65C6               	cpfsgt	can_serial_transmit_msg@i& (0+255),b
  4009  007E7E  D7E9               	goto	l2488
  4010  007E80                     l2494:
  4011                           
  4012                           ; BSR set to: 0
  4013                           ;CAN_RX.c: 279: }
  4014                           ;CAN_RX.c: 280: }
  4015                           ;CAN_RX.c: 282: for(i=0; i<13; i++)
  4016  007E80  6E02               	movwf	??_can_serial_transmit_msg& (0+255),c
  4017  007E82  0E00               	movlw	0
  4018  007E84  0100               	movlb	0	; () banked
  4019  007E86  0100               	movlb	0	; () banked
  4020  007E88  6FC6               	movwf	can_serial_transmit_msg@i& (0+255),b
  4021  007E8A  5002               	movf	??_can_serial_transmit_msg& (0+255),w,c
  4022  007E8C  D012               	goto	L25
  4023  007E8E                     l2500:
  4024                           
  4025                           ; BSR set to: 0
  4026                           ;CAN_RX.c: 283: {
  4027                           ;CAN_RX.c: 284: serial_transmit(buffer_1_msg[i]);
  4028  007E8E  0100               	movlb	0	; () banked
  4029  007E90  0100               	movlb	0	; () banked
  4030  007E92  51C6               	movf	can_serial_transmit_msg@i& (0+255),w,b
  4031  007E94  0D01               	mullw	1
  4032  007E96  0100               	movlb	0	; () banked
  4033  007E98  0E6E               	movlw	low can_serial_transmit_msg@buffer_1_msg
  4034  007E9A  24F3               	addwf	prodl,w,c
  4035  007E9C  6ED9               	movwf	fsr2l,c
  4036  007E9E  0100               	movlb	0	; () banked
  4037  007EA0  0E00               	movlw	high can_serial_transmit_msg@buffer_1_msg
  4038  007EA2  20F4               	addwfc	prodh,w,c
  4039  007EA4  6EDA               	movwf	fsr2h,c
  4040  007EA6  50DF               	movf	indf2,w,c
  4041  007EA8  EC69  F037         	call	_serial_transmit
  4042  007EAC  0100               	movlb	0	; () banked
  4043  007EAE  0100               	movlb	0	; () banked
  4044  007EB0  2BC6               	incf	can_serial_transmit_msg@i& (0+255),f,b
  4045  007EB2                     L25:
  4046                           
  4047                           ; BSR set to: 0
  4048  007EB2  0E0C               	movlw	12
  4049  007EB4  0100               	movlb	0	; () banked
  4050  007EB6  0100               	movlb	0	; () banked
  4051  007EB8  65C6               	cpfsgt	can_serial_transmit_msg@i& (0+255),b
  4052  007EBA  D7E9               	goto	l2500
  4053                           
  4054                           ; BSR set to: 0
  4055                           ;CAN_RX.c: 285: }
  4056                           ;CAN_RX.c: 287: for(i=0; i<14; i++)
  4057                           
  4058                           ; BSR set to: 0
  4059  007EBC  6E02               	movwf	??_can_serial_transmit_msg& (0+255),c
  4060  007EBE  0E00               	movlw	0
  4061  007EC0  0100               	movlb	0	; () banked
  4062  007EC2  0100               	movlb	0	; () banked
  4063  007EC4  6FC6               	movwf	can_serial_transmit_msg@i& (0+255),b
  4064  007EC6  5002               	movf	??_can_serial_transmit_msg& (0+255),w,c
  4065  007EC8  D012               	goto	L26
  4066  007ECA                     l2512:
  4067                           
  4068                           ; BSR set to: 0
  4069                           ;CAN_RX.c: 288: {
  4070                           ;CAN_RX.c: 289: serial_transmit(no_of_bytes_msg[i]);
  4071  007ECA  0100               	movlb	0	; () banked
  4072  007ECC  0100               	movlb	0	; () banked
  4073  007ECE  51C6               	movf	can_serial_transmit_msg@i& (0+255),w,b
  4074  007ED0  0D01               	mullw	1
  4075  007ED2  0100               	movlb	0	; () banked
  4076  007ED4  0EA2               	movlw	low can_serial_transmit_msg@no_of_bytes_msg
  4077  007ED6  24F3               	addwf	prodl,w,c
  4078  007ED8  6ED9               	movwf	fsr2l,c
  4079  007EDA  0100               	movlb	0	; () banked
  4080  007EDC  0E00               	movlw	high can_serial_transmit_msg@no_of_bytes_msg
  4081  007EDE  20F4               	addwfc	prodh,w,c
  4082  007EE0  6EDA               	movwf	fsr2h,c
  4083  007EE2  50DF               	movf	indf2,w,c
  4084  007EE4  EC69  F037         	call	_serial_transmit
  4085  007EE8  0100               	movlb	0	; () banked
  4086  007EEA  0100               	movlb	0	; () banked
  4087  007EEC  2BC6               	incf	can_serial_transmit_msg@i& (0+255),f,b
  4088  007EEE                     L26:
  4089                           
  4090                           ; BSR set to: 0
  4091  007EEE  0E0D               	movlw	13
  4092  007EF0  0100               	movlb	0	; () banked
  4093  007EF2  0100               	movlb	0	; () banked
  4094  007EF4  65C6               	cpfsgt	can_serial_transmit_msg@i& (0+255),b
  4095  007EF6  D7E9               	goto	l2512
  4096                           
  4097                           ; BSR set to: 0
  4098                           ;CAN_RX.c: 290: }
  4099                           ;CAN_RX.c: 291: serial_transmit(num_bytes_1);
  4100                           
  4101                           ; BSR set to: 0
  4102  007EF8  0100               	movlb	0	; () banked
  4103  007EFA  0100               	movlb	0	; () banked
  4104  007EFC  51E1               	movf	_num_bytes_1& (0+255),w,b
  4105  007EFE  EC69  F037         	call	_serial_transmit
  4106                           
  4107                           ;CAN_RX.c: 292: serial_transmit('\n');
  4108  007F02  0E0A               	movlw	10
  4109  007F04  EC69  F037         	call	_serial_transmit
  4110                           
  4111                           ;CAN_RX.c: 294: for(i=0; i<8; i++)
  4112  007F08  6E02               	movwf	??_can_serial_transmit_msg& (0+255),c
  4113  007F0A  0E00               	movlw	0
  4114  007F0C  0100               	movlb	0	; () banked
  4115  007F0E  0100               	movlb	0	; () banked
  4116  007F10  6FC6               	movwf	can_serial_transmit_msg@i& (0+255),b
  4117  007F12  5002               	movf	??_can_serial_transmit_msg& (0+255),w,c
  4118  007F14  D012               	goto	L27
  4119  007F16                     l2526:
  4120                           
  4121                           ; BSR set to: 0
  4122                           ;CAN_RX.c: 295: {
  4123                           ;CAN_RX.c: 296: serial_transmit(id_msg[i]);
  4124  007F16  0100               	movlb	0	; () banked
  4125  007F18  0100               	movlb	0	; () banked
  4126  007F1A  51C6               	movf	can_serial_transmit_msg@i& (0+255),w,b
  4127  007F1C  0D01               	mullw	1
  4128  007F1E  0100               	movlb	0	; () banked
  4129  007F20  0EBC               	movlw	low can_serial_transmit_msg@id_msg
  4130  007F22  24F3               	addwf	prodl,w,c
  4131  007F24  6ED9               	movwf	fsr2l,c
  4132  007F26  0100               	movlb	0	; () banked
  4133  007F28  0E00               	movlw	high can_serial_transmit_msg@id_msg
  4134  007F2A  20F4               	addwfc	prodh,w,c
  4135  007F2C  6EDA               	movwf	fsr2h,c
  4136  007F2E  50DF               	movf	indf2,w,c
  4137  007F30  EC69  F037         	call	_serial_transmit
  4138  007F34  0100               	movlb	0	; () banked
  4139  007F36  0100               	movlb	0	; () banked
  4140  007F38  2BC6               	incf	can_serial_transmit_msg@i& (0+255),f,b
  4141  007F3A                     L27:
  4142                           
  4143                           ; BSR set to: 0
  4144  007F3A  0E07               	movlw	7
  4145  007F3C  0100               	movlb	0	; () banked
  4146  007F3E  0100               	movlb	0	; () banked
  4147  007F40  65C6               	cpfsgt	can_serial_transmit_msg@i& (0+255),b
  4148  007F42  D7E9               	goto	l2526
  4149                           
  4150                           ; BSR set to: 0
  4151                           ;CAN_RX.c: 297: }
  4152                           ;CAN_RX.c: 298: for(i=0; i<3; i++)
  4153                           
  4154                           ; BSR set to: 0
  4155  007F44  6E02               	movwf	??_can_serial_transmit_msg& (0+255),c
  4156  007F46  0E00               	movlw	0
  4157  007F48  0100               	movlb	0	; () banked
  4158  007F4A  0100               	movlb	0	; () banked
  4159  007F4C  6FC6               	movwf	can_serial_transmit_msg@i& (0+255),b
  4160  007F4E  5002               	movf	??_can_serial_transmit_msg& (0+255),w,c
  4161  007F50  D012               	goto	L28
  4162  007F52                     l2538:
  4163                           
  4164                           ; BSR set to: 0
  4165                           ;CAN_RX.c: 299: {
  4166                           ;CAN_RX.c: 300: serial_transmit(can_msg_ID_1.msg_ID_UART_compatible[i]);
  4167  007F52  0100               	movlb	0	; () banked
  4168  007F54  0100               	movlb	0	; () banked
  4169  007F56  51C6               	movf	can_serial_transmit_msg@i& (0+255),w,b
  4170  007F58  0D01               	mullw	1
  4171  007F5A  0100               	movlb	0	; () banked
  4172  007F5C  0EDC               	movlw	low _can_msg_ID_1
  4173  007F5E  24F3               	addwf	prodl,w,c
  4174  007F60  6ED9               	movwf	fsr2l,c
  4175  007F62  0100               	movlb	0	; () banked
  4176  007F64  0E00               	movlw	high _can_msg_ID_1
  4177  007F66  20F4               	addwfc	prodh,w,c
  4178  007F68  6EDA               	movwf	fsr2h,c
  4179  007F6A  50DF               	movf	indf2,w,c
  4180  007F6C  EC69  F037         	call	_serial_transmit
  4181  007F70  0100               	movlb	0	; () banked
  4182  007F72  0100               	movlb	0	; () banked
  4183  007F74  2BC6               	incf	can_serial_transmit_msg@i& (0+255),f,b
  4184  007F76                     L28:
  4185                           
  4186                           ; BSR set to: 0
  4187  007F76  0E02               	movlw	2
  4188  007F78  0100               	movlb	0	; () banked
  4189  007F7A  0100               	movlb	0	; () banked
  4190  007F7C  65C6               	cpfsgt	can_serial_transmit_msg@i& (0+255),b
  4191  007F7E  D7E9               	goto	l2538
  4192                           
  4193                           ; BSR set to: 0
  4194                           ;CAN_RX.c: 301: }
  4195                           ;CAN_RX.c: 302: serial_transmit('\n');
  4196                           
  4197                           ; BSR set to: 0
  4198  007F80  0E0A               	movlw	10
  4199  007F82  EC69  F037         	call	_serial_transmit
  4200                           
  4201                           ;CAN_RX.c: 304: for(i=0; i<10; i++)
  4202  007F86  6E02               	movwf	??_can_serial_transmit_msg& (0+255),c
  4203  007F88  0E00               	movlw	0
  4204  007F8A  0100               	movlb	0	; () banked
  4205  007F8C  0100               	movlb	0	; () banked
  4206  007F8E  6FC6               	movwf	can_serial_transmit_msg@i& (0+255),b
  4207  007F90  5002               	movf	??_can_serial_transmit_msg& (0+255),w,c
  4208  007F92  D012               	goto	L29
  4209  007F94                     l2552:
  4210                           
  4211                           ; BSR set to: 0
  4212                           ;CAN_RX.c: 305: {
  4213                           ;CAN_RX.c: 306: serial_transmit(data_msg[i]);
  4214  007F94  0100               	movlb	0	; () banked
  4215  007F96  0100               	movlb	0	; () banked
  4216  007F98  51C6               	movf	can_serial_transmit_msg@i& (0+255),w,b
  4217  007F9A  0D01               	mullw	1
  4218  007F9C  0100               	movlb	0	; () banked
  4219  007F9E  0EB1               	movlw	low can_serial_transmit_msg@data_msg
  4220  007FA0  24F3               	addwf	prodl,w,c
  4221  007FA2  6ED9               	movwf	fsr2l,c
  4222  007FA4  0100               	movlb	0	; () banked
  4223  007FA6  0E00               	movlw	high can_serial_transmit_msg@data_msg
  4224  007FA8  20F4               	addwfc	prodh,w,c
  4225  007FAA  6EDA               	movwf	fsr2h,c
  4226  007FAC  50DF               	movf	indf2,w,c
  4227  007FAE  EC69  F037         	call	_serial_transmit
  4228  007FB2  0100               	movlb	0	; () banked
  4229  007FB4  0100               	movlb	0	; () banked
  4230  007FB6  2BC6               	incf	can_serial_transmit_msg@i& (0+255),f,b
  4231  007FB8                     L29:
  4232                           
  4233                           ; BSR set to: 0
  4234  007FB8  0E09               	movlw	9
  4235  007FBA  0100               	movlb	0	; () banked
  4236  007FBC  0100               	movlb	0	; () banked
  4237  007FBE  65C6               	cpfsgt	can_serial_transmit_msg@i& (0+255),b
  4238  007FC0  D7E9               	goto	l2552
  4239                           
  4240                           ; BSR set to: 0
  4241                           ;CAN_RX.c: 307: }
  4242                           ;CAN_RX.c: 308: for(i=0; i<8; i++)
  4243                           
  4244                           ; BSR set to: 0
  4245  007FC2  6E02               	movwf	??_can_serial_transmit_msg& (0+255),c
  4246  007FC4  0E00               	movlw	0
  4247  007FC6  0100               	movlb	0	; () banked
  4248  007FC8  0100               	movlb	0	; () banked
  4249  007FCA  6FC6               	movwf	can_serial_transmit_msg@i& (0+255),b
  4250  007FCC  5002               	movf	??_can_serial_transmit_msg& (0+255),w,c
  4251  007FCE  D012               	goto	L30
  4252  007FD0                     l2564:
  4253                           
  4254                           ; BSR set to: 0
  4255                           ;CAN_RX.c: 309: {
  4256                           ;CAN_RX.c: 310: serial_transmit(rx_data_1[i]);
  4257  007FD0  0100               	movlb	0	; () banked
  4258  007FD2  0100               	movlb	0	; () banked
  4259  007FD4  51C6               	movf	can_serial_transmit_msg@i& (0+255),w,b
  4260  007FD6  0D01               	mullw	1
  4261  007FD8  0100               	movlb	0	; () banked
  4262  007FDA  0ED0               	movlw	low _rx_data_1
  4263  007FDC  24F3               	addwf	prodl,w,c
  4264  007FDE  6ED9               	movwf	fsr2l,c
  4265  007FE0  0100               	movlb	0	; () banked
  4266  007FE2  0E00               	movlw	high _rx_data_1
  4267  007FE4  20F4               	addwfc	prodh,w,c
  4268  007FE6  6EDA               	movwf	fsr2h,c
  4269  007FE8  50DF               	movf	indf2,w,c
  4270  007FEA  EC69  F037         	call	_serial_transmit
  4271  007FEE  0100               	movlb	0	; () banked
  4272  007FF0  0100               	movlb	0	; () banked
  4273  007FF2  2BC6               	incf	can_serial_transmit_msg@i& (0+255),f,b
  4274  007FF4                     L30:
  4275                           
  4276                           ; BSR set to: 0
  4277  007FF4  0E07               	movlw	7
  4278  007FF6  0100               	movlb	0	; () banked
  4279  007FF8  0100               	movlb	0	; () banked
  4280  007FFA  65C6               	cpfsgt	can_serial_transmit_msg@i& (0+255),b
  4281  007FFC  D7E9               	goto	l2564
  4282  007FFE                     l176:
  4283                           
  4284                           ; BSR set to: 0
  4285  007FFE  0012               	return	
  4286  008000                     __end_of_can_serial_transmit_msg:
  4287                           	opt stack 0
  4288                           tblptru	equ	0xFF8
  4289                           tblptrh	equ	0xFF7
  4290                           tblptrl	equ	0xFF6
  4291                           tablat	equ	0xFF5
  4292                           prodh	equ	0xFF4
  4293                           prodl	equ	0xFF3
  4294                           postinc0	equ	0xFEE
  4295                           wreg	equ	0xFE8
  4296                           postinc1	equ	0xFE6
  4297                           postdec1	equ	0xFE5
  4298                           fsr1l	equ	0xFE1
  4299                           indf2	equ	0xFDF
  4300                           postinc2	equ	0xFDE
  4301                           postdec2	equ	0xFDD
  4302                           fsr2h	equ	0xFDA
  4303                           fsr2l	equ	0xFD9
  4304                           status	equ	0xFD8
  4305                           
  4306 ;; *************** function _serial_transmit *****************
  4307 ;; Defined at:
  4308 ;;		line 197 in file "CAN_RX.c"
  4309 ;; Parameters:    Size  Location     Type
  4310 ;;  m               1    wreg     unsigned char 
  4311 ;; Auto vars:     Size  Location     Type
  4312 ;;  m               1    0[COMRAM] unsigned char 
  4313 ;; Return value:  Size  Location     Type
  4314 ;;		None               void
  4315 ;; Registers used:
  4316 ;;		wreg
  4317 ;; Tracked objects:
  4318 ;;		On entry : 0/0
  4319 ;;		On exit  : 0/0
  4320 ;;		Unchanged: 0/0
  4321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4322 ;;      Params:         0       0       0       0       0       0       0       0       0
  4323 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4324 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4325 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4326 ;;Total ram usage:        1 bytes
  4327 ;; Hardware stack levels used:    1
  4328 ;; This function calls:
  4329 ;;		Nothing
  4330 ;; This function is called by:
  4331 ;;		_can_serial_transmit_msg
  4332 ;;		_error_handle
  4333 ;; This function uses a non-reentrant model
  4334 ;;
  4335                           
  4336                           	psect	text18
  4337  006ED2                     __ptext18:
  4338                           	opt stack 0
  4339  006ED2                     _serial_transmit:
  4340                           	opt stack 28
  4341                           
  4342                           ; BSR set to: 0
  4343                           ;incstack = 0
  4344                           ;serial_transmit@m stored from wreg
  4345  006ED2  CFE8 F001          	movff	wreg,serial_transmit@m
  4346                           
  4347                           ;CAN_RX.c: 199: TXREG=m;
  4348  006ED6  C001  FFAD         	movff	serial_transmit@m,4013	;volatile
  4349                           
  4350                           ;CAN_RX.c: 200: TXEN=1;
  4351  006EDA  8AAC               	bsf	4012,5,c	;volatile
  4352  006EDC                     l115:
  4353  006EDC  B2AC               	btfsc	4012,1,c	;volatile
  4354  006EDE  0012               	return	
  4355  006EE0  D7FD               	goto	l115
  4356  006EE2                     __end_of_serial_transmit:
  4357                           	opt stack 0
  4358                           tblptru	equ	0xFF8
  4359                           tblptrh	equ	0xFF7
  4360                           tblptrl	equ	0xFF6
  4361                           tablat	equ	0xFF5
  4362                           prodh	equ	0xFF4
  4363                           prodl	equ	0xFF3
  4364                           postinc0	equ	0xFEE
  4365                           wreg	equ	0xFE8
  4366                           postinc1	equ	0xFE6
  4367                           postdec1	equ	0xFE5
  4368                           fsr1l	equ	0xFE1
  4369                           indf2	equ	0xFDF
  4370                           postinc2	equ	0xFDE
  4371                           postdec2	equ	0xFDD
  4372                           fsr2h	equ	0xFDA
  4373                           fsr2l	equ	0xFD9
  4374                           status	equ	0xFD8
  4375                           
  4376 ;; *************** function _CAN2510InterruptStatus *****************
  4377 ;; Defined at:
  4378 ;;		line 9 in file "D:\Microchip\xc8\v1.31\sources\pic18\plib\CAN2510\canints.c"
  4379 ;; Parameters:    Size  Location     Type
  4380 ;;		None
  4381 ;; Auto vars:     Size  Location     Type
  4382 ;;		None
  4383 ;; Return value:  Size  Location     Type
  4384 ;;                  1    wreg      unsigned char 
  4385 ;; Registers used:
  4386 ;;		wreg, status,2, status,0, cstack
  4387 ;; Tracked objects:
  4388 ;;		On entry : 0/0
  4389 ;;		On exit  : 0/0
  4390 ;;		Unchanged: 0/0
  4391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4392 ;;      Params:         0       0       0       0       0       0       0       0       0
  4393 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4394 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4395 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4396 ;;Total ram usage:        0 bytes
  4397 ;; Hardware stack levels used:    1
  4398 ;; Hardware stack levels required when called:    2
  4399 ;; This function calls:
  4400 ;;		_CAN2510ByteRead
  4401 ;; This function is called by:
  4402 ;;		_main
  4403 ;; This function uses a non-reentrant model
  4404 ;;
  4405                           
  4406                           	psect	text19
  4407  006EAA                     __ptext19:
  4408                           	opt stack 0
  4409  006EAA                     _CAN2510InterruptStatus:
  4410                           	opt stack 28
  4411                           
  4412                           ;incstack = 0
  4413  006EAA  0E0E               	movlw	14
  4414  006EAC  ECAC  F037         	call	_CAN2510ByteRead
  4415  006EB0  0B0E               	andlw	14
  4416  006EB2  0012               	return	
  4417  006EB4                     __end_of_CAN2510InterruptStatus:
  4418                           	opt stack 0
  4419                           tblptru	equ	0xFF8
  4420                           tblptrh	equ	0xFF7
  4421                           tblptrl	equ	0xFF6
  4422                           tablat	equ	0xFF5
  4423                           prodh	equ	0xFF4
  4424                           prodl	equ	0xFF3
  4425                           postinc0	equ	0xFEE
  4426                           wreg	equ	0xFE8
  4427                           postinc1	equ	0xFE6
  4428                           postdec1	equ	0xFE5
  4429                           fsr1l	equ	0xFE1
  4430                           indf2	equ	0xFDF
  4431                           postinc2	equ	0xFDE
  4432                           postdec2	equ	0xFDD
  4433                           fsr2h	equ	0xFDA
  4434                           fsr2l	equ	0xFD9
  4435                           status	equ	0xFD8
  4436                           
  4437 ;; *************** function _CAN2510ByteRead *****************
  4438 ;; Defined at:
  4439 ;;		line 9 in file "D:\Microchip\xc8\v1.31\sources\pic18\plib\CAN2510\ReadByte.c"
  4440 ;; Parameters:    Size  Location     Type
  4441 ;;  addr            1    wreg     unsigned char 
  4442 ;; Auto vars:     Size  Location     Type
  4443 ;;  addr            1    2[COMRAM] unsigned char 
  4444 ;;  ReturnValue     1    3[COMRAM] unsigned char 
  4445 ;; Return value:  Size  Location     Type
  4446 ;;                  1    wreg      unsigned char 
  4447 ;; Registers used:
  4448 ;;		wreg, status,2, status,0, cstack
  4449 ;; Tracked objects:
  4450 ;;		On entry : 0/0
  4451 ;;		On exit  : 0/0
  4452 ;;		Unchanged: 0/0
  4453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4454 ;;      Params:         0       0       0       0       0       0       0       0       0
  4455 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4456 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4457 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4458 ;;Total ram usage:        2 bytes
  4459 ;; Hardware stack levels used:    1
  4460 ;; Hardware stack levels required when called:    1
  4461 ;; This function calls:
  4462 ;;		_CAN2510Disable
  4463 ;;		_CAN2510Enable
  4464 ;;		_ReadSPI
  4465 ;;		_WriteSPI
  4466 ;; This function is called by:
  4467 ;;		_CAN2510ErrorState
  4468 ;;		_CAN2510InterruptStatus
  4469 ;;		_CAN2510ReadMode
  4470 ;;		_CAN2510DataRead
  4471 ;; This function uses a non-reentrant model
  4472 ;;
  4473                           
  4474                           	psect	text20
  4475  006F58                     __ptext20:
  4476                           	opt stack 0
  4477  006F58                     _CAN2510ByteRead:
  4478                           	opt stack 24
  4479                           
  4480                           ;incstack = 0
  4481                           ;CAN2510ByteRead@addr stored from wreg
  4482  006F58  CFE8 F003          	movff	wreg,CAN2510ByteRead@addr
  4483  006F5C  EC52  F037         	call	_CAN2510Enable	;wreg free
  4484  006F60                     l1858:
  4485  006F60  0E03               	movlw	3
  4486  006F62  EC9C  F037         	call	_WriteSPI
  4487  006F66  0900               	iorlw	0
  4488  006F68  A4D8               	btfss	status,2,c
  4489  006F6A  D7FA               	goto	l1858
  4490  006F6C                     l1860:
  4491  006F6C  5003               	movf	CAN2510ByteRead@addr,w,c
  4492  006F6E  EC9C  F037         	call	_WriteSPI
  4493  006F72  0900               	iorlw	0
  4494  006F74  A4D8               	btfss	status,2,c
  4495  006F76  D7FA               	goto	l1860
  4496  006F78  EC71  F037         	call	_ReadSPI	;wreg free
  4497  006F7C  6E04               	movwf	CAN2510ByteRead@ReturnValue,c
  4498  006F7E  EC4F  F037         	call	_CAN2510Disable	;wreg free
  4499  006F82  5004               	movf	CAN2510ByteRead@ReturnValue,w,c
  4500  006F84  0012               	return	
  4501  006F86                     __end_of_CAN2510ByteRead:
  4502                           	opt stack 0
  4503                           tblptru	equ	0xFF8
  4504                           tblptrh	equ	0xFF7
  4505                           tblptrl	equ	0xFF6
  4506                           tablat	equ	0xFF5
  4507                           prodh	equ	0xFF4
  4508                           prodl	equ	0xFF3
  4509                           postinc0	equ	0xFEE
  4510                           wreg	equ	0xFE8
  4511                           postinc1	equ	0xFE6
  4512                           postdec1	equ	0xFE5
  4513                           fsr1l	equ	0xFE1
  4514                           indf2	equ	0xFDF
  4515                           postinc2	equ	0xFDE
  4516                           postdec2	equ	0xFDD
  4517                           fsr2h	equ	0xFDA
  4518                           fsr2l	equ	0xFD9
  4519                           status	equ	0xFD8
  4520                           
  4521 ;; *************** function _WriteSPI *****************
  4522 ;; Defined at:
  4523 ;;		line 13 in file "D:\Microchip\xc8\v1.31\sources\pic18\plib\SPI\spi_writ.c"
  4524 ;; Parameters:    Size  Location     Type
  4525 ;;  data_out        1    wreg     unsigned char 
  4526 ;; Auto vars:     Size  Location     Type
  4527 ;;  data_out        1    1[COMRAM] unsigned char 
  4528 ;;  TempVar         1    0[COMRAM] unsigned char 
  4529 ;; Return value:  Size  Location     Type
  4530 ;;                  1    wreg      char 
  4531 ;; Registers used:
  4532 ;;		wreg
  4533 ;; Tracked objects:
  4534 ;;		On entry : 0/0
  4535 ;;		On exit  : 0/0
  4536 ;;		Unchanged: 0/0
  4537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4538 ;;      Params:         0       0       0       0       0       0       0       0       0
  4539 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4540 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4541 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4542 ;;Total ram usage:        2 bytes
  4543 ;; Hardware stack levels used:    1
  4544 ;; This function calls:
  4545 ;;		Nothing
  4546 ;; This function is called by:
  4547 ;;		_CAN2510Reset
  4548 ;;		_CAN2510BitModify
  4549 ;;		_CAN2510ByteRead
  4550 ;;		_CAN2510ByteWrite
  4551 ;; This function uses a non-reentrant model
  4552 ;;
  4553                           
  4554                           	psect	text21
  4555  006F38                     __ptext21:
  4556                           	opt stack 0
  4557  006F38                     _WriteSPI:
  4558                           	opt stack 24
  4559                           
  4560                           ;incstack = 0
  4561                           ;WriteSPI@data_out stored from wreg
  4562  006F38  CFE8 F002          	movff	wreg,WriteSPI@data_out
  4563  006F3C  CFC9 F001          	movff	4041,WriteSPI@TempVar	;volatile
  4564  006F40  969E               	bcf	3998,3,c	;volatile
  4565  006F42  9EC6               	bcf	4038,7,c	;volatile
  4566  006F44  C002  FFC9         	movff	WriteSPI@data_out,4041	;volatile
  4567  006F48  AEC6               	btfss	4038,7,c	;volatile
  4568  006F4A  D002               	goto	l390
  4569  006F4C  0EFF               	movlw	255
  4570  006F4E  D003               	goto	l388
  4571  006F50                     l390:
  4572  006F50  A69E               	btfss	3998,3,c	;volatile
  4573  006F52  D7FE               	goto	l390
  4574  006F54  0E00               	movlw	0
  4575  006F56                     l388:
  4576  006F56  0012               	return	
  4577  006F58                     __end_of_WriteSPI:
  4578                           	opt stack 0
  4579                           tblptru	equ	0xFF8
  4580                           tblptrh	equ	0xFF7
  4581                           tblptrl	equ	0xFF6
  4582                           tablat	equ	0xFF5
  4583                           prodh	equ	0xFF4
  4584                           prodl	equ	0xFF3
  4585                           postinc0	equ	0xFEE
  4586                           wreg	equ	0xFE8
  4587                           postinc1	equ	0xFE6
  4588                           postdec1	equ	0xFE5
  4589                           fsr1l	equ	0xFE1
  4590                           indf2	equ	0xFDF
  4591                           postinc2	equ	0xFDE
  4592                           postdec2	equ	0xFDD
  4593                           fsr2h	equ	0xFDA
  4594                           fsr2l	equ	0xFD9
  4595                           status	equ	0xFD8
  4596                           
  4597 ;; *************** function _ReadSPI *****************
  4598 ;; Defined at:
  4599 ;;		line 12 in file "D:\Microchip\xc8\v1.31\sources\pic18\plib\SPI\spi_read.c"
  4600 ;; Parameters:    Size  Location     Type
  4601 ;;		None
  4602 ;; Auto vars:     Size  Location     Type
  4603 ;;  TempVar         1    0[COMRAM] unsigned char 
  4604 ;; Return value:  Size  Location     Type
  4605 ;;                  1    wreg      unsigned char 
  4606 ;; Registers used:
  4607 ;;		wreg, status,2
  4608 ;; Tracked objects:
  4609 ;;		On entry : 0/0
  4610 ;;		On exit  : 0/0
  4611 ;;		Unchanged: 0/0
  4612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4613 ;;      Params:         0       0       0       0       0       0       0       0       0
  4614 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4615 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4616 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4617 ;;Total ram usage:        1 bytes
  4618 ;; Hardware stack levels used:    1
  4619 ;; This function calls:
  4620 ;;		Nothing
  4621 ;; This function is called by:
  4622 ;;		_CAN2510ByteRead
  4623 ;; This function uses a non-reentrant model
  4624 ;;
  4625                           
  4626                           	psect	text22
  4627  006EE2                     __ptext22:
  4628                           	opt stack 0
  4629  006EE2                     _ReadSPI:
  4630                           	opt stack 24
  4631                           
  4632                           ;incstack = 0
  4633  006EE2  CFC9 F001          	movff	4041,ReadSPI@TempVar	;volatile
  4634  006EE6  969E               	bcf	3998,3,c	;volatile
  4635  006EE8  0E00               	movlw	0
  4636  006EEA  6EC9               	movwf	4041,c	;volatile
  4637  006EEC                     l1005:
  4638  006EEC  A69E               	btfss	3998,3,c	;volatile
  4639  006EEE  D7FE               	goto	l1005
  4640  006EF0  50C9               	movf	4041,w,c	;volatile
  4641  006EF2  0012               	return	
  4642  006EF4                     __end_of_ReadSPI:
  4643                           	opt stack 0
  4644                           tblptru	equ	0xFF8
  4645                           tblptrh	equ	0xFF7
  4646                           tblptrl	equ	0xFF6
  4647                           tablat	equ	0xFF5
  4648                           prodh	equ	0xFF4
  4649                           prodl	equ	0xFF3
  4650                           postinc0	equ	0xFEE
  4651                           wreg	equ	0xFE8
  4652                           postinc1	equ	0xFE6
  4653                           postdec1	equ	0xFE5
  4654                           fsr1l	equ	0xFE1
  4655                           indf2	equ	0xFDF
  4656                           postinc2	equ	0xFDE
  4657                           postdec2	equ	0xFDD
  4658                           fsr2h	equ	0xFDA
  4659                           fsr2l	equ	0xFD9
  4660                           status	equ	0xFD8
  4661                           
  4662 ;; *************** function _CAN2510Enable *****************
  4663 ;; Defined at:
  4664 ;;		line 16 in file "D:\Microchip\xc8\v1.31\sources\pic18\plib\CAN2510\CANenabl.c"
  4665 ;; Parameters:    Size  Location     Type
  4666 ;;		None
  4667 ;; Auto vars:     Size  Location     Type
  4668 ;;		None
  4669 ;; Return value:  Size  Location     Type
  4670 ;;		None               void
  4671 ;; Registers used:
  4672 ;;		status,2, status,0
  4673 ;; Tracked objects:
  4674 ;;		On entry : 0/0
  4675 ;;		On exit  : 0/0
  4676 ;;		Unchanged: 0/0
  4677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4678 ;;      Params:         0       0       0       0       0       0       0       0       0
  4679 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4680 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4681 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4682 ;;Total ram usage:        0 bytes
  4683 ;; Hardware stack levels used:    1
  4684 ;; This function calls:
  4685 ;;		Nothing
  4686 ;; This function is called by:
  4687 ;;		_can_init
  4688 ;;		_CAN2510Reset
  4689 ;;		_CAN2510BitModify
  4690 ;;		_CAN2510ByteRead
  4691 ;;		_CAN2510ByteWrite
  4692 ;; This function uses a non-reentrant model
  4693 ;;
  4694                           
  4695                           	psect	text23
  4696  006EA4                     __ptext23:
  4697                           	opt stack 0
  4698  006EA4                     _CAN2510Enable:
  4699                           	opt stack 24
  4700                           
  4701                           ;incstack = 0
  4702  006EA4  948B               	bcf	3979,2,c	;volatile
  4703  006EA6  9494               	bcf	3988,2,c	;volatile
  4704  006EA8  0012               	return	
  4705  006EAA                     __end_of_CAN2510Enable:
  4706                           	opt stack 0
  4707                           tblptru	equ	0xFF8
  4708                           tblptrh	equ	0xFF7
  4709                           tblptrl	equ	0xFF6
  4710                           tablat	equ	0xFF5
  4711                           prodh	equ	0xFF4
  4712                           prodl	equ	0xFF3
  4713                           postinc0	equ	0xFEE
  4714                           wreg	equ	0xFE8
  4715                           postinc1	equ	0xFE6
  4716                           postdec1	equ	0xFE5
  4717                           fsr1l	equ	0xFE1
  4718                           indf2	equ	0xFDF
  4719                           postinc2	equ	0xFDE
  4720                           postdec2	equ	0xFDD
  4721                           fsr2h	equ	0xFDA
  4722                           fsr2l	equ	0xFD9
  4723                           status	equ	0xFD8
  4724                           
  4725 ;; *************** function _CAN2510Disable *****************
  4726 ;; Defined at:
  4727 ;;		line 38 in file "D:\Microchip\xc8\v1.31\sources\pic18\plib\CAN2510\CANenabl.c"
  4728 ;; Parameters:    Size  Location     Type
  4729 ;;		None
  4730 ;; Auto vars:     Size  Location     Type
  4731 ;;		None
  4732 ;; Return value:  Size  Location     Type
  4733 ;;		None               void
  4734 ;; Registers used:
  4735 ;;		status,2, status,0
  4736 ;; Tracked objects:
  4737 ;;		On entry : 0/0
  4738 ;;		On exit  : 0/0
  4739 ;;		Unchanged: 0/0
  4740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4741 ;;      Params:         0       0       0       0       0       0       0       0       0
  4742 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4743 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4744 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4745 ;;Total ram usage:        0 bytes
  4746 ;; Hardware stack levels used:    1
  4747 ;; This function calls:
  4748 ;;		Nothing
  4749 ;; This function is called by:
  4750 ;;		_CAN2510Reset
  4751 ;;		_CAN2510BitModify
  4752 ;;		_CAN2510ByteRead
  4753 ;;		_CAN2510ByteWrite
  4754 ;; This function uses a non-reentrant model
  4755 ;;
  4756                           
  4757                           	psect	text24
  4758  006E9E                     __ptext24:
  4759                           	opt stack 0
  4760  006E9E                     _CAN2510Disable:
  4761                           	opt stack 24
  4762                           
  4763                           ;incstack = 0
  4764  006E9E  848B               	bsf	3979,2,c	;volatile
  4765  006EA0  9494               	bcf	3988,2,c	;volatile
  4766  006EA2  0012               	return	
  4767  006EA4                     __end_of_CAN2510Disable:
  4768                           	opt stack 0
  4769  0000                     tblptru	equ	0xFF8
  4770                           tblptrh	equ	0xFF7
  4771                           tblptrl	equ	0xFF6
  4772                           tablat	equ	0xFF5
  4773                           prodh	equ	0xFF4
  4774                           prodl	equ	0xFF3
  4775                           postinc0	equ	0xFEE
  4776                           wreg	equ	0xFE8
  4777                           postinc1	equ	0xFE6
  4778                           postdec1	equ	0xFE5
  4779                           fsr1l	equ	0xFE1
  4780                           indf2	equ	0xFDF
  4781                           postinc2	equ	0xFDE
  4782                           postdec2	equ	0xFDD
  4783                           fsr2h	equ	0xFDA
  4784                           fsr2l	equ	0xFD9
  4785                           status	equ	0xFD8
  4786                           tblptru	equ	0xFF8
  4787                           tblptrh	equ	0xFF7
  4788                           tblptrl	equ	0xFF6
  4789                           tablat	equ	0xFF5
  4790                           prodh	equ	0xFF4
  4791                           prodl	equ	0xFF3
  4792                           postinc0	equ	0xFEE
  4793                           wreg	equ	0xFE8
  4794                           postinc1	equ	0xFE6
  4795                           postdec1	equ	0xFE5
  4796                           fsr1l	equ	0xFE1
  4797                           indf2	equ	0xFDF
  4798                           postinc2	equ	0xFDE
  4799                           postdec2	equ	0xFDD
  4800                           fsr2h	equ	0xFDA
  4801                           fsr2l	equ	0xFD9
  4802                           status	equ	0xFD8
  4803                           
  4804                           	psect	rparam
  4805  0000                     tblptru	equ	0xFF8
  4806                           tblptrh	equ	0xFF7
  4807                           tblptrl	equ	0xFF6
  4808                           tablat	equ	0xFF5
  4809                           prodh	equ	0xFF4
  4810                           prodl	equ	0xFF3
  4811                           postinc0	equ	0xFEE
  4812                           wreg	equ	0xFE8
  4813                           postinc1	equ	0xFE6
  4814                           postdec1	equ	0xFE5
  4815                           fsr1l	equ	0xFE1
  4816                           indf2	equ	0xFDF
  4817                           postinc2	equ	0xFDE
  4818                           postdec2	equ	0xFDD
  4819                           fsr2h	equ	0xFDA
  4820                           fsr2l	equ	0xFD9
  4821                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        203
    BSS         41
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     58      87
    BANK0           160    103     151
    BANK1           256      0     167
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    CAN2510DataRead@data	PTR unsigned char  size(2) Largest target is 8
		 -> rx_data_0(BANK0[8]), rx_data_1(BANK0[8]), 

    CAN2510DataRead@msgId	PTR unsigned long  size(2) Largest target is 4
		 -> can_msg_ID_0(BANK0[4]), can_msg_ID_1(BANK0[4]), 

    CAN2510DataRead@numBytes	PTR unsigned char  size(2) Largest target is 1
		 -> num_bytes_0(BANK0[1]), num_bytes_1(BANK0[1]), 

    CAN2510SetMsgFilterStd@filters	PTR unsigned int  size(2) Largest target is 4
		 -> can_init@filter_B1(COMRAM[4]), can_init@filter_B0(COMRAM[4]), 

    rxdata0	PTR unsigned char  size(2) Largest target is 8
		 -> rx_data_0(BANK0[8]), 

    numbytes0	PTR unsigned char  size(2) Largest target is 1
		 -> num_bytes_0(BANK0[1]), 

    msgID0	PTR unsigned long  size(2) Largest target is 4
		 -> can_msg_ID_0(BANK0[4]), 

    rxdata1	PTR unsigned char  size(2) Largest target is 8
		 -> rx_data_1(BANK0[8]), 

    numbytes1	PTR unsigned char  size(2) Largest target is 1
		 -> num_bytes_1(BANK0[1]), 

    msgID1	PTR unsigned long  size(2) Largest target is 4
		 -> can_msg_ID_1(BANK0[4]), 


Critical Paths under _main in COMRAM

    _main->_interrupt_handle
    _interrupt_handle->_error_handle
    _error_handle->_can_init
    _can_init->_CAN2510Init
    _CAN2510SetMsgFilterStd->_CAN2510SetSingleFilterStd
    _CAN2510SetSingleMaskStd->_CAN2510ByteWrite
    _CAN2510SetSingleFilterStd->_CAN2510ByteWrite
    _CAN2510Init->_CAN2510BitTimeInit
    _CAN2510SetMode->_CAN2510BitModify
    _CAN2510Reset->_WriteSPI
    _CAN2510ReadMode->_CAN2510ByteRead
    _CAN2510BitTimeInit->_CAN2510ByteWrite
    _CAN2510ByteWrite->_WriteSPI
    _CAN2510ErrorState->_CAN2510ByteRead
    _CAN2510DataRead->_CAN2510BitModify
    _CAN2510BitModify->_WriteSPI
    _can_serial_transmit_msg->_serial_transmit
    _CAN2510InterruptStatus->_CAN2510ByteRead
    _CAN2510ByteRead->_WriteSPI

Critical Paths under _main in BANK0

    _main->_can_serial_transmit_msg
    _interrupt_handle->_error_handle

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   22855
                                             56 COMRAM     2     2      0
             _CAN2510InterruptStatus
                           _can_init
            _can_serial_transmit_msg
                   _interrupt_handle
 ---------------------------------------------------------------------------------
 (1) _interrupt_handle                                     2     2      0   11868
                                             54 COMRAM     2     2      0
                    _CAN2510DataRead
                       _error_handle
 ---------------------------------------------------------------------------------
 (2) _error_handle                                        89    89      0   10073
                                             53 COMRAM     1     1      0
                                              0 BANK0     88    88      0
                  _CAN2510ErrorState
                       _CAN2510Reset
                           _can_init
                    _serial_transmit
 ---------------------------------------------------------------------------------
 (3) _can_init                                            26    26      0    9458
                                             27 COMRAM    26    26      0
                      _CAN2510Enable
                        _CAN2510Init
                    _CAN2510ReadMode
                     _CAN2510SetMode
             _CAN2510SetMsgFilterStd
 ---------------------------------------------------------------------------------
 (4) _CAN2510SetMsgFilterStd                               8     4      4    4619
                                             11 COMRAM     8     4      4
                   _CAN2510ByteWrite
                    _CAN2510ReadMode
                     _CAN2510SetMode
          _CAN2510SetSingleFilterStd
            _CAN2510SetSingleMaskStd
 ---------------------------------------------------------------------------------
 (5) _CAN2510SetSingleMaskStd                              6     4      2    1127
                                              4 COMRAM     6     4      2
                   _CAN2510ByteWrite
 ---------------------------------------------------------------------------------
 (5) _CAN2510SetSingleFilterStd                            7     5      2    1247
                                              4 COMRAM     7     5      2
                   _CAN2510ByteWrite
 ---------------------------------------------------------------------------------
 (4) _CAN2510Init                                         18     6     12    3657
                                              9 COMRAM    18     6     12
                 _CAN2510BitTimeInit
                   _CAN2510ByteWrite
                    _CAN2510ReadMode
                       _CAN2510Reset
                     _CAN2510SetMode
                            _OpenSPI
 ---------------------------------------------------------------------------------
 (5) _OpenSPI                                              3     1      2     194
                                              0 COMRAM     3     1      2
 ---------------------------------------------------------------------------------
 (5) _CAN2510SetMode                                       2     2      0     853
                                              5 COMRAM     2     2      0
                   _CAN2510BitModify
 ---------------------------------------------------------------------------------
 (5) _CAN2510Reset                                         0     0      0      23
                     _CAN2510Disable
                      _CAN2510Enable
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (5) _CAN2510ReadMode                                      1     1      0      92
                                              4 COMRAM     1     1      0
                    _CAN2510ByteRead
 ---------------------------------------------------------------------------------
 (5) _CAN2510BitTimeInit                                   5     1      4     981
                                              4 COMRAM     5     1      4
                   _CAN2510ByteWrite
 ---------------------------------------------------------------------------------
 (6) _CAN2510ByteWrite                                     2     1      1     862
                                              2 COMRAM     2     1      1
                     _CAN2510Disable
                      _CAN2510Enable
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (3) _CAN2510ErrorState                                    1     1      0     180
                                              4 COMRAM     1     1      0
                    _CAN2510ByteRead
 ---------------------------------------------------------------------------------
 (2) _CAN2510DataRead                                     14     8      6    1773
                                              5 COMRAM    14     8      6
                   _CAN2510BitModify
                    _CAN2510ByteRead
 ---------------------------------------------------------------------------------
 (6) _CAN2510BitModify                                     3     1      2     831
                                              2 COMRAM     3     1      2
                     _CAN2510Disable
                      _CAN2510Enable
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (1) _can_serial_transmit_msg                            104   104      0    1437
                                              1 COMRAM     1     1      0
                                              0 BANK0    103   103      0
                    _serial_transmit
 ---------------------------------------------------------------------------------
 (3) _serial_transmit                                      1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _CAN2510InterruptStatus                               0     0      0      69
                    _CAN2510ByteRead
 ---------------------------------------------------------------------------------
 (6) _CAN2510ByteRead                                      2     2      0      69
                                              2 COMRAM     2     2      0
                     _CAN2510Disable
                      _CAN2510Enable
                            _ReadSPI
                           _WriteSPI
 ---------------------------------------------------------------------------------
 (7) _WriteSPI                                             2     2      0      23
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (7) _ReadSPI                                              1     1      0       1
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) _CAN2510Enable                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _CAN2510Disable                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _CAN2510InterruptStatus
     _CAN2510ByteRead
       _CAN2510Disable
       _CAN2510Enable
       _ReadSPI
       _WriteSPI
   _can_init
     _CAN2510Enable
     _CAN2510Init
       _CAN2510BitTimeInit
         _CAN2510ByteWrite
           _CAN2510Disable
           _CAN2510Enable
           _WriteSPI
       _CAN2510ByteWrite
         _CAN2510Disable
         _CAN2510Enable
         _WriteSPI
       _CAN2510ReadMode
         _CAN2510ByteRead
           _CAN2510Disable
           _CAN2510Enable
           _ReadSPI
           _WriteSPI
       _CAN2510Reset
         _CAN2510Disable
         _CAN2510Enable
         _WriteSPI
       _CAN2510SetMode
         _CAN2510BitModify
           _CAN2510Disable
           _CAN2510Enable
           _WriteSPI
       _OpenSPI
     _CAN2510ReadMode
       _CAN2510ByteRead
         _CAN2510Disable
         _CAN2510Enable
         _ReadSPI
         _WriteSPI
     _CAN2510SetMode
       _CAN2510BitModify
         _CAN2510Disable
         _CAN2510Enable
         _WriteSPI
     _CAN2510SetMsgFilterStd
       _CAN2510ByteWrite
         _CAN2510Disable
         _CAN2510Enable
         _WriteSPI
       _CAN2510ReadMode
         _CAN2510ByteRead
           _CAN2510Disable
           _CAN2510Enable
           _ReadSPI
           _WriteSPI
       _CAN2510SetMode
         _CAN2510BitModify
           _CAN2510Disable
           _CAN2510Enable
           _WriteSPI
       _CAN2510SetSingleFilterStd
         _CAN2510ByteWrite
           _CAN2510Disable
           _CAN2510Enable
           _WriteSPI
       _CAN2510SetSingleMaskStd
         _CAN2510ByteWrite
           _CAN2510Disable
           _CAN2510Enable
           _WriteSPI
   _can_serial_transmit_msg
     _serial_transmit
   _interrupt_handle
     _CAN2510DataRead
       _CAN2510BitModify
         _CAN2510Disable
         _CAN2510Enable
         _WriteSPI
       _CAN2510ByteRead
         _CAN2510Disable
         _CAN2510Enable
         _ReadSPI
         _WriteSPI
     _error_handle
       _CAN2510ErrorState
         _CAN2510ByteRead
           _CAN2510Disable
           _CAN2510Enable
           _ReadSPI
           _WriteSPI
       _CAN2510Reset
         _CAN2510Disable
         _CAN2510Enable
         _WriteSPI
       _can_init
         _CAN2510Enable
         _CAN2510Init
           _CAN2510BitTimeInit
             _CAN2510ByteWrite
               _CAN2510Disable
               _CAN2510Enable
               _WriteSPI
           _CAN2510ByteWrite
             _CAN2510Disable
             _CAN2510Enable
             _WriteSPI
           _CAN2510ReadMode
             _CAN2510ByteRead
               _CAN2510Disable
               _CAN2510Enable
               _ReadSPI
               _WriteSPI
           _CAN2510Reset
             _CAN2510Disable
             _CAN2510Enable
             _WriteSPI
           _CAN2510SetMode
             _CAN2510BitModify
               _CAN2510Disable
               _CAN2510Enable
               _WriteSPI
           _OpenSPI
         _CAN2510ReadMode
           _CAN2510ByteRead
             _CAN2510Disable
             _CAN2510Enable
             _ReadSPI
             _WriteSPI
         _CAN2510SetMode
           _CAN2510BitModify
             _CAN2510Disable
             _CAN2510Enable
             _WriteSPI
         _CAN2510SetMsgFilterStd
           _CAN2510ByteWrite
             _CAN2510Disable
             _CAN2510Enable
             _WriteSPI
           _CAN2510ReadMode
             _CAN2510ByteRead
               _CAN2510Disable
               _CAN2510Enable
               _ReadSPI
               _WriteSPI
           _CAN2510SetMode
             _CAN2510BitModify
               _CAN2510Disable
               _CAN2510Enable
               _WriteSPI
           _CAN2510SetSingleFilterStd
             _CAN2510ByteWrite
               _CAN2510Disable
               _CAN2510Enable
               _WriteSPI
           _CAN2510SetSingleMaskStd
             _CAN2510ByteWrite
               _CAN2510Disable
               _CAN2510Enable
               _WriteSPI
       _serial_transmit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      A7       7       65.2%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     67      97       5       94.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     3A      57       1       91.6%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     195      20        0.0%
DATA                 0      0     195       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.31 build 56723 
Symbol Table                                                                                   Tue Apr 15 18:51:13 2014

                       ??_CAN2510Enable 0001                             _SSPSTATbits 000FC7  
                      ??_CAN2510Disable 0001                       ??_CAN2510DataRead 000C  
               CAN2510Init@SPI_syncMode 0013                             __CFG_BOR$ON 000000  
                           __CFG_BORV$3 000000          __end_of_CAN2510InterruptStatus 6EB4  
                          __CFG_CP0$OFF 000000                            __CFG_CP1$OFF 000000  
                          __CFG_CP2$OFF 000000               _CAN2510SetSingleFilterStd 718A  
                          __CFG_CP3$OFF 000000                       ?_CAN2510BitModify 0003  
                                   l201 786C                                     l115 6EDC  
                                   l109 730C                                     l231 6FD0  
                                   l233 6FD8                                     l235 6FE0  
                                   l228 6FC8                                     l229 6FEA  
                                   l176 7FFE                                     l339 7B46  
                                   l291 76F6                                     l259 75C4  
                                   l372 70B4                                     l373 70CE  
                                   l390 6F50                                     l374 70B6  
                                   l366 7094                                     l375 70BA  
                                   l368 7098                                     l369 709A  
                                   l388 6F56                            __CFG_CPB$OFF 000000  
                                   _RC6 007C16                        ??_CAN2510SetMode 0006  
                          __CFG_CPD$OFF 000000                                     fsr2 000FD9  
                    ??_CAN2510BitModify 0005                                     prod 000FF3  
                                   wreg 000FE8                            __CFG_FOSC$HS 000000  
                     ??_CAN2510ByteRead 0003                       ??_CAN2510ReadMode 0005  
                          __CFG_LVP$OFF 000000                            __CFG_WDT$OFF 000000  
                                  l1005 6EEC                                    l2000 762C  
                                  l2042 74DE                                    l2124 74AE  
                                  l2220 7804                                    l2302 7ABE  
                                  l2214 77D4                                    l2320 7B08  
                                  l2304 7AD4                                    l2080 759C  
                                  l2072 7562                                    l2064 754A  
                                  l2056 74F4                                    l2208 77C6  
                                  l2314 7AF2                                    l2226 7812  
                                  l2234 7842                                    l2500 7E8E  
                                  l2420 7CFA                                    l2308 7AD8  
                                  l2164 6FE8                                    l2340 7282  
                                  l2406 7CAE                                    l2326 7B2E  
                                  l2246 78A0                                    l2094 75B6  
                                  l2078 758A                                    l2182 7748  
                                  l2512 7ECA                                    l2432 7D36  
                                  l2328 7B44                                    l2192 7780  
                                  l2176 773A                                    l2282 7A0A  
                                  l2290 7A2A                                    l2346 72B6  
                                  l2338 727C                                    l2354 72F8  
                                  l2284 7A20                                    l2526 7F16  
                                  l2446 7D78                                    l2382 7C36  
                                  l2374 7C1C                                    l1902 6F0E  
                                  l1910 7038                                    l2198 778E  
                                  l2552 7F94                                    l2480 7E38  
                                  l2368 7BEC                                    l2464 7DE4  
                                  l2288 7A24                                    l2538 7F52  
                                  l2474 7E08                                    l2458 7DB4  
                                  l2394 7C72                                    l1930 71AC  
                                  l1860 6F6C                                    l2564 7FD0  
                                  l2388 7C64                                    l2580 7148  
                                  l2494 7E80                                    l1926 719E  
                                  l2574 7138                                    l2488 7E52  
                                  l1872 6F8E                                    l1952 709E  
                                  l1858 6F60                                    l1882 6FF4  
                                  l1874 6F9A                                    l1884 7000  
                                  l1876 6FA6                                    l1956 70BE  
                                  l1886 700C                                    l1888 7018  
                                  l1986 7612                                    _BRGH 007D62  
                                  u1310 767A                                    u1315 7670  
                                  u1501 7730                                    _LATC 000F8B  
                                  u1390 75B2                                    u1615 78F2  
                                  u1801 7BC2                                    u1625 790C  
                                  u1481 770C                                    u1635 793A  
                                  u1491 771E                                    u1741 7B56  
                                  u1645 7976                                    u1751 7B68  
                                  u1655 79B4                                    u1761 7B7A  
                                  u1771 7B8C                                    u1781 7B9E  
                                  u1685 7A62                                    u1791 7BB0  
                                  u1695 7A7C                                    _SPEN 007D5F  
                                  _TRMT 007D61                                    _TXEN 007D65  
                                  _SYNC 007D64                            __CFG_PWRT$ON 000000  
                                  _main 7130                                    fsr2h 000FDA  
                                  fsr1l 000FE1                                    indf2 000FDF  
                                  fsr2l 000FD9                                    prodh 000FF4  
                                  prodl 000FF3                                    start 0000  
                         __CFG_IESO$OFF 000000                       ?_CAN2510ByteWrite 0003  
                         __CFG_MCLRE$ON 000000                      ??_CAN2510ByteWrite 0004  
                       __end_of_ReadSPI 6EF4                           can_init@F4823 0046  
                         can_init@F4819 004A                      _CAN2510BitTimeInit 70D6  
                       __end_of_OpenSPI 70D6                __end_of_interrupt_handle 730E  
                         __CFG_PLLDIV$1 000000        __size_of_can_serial_transmit_msg 04B8  
                                 ?_main 0001         CAN2510SetMsgFilterStd@bufferNum 0011  
                                 _BRG16 007DC3                      CAN2510Init@setting 0053  
                   ?_CAN2510BitTimeInit 0005                                   _SPBRG 000FAF  
                         __CFG_USBDIV$1 000000                                   _TRISC 000F94  
                _CAN2510SetMsgFilterStd 74BA                                   _TXREG 000FAD  
                         __CFG_WRT0$OFF 000000                           __CFG_WRT1$OFF 000000  
                         __CFG_WRT2$OFF 000000                           __CFG_WRT3$OFF 000000  
                error_handle@error_flag 00B6                          __CFG_EBTR0$OFF 000000  
                        __CFG_FCMEN$OFF 000000                          __CFG_EBTR1$OFF 000000  
                        __CFG_EBTR2$OFF 000000                          __CFG_EBTR3$OFF 000000  
                         __CFG_WRTB$OFF 000000                           __CFG_WRTC$OFF 000000  
                         __CFG_WRTD$OFF 000000                    CAN2510BitModify@addr 0005  
                        __CFG_EBTRB$OFF 000000                    CAN2510BitModify@mask 0003  
               __end_of_serial_transmit 6EE2                                   tablat 000FF5  
             CAN2510DataRead@bufferAddr 0051                                   status 000FD8  
              ?_CAN2510SetSingleMaskStd 0005                    ??_CAN2510BitTimeInit 0009  
                      serial_transmit@m 0001                       _CAN2510ErrorState 6FB8  
                       __initialization 71F4                      ?_CAN2510ErrorState 0001  
                          __end_of_main 718A                     ??_CAN2510ErrorState 0005  
                                ??_main 0039                 CAN2510DataRead@tempSIDL 0013  
                   CAN2510Init@counter1 001A                     CAN2510Init@counter2 001B  
                   CAN2510ByteRead@addr 0003                 CAN2510DataRead@numBytes 0008  
                         __activetblptr 000002           CAN2510SetSingleFilterStd@addr 000A  
                       __CFG_CCP2MX$OFF 000000                        __end_of_WriteSPI 6F58  
         can_serial_transmit_msg@id_msg 00BC      CAN2510SetSingleFilterStd@filterNum 000B  
             __end_of_CAN2510ErrorState 6FEC                        __end_of_can_init 74BA  
                                _SSPBUF 000FC9                               ??_ReadSPI 0001  
                             ??_OpenSPI 0003                   can_init@timing_config 002F  
                        __CFG_XINST$OFF 000000                           ?_error_handle 0001  
            CAN2510DataRead@DLCRegister 0050        CAN2510SetMsgFilterStd@currFilter 0054  
                        __CFG_STVREN$ON 000000                            _can_msg_ID_0 00D8  
                          _can_msg_ID_1 00DC                   CAN2510BitModify@value 0004  
                                _msgID0 00EB                                  _msgID1 00ED  
                                clear_0 71FA                                  clear_1 7206  
                main@can_interrupt_stat 003A                         WriteSPI@TempVar 0001  
                 can_init@buffer_config 002C                            __pdataCOMRAM 003B  
              can_serial_transmit_msg@i 00C6                can_serial_transmit_msg@u 00C5  
                                tblptrh 000FF7                                  tblptrl 000FF6  
                                tblptru 000FF8                     CAN2510ReadMode@mode 0005  
       __end_of_CAN2510SetSingleMaskStd 707E                        ?_serial_transmit 0001  
                            __accesstop 0060                 __end_of__initialization 726C  
                         ??_CAN2510Init 0016                         __CFG_PBADEN$OFF 000000  
                       _CAN2510DataRead 786E                          ??_error_handle 0036  
              CAN2510DataRead@bufferNum 0012                          __pcstackCOMRAM 0001  
              CAN2510Init@BitTimeConfig 000E                            __pidataBANK0 6EF5  
                          __pidataBANK1 730F                      CAN2510SetMode@mode 0007  
               _can_serial_transmit_msg 7B48                         _CAN2510ByteRead 6F58  
                       _CAN2510ReadMode 6EB4                   can_init@filter_0_stat 001E  
                 can_init@filter_1_stat 001F                 CAN2510Init@BufferConfig 000A  
              CAN2510DataRead@readValue 0052                              __pbssBANK0 00C7  
             __size_of_CAN2510BitModify 003E              __size_of_CAN2510ErrorState 0034  
            CAN2510BitTimeInit@databyte 004F                         can_init@SPI_bus 0034  
                   __end_of_CAN2510Init 76F8                       can_init@SPI_phase 0035  
                 __end_of_CAN2510Enable 6EAA                       ?_interrupt_handle 0001  
               ?_CAN2510SetMsgFilterStd 000C                               ?_WriteSPI 0001  
               error_handle@warning_msg 0060                      ??_interrupt_handle 0037  
                             ?_can_init 0001               __size_of_CAN2510ByteWrite 0032  
                            _buffer_num 0056                 __end_of_CAN2510DataRead 7B48  
                               _SSPCON1 000FC6                                 _SSPSTAT 000FC7  
        can_serial_transmit_msg@std_msg 007C                         can_init@mask_B0 0028  
                       can_init@mask_B1 002A                         __CFG_VREGEN$OFF 000000  
        can_serial_transmit_msg@xtd_msg 008F                    can_init@interrupt_en 0032  
                               _ReadSPI 6EE2                 __end_of_CAN2510ByteRead 6F86  
                               _OpenSPI 707E                                 __Hparam 0000  
               __end_of_CAN2510ReadMode 6EC2                                 __Lparam 0000  
             ??_can_serial_transmit_msg 0002          __end_of_CAN2510SetMsgFilterStd 75C6  
                               __pcinit 71F4        __size_of_CAN2510SetSingleMaskStd 0054  
                               __ramtop 0800                              ??_WriteSPI 0001  
                               __ptext0 7130                                 __ptext1 7276  
                               __ptext2 76F8                                 __ptext3 73B6  
                               __ptext4 74BA                                 __ptext5 702A  
                               __ptext6 718A                                 __ptext7 75C6  
                               __ptext8 707E                                 __ptext9 6F20  
                            ??_can_init 001C                    __end_of_error_handle 786E  
               __size_of_CAN2510Disable 0006                                 _rxdata0 00F3  
                               _rxdata1 00F5                           ?_CAN2510Reset 0001  
                  end_of_initialization 726C                     CAN2510DataRead@data 000A  
               __size_of_CAN2510SetMode 0018                    CAN2510ByteWrite@addr 0004  
                         __Lmediumconst 0000                             _CAN2510Init 75C6  
           __size_of_CAN2510BitTimeInit 005A                ??_CAN2510InterruptStatus 0005  
                               postdec1 000FE5                                 postdec2 000FDD  
                      WriteSPI@data_out 0002                                 postinc0 000FEE  
                               postinc1 000FE6                                 postinc2 000FDE  
         CAN2510SetMsgFilterStd@filters 000E                  CAN2510Init@SPI_busMode 0014  
       __end_of_can_serial_transmit_msg 8000                               _TRISAbits 000F92  
                             _TRISBbits 000F93                               _TRISCbits 000F94  
                        ??_CAN2510Reset 0003                        ?_CAN2510DataRead 0006  
                      _CAN2510BitModify 6FEC                       can_init@filter_B0 0020  
                     can_init@filter_B1 0024                        ?_CAN2510ByteRead 0001  
                      ?_CAN2510ReadMode 0001     CAN2510SetSingleFilterStd@writeValue 0009  
                         __pidataCOMRAM 6EC3          CAN2510SetMsgFilterStd@counter1 0012  
        CAN2510SetMsgFilterStd@counter2 0013                        OpenSPI@smp_phase 0002  
                      _CAN2510ByteWrite 6F86          CAN2510SetMsgFilterStd@modebits 0055  
                   start_initialization 71F4                          ReadSPI@TempVar 0001  
                 error_handle@reset_msg 0079                        OpenSPI@sync_mode 0003  
        CAN2510SetSingleMaskStd@maskNum 000A                __size_of_serial_transmit 0010  
       __size_of_CAN2510InterruptStatus 000A                 _CAN2510SetSingleMaskStd 702A  
                           __pdataBANK0 00E2                             __pdataBANK1 0100  
                      __CFG_LPT1OSC$OFF 000000                   __size_of_error_handle 0176  
                     __size_of_WriteSPI 0020                             __pbssCOMRAM 004A  
             error_handle@all_clear_msg 00A0                           __pcstackBANK0 0060  
                        _CAN2510Disable 6E9E                       __size_of_can_init 0104  
           CAN2510BitTimeInit@WriteData 004E                          _CAN2510SetMode 6F20  
             __size_of_interrupt_handle 0098      __size_of_CAN2510SetSingleFilterStd 006A  
            ?_CAN2510SetSingleFilterStd 0005                                ?_ReadSPI 0001  
                              ?_OpenSPI 0001                            _error_handle 76F8  
                      can_init@SPI_sync 0033                    __end_of_CAN2510Reset 6F20  
            CAN2510SetMsgFilterStd@mask 000C                  __end_of_CAN2510Disable 6EA4  
                _CAN2510InterruptStatus 6EAA                  __end_of_CAN2510SetMode 6F38  
       can_serial_transmit_msg@data_msg 00B1         CAN2510BitTimeInit@BitTimeConfig 0005  
                __size_of_CAN2510Enable 0006                   can_init@can_init_stat 001D  
                          _receive_flag 0057                            ?_CAN2510Init 000A  
     __end_of_CAN2510SetSingleFilterStd 71F4                                _PIR1bits 000F9E  
             ??_CAN2510SetSingleMaskStd 0007                        __CFG_WDTPS$32768 000000  
                             _numbytes0 00EF                               _numbytes1 00F1  
                             _rx_data_0 00C8                               _rx_data_1 00D0  
                     ??_serial_transmit 0001                __end_of_CAN2510BitModify 702A  
                       OpenSPI@bus_mode 0001                         ?_CAN2510Disable 0001  
                       ?_CAN2510SetMode 0001            can_serial_transmit_msg@F4830 0156  
          can_serial_transmit_msg@F4832 0169            can_serial_transmit_msg@F4840 00E2  
          can_serial_transmit_msg@F4834 018B            can_serial_transmit_msg@F4842 003B  
          can_serial_transmit_msg@F4836 0199            can_serial_transmit_msg@F4838 017C  
                             copy_data0 7220                               copy_data1 7240  
                             copy_data2 7260              __end_of_CAN2510BitTimeInit 7130  
              ?_can_serial_transmit_msg 0001                   CAN2510DataRead@result 0011  
              __end_of_CAN2510ByteWrite 6FB8                        __size_of_ReadSPI 0012  
                              __Hrparam 0000                                __Lrparam 0000  
                      __size_of_OpenSPI 0058                           _CAN2510Enable 6EA4  
                              _WriteSPI 6F38         CAN2510SetSingleFilterStd@filter 0005  
                              _can_init 73B6                                __ptext10 6F0A  
                              __ptext11 6EB4                                __ptext20 6F58  
                              __ptext12 70D6                                __ptext21 6F38  
                              __ptext13 6F86                                __ptext22 6EE2  
                              __ptext14 6FB8                                __ptext23 6EA4  
                              __ptext15 786E                                __ptext24 6E9E  
                              __ptext16 6FEC                                __ptext17 7B48  
                              __ptext18 6ED2                                __ptext19 6EAA  
           CAN2510Init@interruptEnables 0012                        _interrupt_handle 7276  
                         __size_of_main 005A                __size_of_CAN2510DataRead 02DA  
              ??_CAN2510SetMsgFilterStd 0010                   __size_of_CAN2510Reset 0016  
                              _msg_stat 00C7        interrupt_handle@interrupt_report 0038  
           CAN2510SetSingleMaskStd@mask 0005                          ?_CAN2510Enable 0001  
              __size_of_CAN2510ByteRead 002E                __size_of_CAN2510ReadMode 000E  
                 __CFG_CPUDIV$OSC1_PLL2 000000                    CAN2510DataRead@msgId 0006  
                 CAN2510ByteWrite@value 0003                            _CAN2510Reset 6F0A  
           ??_CAN2510SetSingleFilterStd 0007       CAN2510SetSingleMaskStd@writeValue 0009  
                  __size_of_CAN2510Init 0132                           error_handle@j 00B7  
            CAN2510ByteRead@ReturnValue 0004     can_serial_transmit_msg@buffer_0_msg 0060  
   can_serial_transmit_msg@buffer_1_msg 006E                       error_handle@F4850 0100  
                     error_handle@F4852 0140                       error_handle@F4848 0127  
                           _num_bytes_0 00E0                             _num_bytes_1 00E1  
           CAN2510ErrorState@BufferEFLG 0005                 ?_CAN2510InterruptStatus 0001  
                           _SSPCON1bits 000FC6  can_serial_transmit_msg@no_of_bytes_msg 00A2  
                       _serial_transmit 6ED2         __size_of_CAN2510SetMsgFilterStd 010C  
               CAN2510Init@SPI_smpPhase 0015  
